{"version":3,"file":"projects_test_src_app_test_lazy-form_component_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;AAA+C;AAMxB;AAMC;AACmC;AACO;AACT;;;;;;;;IAazC,4EAAiC;IAAA,uDAA2B;IAAA,4DAAY;;;IAAvC,0DAA2B;IAA3B,6FAA2B;;;IAU5D,4EAAkC;IAAA,uDAE5B;IAAA,4DAAY;;;IAFgB,0DAE5B;IAF4B,8FAE5B;;AASf,MAAM,iBAAiB;IAmB1B;QAjBA,gBAAW,GAAW,QAAQ,CAAC;QAErB,kBAAa,GAAG,IAAI,uDAAY,EAAE,CAAC;QAE7C,eAAU,GAAG,IAAI,qDAAS,CAAC;YACvB,KAAK,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,EAAE,4DAAgB,CAAC,CAAC;YACnE,IAAI,EAAE,IAAI,uDAAW,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;SACnD,CAAC,CAAC;IAWH,CAAC;IATD,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAKD,UAAU;QAEN;;;;UAIE;QACF,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACzC,CAAC;IAED,QAAQ;IACR,CAAC;IAED,mBAAmB;;QACf,IAAI,UAAI,CAAC,IAAI,0CAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;YACjC,OAAO,wBAAwB,CAAC;SACnC;QAED,OAAO,WAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;IACpE,CAAC;IAED,oBAAoB;;QAChB,IAAI,UAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,UAAU,CAAC,EAAE;YAClC,OAAO,wBAAwB,CAAC;SACnC;QAED,OAAO,WAAI,CAAC,KAAK,0CAAE,QAAQ,CAAC,OAAO,CAAC,EAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE,CAAC;IACpE,CAAC;;kFAjDQ,iBAAiB;+GAAjB,iBAAiB;QA7BtB,0EAIC;QADO,yIAAU,gBAAY,IAAC;QAE3B,oFAAkC;QACnB,0EAAe;QAAA,4DAAY;QACtC,sEAAoE;QACpE,yHAAwE;QAC5E,4DAAiB;QACjB,oFAAkC;QACnB,2EAAgB;QAAA,4DAAY;QACvC,sEAKE;QACF,2HAEkB;QACtB,4DAAiB;QACjB,6EAAuD;QACnD,wDACJ;QAAA,4DAAS;;QAvBL,qFAAwB;QAOZ,0DAAmB;QAAnB,4GAAmB;QAUnB,0DAAoB;QAApB,8GAAoB;QAKhC,0DACJ;QADI,2FACJ;;AAqEL,MAAM,cAAc;IACvB;IACA,CAAC;;4EAFQ,cAAc;2GAAd,cAAc,cAhEd,iBAAiB;+GAuDtB,+DAAmB;QACnB,4EAAkB;QAClB,mEAAc;QACd,yDAAY;QACZ,qEAAe;mIAKV,cAAc,mBAhEd,iBAAiB,aAuDtB,+DAAmB;QACnB,4EAAkB;QAClB,mEAAc;QACd,yDAAY;QACZ,qEAAe","sources":["./projects/test/src/app/test/lazy-form.component.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\nimport {\n    Component,\n    EventEmitter, Input,\n    NgModule,\n    OnInit, Output\n} from \"@angular/core\";\nimport {\n    FormControl,\n    FormGroup,\n    ReactiveFormsModule,\n    Validators\n} from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\n\n@Component({\n    selector: \"app-lazy-form\",\n    template: `\n        <form\n                [formGroup]=\"simpleForm\"\n                style=\"margin:50px;\"\n                (submit)=\"submitForm()\"\n        >\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Enter your Name</mat-label>\n                <input matInput placeholder=\"John\" formControlName=\"name\" required/>\n                <mat-error *ngIf=\"name?.invalid\">{{ getNameErrorMessage() }}</mat-error>\n            </mat-form-field>\n            <mat-form-field appearance=\"fill\">\n                <mat-label>Enter your email</mat-label>\n                <input\n                        matInput\n                        placeholder=\"john@example.com\"\n                        formControlName=\"email\"\n                        required\n                />\n                <mat-error *ngIf=\"email?.invalid\">{{\n                    getEmailErrorMessage()\n                    }}</mat-error>\n            </mat-form-field>\n            <button type=\"submit\" mat-raised-button color=\"accent\">\n                {{ buttonTitle }}\n            </button>\n        </form>\n    `,\n    styles: [],\n})\nexport class LazyFormComponent implements OnInit {\n    @Input()\n    buttonTitle: string = \"Submit\";\n\n    @Output() formSubmitted = new EventEmitter();\n\n    simpleForm = new FormGroup({\n        email: new FormControl(\"\", [Validators.required, Validators.email]),\n        name: new FormControl(\"\", [Validators.required]),\n    });\n\n    get name() {\n        return this.simpleForm.get(\"name\");\n    }\n\n    get email() {\n        return this.simpleForm.get(\"email\");\n    }\n\n    constructor() {\n    }\n\n    submitForm() {\n\n        /*\n        if (this.email?.invalid || this.name?.invalid) return;\n        this.backendService.submitForm();\n        this.formSubmitted.emit();\n        */\n        alert(\"Form submitted successfully\");\n    }\n\n    ngOnInit(): void {\n    }\n\n    getNameErrorMessage() {\n        if (this.name?.hasError(\"required\")) {\n            return \"You must enter a value\";\n        }\n\n        return this.email?.hasError(\"email\") ? \"Not a valid email\" : \"\";\n    }\n\n    getEmailErrorMessage() {\n        if (this.email?.hasError(\"required\")) {\n            return \"You must enter a value\";\n        }\n\n        return this.email?.hasError(\"email\") ? \"Not a valid email\" : \"\";\n    }\n}\n\n@NgModule({\n    declarations: [LazyFormComponent],\n    imports: [\n        ReactiveFormsModule,\n        MatFormFieldModule,\n        MatInputModule,\n        CommonModule,\n        MatButtonModule,\n    ],\n    providers: [],\n    bootstrap: [LazyFormComponent],\n})\nexport class LazyFormModule {\n    constructor() {\n    }\n}\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}