(self["webpackChunkdevice"] = self["webpackChunkdevice"] || []).push([["projects_test_src_app_test_test_module_ts"],{

/***/ 90978:
/*!********************************************************************************************************!*\
  !*** ./projects/auth/src/app/auth/oauth/components/accor-login-button/accor-login-button.component.ts ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccorLoginButtonComponent": () => (/* binding */ AccorLoginButtonComponent)
/* harmony export */ });
/* harmony import */ var _base_login_button_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base-login-button.component */ 95003);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 87317);




class AccorLoginButtonComponent extends _base_login_button_component__WEBPACK_IMPORTED_MODULE_0__.BaseLoginButton {
    constructor(injector) {
        super(injector);
    }
}
AccorLoginButtonComponent.ɵfac = function AccorLoginButtonComponent_Factory(t) { return new (t || AccorLoginButtonComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector)); };
AccorLoginButtonComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: AccorLoginButtonComponent, selectors: [["app-accor-login-button"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 6, vars: 0, consts: [[1, "accor-login-panel"], ["mat-raised-button", "", 1, "btn-login", 3, "click"], [1, "divider-or"]], template: function AccorLoginButtonComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div", 0)(1, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function AccorLoginButtonComponent_Template_button_click_1_listener() { return ctx.buttonClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Accor Member / Accor Plus Member Login");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "div", 2)(4, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](5, "or");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]()()();
    } }, dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatButton], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.btn-login[_ngcontent-%COMP%] {\n  color: var(--PC);\n  background: var(--P);\n  padding: 0.3rem 1rem;\n  border-radius: 7px;\n}\n\n.accor-login-panel[_ngcontent-%COMP%] {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 1rem;\n}\n\n.accor-login-panel[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\n  font-size: 1rem;\n  font-weight: bold;\n  color: var(--P);\n}\n\n.divider-or[_ngcontent-%COMP%] {\n  margin: 1rem 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #888;\n}\n\n.divider-or[_ngcontent-%COMP%]   span[_ngcontent-%COMP%] {\n  font-size: 1rem;\n  margin: 0 0.5rem;\n}\n\n.divider-or[_ngcontent-%COMP%]::before, .divider-or[_ngcontent-%COMP%]::after {\n  content: \"\";\n  width: 3rem;\n  height: 1px;\n  display: inline-block;\n  background: #888;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY29yLWxvZ2luLWJ1dHRvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRjs7QUFDQTtFQUNFLGdCQUFBO0VBQ0Esb0JBQUE7RUFFQSxvQkFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBQUU7RUFDRSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxlQUFBO0FBRUo7O0FBQ0E7RUFDRSxjQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0FBRUY7O0FBREU7RUFDRSxlQUFBO0VBRUEsZ0JBQUE7QUFFSjs7QUFBRTtFQUNFLFdBQUE7RUFDQSxXQUFBO0VBQ0EsV0FBQTtFQUNBLHFCQUFBO0VBQ0EsZ0JBQUE7QUFFSiIsImZpbGUiOiJhY2Nvci1sb2dpbi1idXR0b24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuLmJ0bi1sb2dpbntcbiAgY29sb3I6IHZhcigtLVBDKTtcbiAgYmFja2dyb3VuZDogdmFyKC0tUCk7XG5cbiAgcGFkZGluZzogMC4zcmVtIDFyZW07XG4gIGJvcmRlci1yYWRpdXM6IDdweDtcblxufVxuLmFjY29yLWxvZ2luLXBhbmVse1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBwe1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBjb2xvcjogdmFyKC0tUCk7XG4gIH1cbn1cbi5kaXZpZGVyLW9ye1xuICBtYXJnaW46IDFyZW0gMDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGNvbG9yOiAjODg4O1xuICBzcGFue1xuICAgIGZvbnQtc2l6ZTogMXJlbTtcblxuICAgIG1hcmdpbjogMCAwLjVyZW07XG4gIH1cbiAgJjo6YmVmb3JlLCAmOjphZnRlcntcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHdpZHRoOiAzcmVtO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICBiYWNrZ3JvdW5kOiAjODg4O1xuICB9XG5cbn0iXX0= */"] });


/***/ }),

/***/ 95003:
/*!************************************************************************************!*\
  !*** ./projects/auth/src/app/auth/oauth/components/base-login-button.component.ts ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseLoginButton": () => (/* binding */ BaseLoginButton)
/* harmony export */ });
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);



class BaseLoginButton extends _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.baseUrl = '';
        this.baseUrl = `${this.configService.getApi()}/api/v1/crm/oauth.json`;
    }
    serializeParams(obj) {
        let str = [];
        for (let p in obj)
            if (obj.hasOwnProperty(p)) {
                str.push(encodeURIComponent(p) + "=" + encodeURIComponent(obj[p]));
            }
        return str.join("&");
    }
    redirect() {
        const dest = `${this.baseUrl}?${this.serializeParams(this.params)}`;
        console.log(dest);
        location.assign(dest);
    }
    getRedirectUri() {
        const redirectParams = {
            page: this.routingService.getCurrentRoute().replace(/ *\([^)]*\) */g, '')
        };
        if (this.context.courtId) {
            redirectParams['courtId'] = this.context.courtId;
        }
        if (this.context.groupId) {
            redirectParams['groupId'] = this.context.groupId;
        }
        if (this.context.brandId) {
            redirectParams['brandId'] = this.context.brandId;
        }
        if (this.context.storeId) {
            redirectParams['storeId'] = this.context.storeId;
        }
        return `${window.location.origin}/auth/verify?${this.serializeParams(redirectParams)}`;
    }
    buttonClicked() {
        this.params = {
            redirectUri: this.getRedirectUri()
        };
        if (this.context.courtId) {
            this.params['courtId'] = this.context.courtId;
        }
        if (this.context.groupId) {
            this.params['groupId'] = this.context.groupId;
        }
        if (this.context.brandId) {
            this.params['brandId'] = this.context.brandId;
        }
        if (this.context.storeId) {
            this.params['storeId'] = this.context.storeId;
        }
        this.redirect();
    }
}
BaseLoginButton.ɵfac = function BaseLoginButton_Factory(t) { return new (t || BaseLoginButton)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector)); };
BaseLoginButton.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: BaseLoginButton, selectors: [["ng-component"]], inputs: { redirectPath: "redirectPath" }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function BaseLoginButton_Template(rf, ctx) { }, encapsulation: 2 });


/***/ }),

/***/ 29530:
/*!**********************************************************!*\
  !*** ./projects/auth/src/app/auth/oauth/oauth.module.ts ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OauthModule": () => (/* binding */ OauthModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/ui/src/app/ui/ui.module */ 39420);
/* harmony import */ var _aigens_ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/ux/src/app/ux/ux.module */ 79420);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _components_accor_login_button_accor_login_button_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/accor-login-button/accor-login-button.component */ 90978);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);








class OauthModule {
}
OauthModule.ɵfac = function OauthModule_Factory(t) { return new (t || OauthModule)(); };
OauthModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({ type: OauthModule });
OauthModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({ imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateModule,
        _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__.UiModule,
        _aigens_ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_2__.UxModule,
        _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.FrameworkModule,
        _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButtonModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](OauthModule, { declarations: [_components_accor_login_button_accor_login_button_component__WEBPACK_IMPORTED_MODULE_3__.AccorLoginButtonComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateModule,
        _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_1__.UiModule,
        _aigens_ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_2__.UxModule,
        _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.FrameworkModule,
        _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButtonModule], exports: [_components_accor_login_button_accor_login_button_component__WEBPACK_IMPORTED_MODULE_3__.AccorLoginButtonComponent] }); })();


/***/ }),

/***/ 85783:
/*!****************************************************************!*\
  !*** ./projects/byod/src/app/byod/framework/base/base-page.ts ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrderBasePage": () => (/* binding */ OrderBasePage)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _aigens_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/deep-link.service */ 13661);
/* harmony import */ var _aigens_core_src_app_data_data_item__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/data/data/item */ 5647);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _services_cart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../services/cart.service */ 54729);
/* harmony import */ var _services_layout_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../services/layout.service */ 81623);
/* harmony import */ var _services_order_flow_manager_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../services/order-flow-manager.service */ 29331);
/* harmony import */ var _aigens_core_src_app_data__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aigens/core/src/app/data */ 51707);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);










class OrderBasePage extends aigens_framework__WEBPACK_IMPORTED_MODULE_2__.BasePage {
    constructor(injector) {
        super(injector);
        this.orderManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_2__.OrderManager);
        this.cartService = injector.get(_services_cart_service__WEBPACK_IMPORTED_MODULE_3__.CartService);
        this.orderContext = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_2__.OrderContext);
        this.layoutService = injector.get(_services_layout_service__WEBPACK_IMPORTED_MODULE_4__.LayoutService);
        this.orderFlowManager = injector.get(_services_order_flow_manager_service__WEBPACK_IMPORTED_MODULE_5__.OrderFlowManager);
        this.deepLinkService = injector.get(_aigens_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_0__.DeepLinkService);
    }
    isParent(item) {
        return item && _aigens_core_src_app_data_data_item__WEBPACK_IMPORTED_MODULE_1__.Item.isVariations(item, this.settingManager.get('singleChildShowVariation', false));
    }
    parentItemsHandle(category, mainItemGroup, mainItem, isRecommend = false, opt = null) {
        // let items = mainItem?.variations;
        var _a, _b, _c;
        let items = ((_a = mainItem === null || mainItem === void 0 ? void 0 : mainItem.variations) === null || _a === void 0 ? void 0 : _a.slice(0)) || [];
        if (mainItem.id === mainItem.parentId) {
            items.splice(0, 0, mainItem);
        }
        else {
            items.push(mainItem);
        }
        // sort the same type of combo
        items = items === null || items === void 0 ? void 0 : items.sort((a, b) => a.price - b.price);
        if (!(this.orderFlowManager.isMenuFirstFlowAndNotConfirmed() &&
            this.orderFlowManager.isOrderModeSelectionOnItemClick())) {
            this.analyticsService.trackSelectItem(category, mainItemGroup, mainItem);
        }
        else {
            this.deepLinkService.addPendingItem(mainItem.id, false);
        }
        if (((_b = mainItemGroup === null || mainItemGroup === void 0 ? void 0 : mainItemGroup.filters) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = mainItemGroup === null || mainItemGroup === void 0 ? void 0 : mainItemGroup.filters2) === null || _c === void 0 ? void 0 : _c.length) > 0 && items.length > 1) {
            this.filterVariationsItemsHandle(category, mainItemGroup, items, 'normal', isRecommend);
        }
        else {
            this.variationsItemsHandle(category, mainItemGroup, items, isRecommend);
        }
    }
    parentItemsHandle_multiSteps(category, mainItemGroup, mainItem, isRecommend = false, opt) {
        var _a, _b, _c;
        let items = ((_a = mainItem === null || mainItem === void 0 ? void 0 : mainItem.variations) === null || _a === void 0 ? void 0 : _a.slice(0)) || [];
        if (mainItem.id === mainItem.parentId) {
            items.splice(0, 0, mainItem);
        }
        else {
            items.push(mainItem);
        }
        // sort the same type of combo
        items = items === null || items === void 0 ? void 0 : items.sort((a, b) => a.price - b.price);
        if (((_b = mainItemGroup === null || mainItemGroup === void 0 ? void 0 : mainItemGroup.filters) === null || _b === void 0 ? void 0 : _b.length) > 0 && ((_c = mainItemGroup === null || mainItemGroup === void 0 ? void 0 : mainItemGroup.filters2) === null || _c === void 0 ? void 0 : _c.length) > 0 && items.length > 1) {
            this.filterVariationsItemsHandle(category, mainItemGroup, items, 'multi-steps', isRecommend);
        }
        else {
            this.variationsItemsHandle_MultiStepsCombo(category, mainItemGroup, mainItem, items, isRecommend);
        }
    }
    variationsItemsHandle_MultiStepsCombo(category, mainItemGroup, mainItem, variationsItems, isRecommend = false, opt) {
        let isUnlockItem = (category === null || category === void 0 ? void 0 : category.type) === 'unlock' || (category === null || category === void 0 ? void 0 : category.type) === 'unlockItem';
        var input = {
            isUnlockItem,
            category: category,
            mainItemGroup: mainItemGroup,
            variationsItems: variationsItems,
            baseItem: mainItem,
            isRecommend,
            opt
        };
        var path = 'order/dialog/multi-steps-combo';
        this.dialogService.openAux(path, input, this.getItemHandleModalOptions(opt), (result) => {
            console.log('variationsItemsHandle_MultiStepsCombo callback');
            // 关闭 dialog
            // this.routingService.navigateCloseAllModal();
            if (isUnlockItem || !this.isCloseAllDialogAfterAddToCart()) {
                this.routingService.navigateCloseModalTo();
            }
            else {
                this.routingService.navigateCloseAllModal();
            }
        });
    }
    variationsItemsHandle(category, mainItemGroup, variationsItems, isRecommend = false) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            var input = {
                category: category,
                mainItemGroup: mainItemGroup,
                variationsItems: variationsItems
            };
            var path = 'order/dialog/variations';
            this.dialogService.openAux(path, input, { autoClose: false }, (result) => {
                var _a;
                if (result === null || result === void 0 ? void 0 : result.item) {
                    console.log("VAR RESULT", result.item);
                    if ((_a = this.cartService) === null || _a === void 0 ? void 0 : _a.isSoldout(result.item)) {
                        console.log('is Soldout');
                        return;
                    }
                    const isVariationsItem = true; // 从variationsItems发起的alacart， 若有modifiers，选完modifier后close all modal
                    this.itemHandle(category, mainItemGroup, result.item, 'normal', isRecommend, null, isVariationsItem);
                }
            });
        });
    }
    filterVariationsItemsHandle(category, mainItemGroup, variationsItems, layout = 'normal', isRecommend = false, opt) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            var input = {
                category: category,
                mainItemGroup: mainItemGroup,
                variationsItems: variationsItems
            };
            var path = 'order/dialog/filter-variations';
            this.dialogService.openAux(path, input, this.getItemHandleModalOptions(opt), (result) => {
                var _a;
                if (result === null || result === void 0 ? void 0 : result.item) {
                    console.log('VAR RESULT', result.item);
                    if ((_a = this.cartService) === null || _a === void 0 ? void 0 : _a.isSoldout(result.item)) {
                        console.log('is Soldout');
                        return;
                    }
                    if (layout === 'multi-steps') {
                        return this.variationsItemsHandle_MultiStepsCombo(category, mainItemGroup, result.item, [result.item], isRecommend, opt);
                    }
                    return this.itemHandle(category, mainItemGroup, result.item, 'normal', isRecommend, opt);
                }
            });
        });
    }
    /**
     * isVariationsItem: judge is added from Variations Dialog page
     */
    itemHandle(category, mainItemGroup, mainItem, flow = 'normal', isRecommend = false, opt, isVariationsItem = false) {
        let combo = _aigens_core_src_app_data_data_item__WEBPACK_IMPORTED_MODULE_1__.Item.isSet(category, mainItem);
        if (!(this.orderFlowManager.isMenuFirstFlowAndNotConfirmed() &&
            this.orderFlowManager.isOrderModeSelectionOnItemClick())) {
            this.analyticsService.trackSelectItem(category, mainItemGroup, mainItem);
        }
        else {
            // addSearchItem is invoked when user do search item and in menu first flow state
            if (this.isFromSearchItemFlow()) {
                this.deepLinkService.addPendingSearchItem(mainItem, false);
            }
            else {
                this.deepLinkService.addPendingItem(mainItem.id, false, isRecommend);
            }
        }
        let isUnlockItem = (category === null || category === void 0 ? void 0 : category.type) === 'unlock' || (category === null || category === void 0 ? void 0 : category.type) === 'unlockItem';
        if (!combo || (category === null || category === void 0 ? void 0 : category.igMode) === 'single') {
            this.alacarteItemHandle(category, mainItemGroup, mainItem, isUnlockItem, flow, isRecommend, opt, isVariationsItem);
        }
        else if (combo) {
            this.comboHandle(category, mainItemGroup, mainItem, isUnlockItem, isRecommend, opt);
        }
        else {
            this.alacarteItemHandle(category, mainItemGroup, mainItem, isUnlockItem, flow, isRecommend, opt);
        }
    }
    removeItemHandle(category, mainItemGroup, mainItem) {
        let isAlacarte = !_aigens_core_src_app_data_data_item__WEBPACK_IMPORTED_MODULE_1__.Item.isSet(category, mainItem) || (category === null || category === void 0 ? void 0 : category.igMode) === 'single';
        const oi = this.orderManager.findOrderItem(mainItem);
        if (isAlacarte) {
            this.cartService.minusHandle(oi);
        }
        else {
            console.log('Not alacarte item, cannot remove');
        }
    }
    comboHandle(category, mainItemGroup, mainItem, isUnlockItem = false, isRecommend = false, opt) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            console.log('combo handle');
            var input = {
                mainItem,
                category,
                mainItemGroup,
                isUnlockItem,
                isRecommend,
                opt
            };
            var path = 'order/dialog/combo';
            this.dialogService.openAux(path, input, this.getItemHandleModalOptions(opt), result => {
                console.log('dismiss ComboDialog callback resul:', result);
                if (isUnlockItem || !this.isCloseAllDialogAfterAddToCart()) {
                    this.routingService.navigateCloseModal();
                }
                else {
                    this.routingService.navigateCloseAllModal();
                }
            });
        });
    }
    alacarteItemHandle(category, mainItemGroup, mainItem, isUnlockItem = false, flow = 'normal', isRecommend = false, opt, isVariationsItem = false) {
        var _a, _b;
        if (flow == 'order') {
            isUnlockItem = false;
        }
        if (flow == 'checkout' || (this.settingManager.get('menu.quickAlacarte', false) && flow == 'normal')) {
            // when isUnlockItem = true , it adds the unlockItem to unlockCatOrderManager first
            // and then the unlock-orderitems adds to this.orderManager When user click comfirm-btn in unlock-Dialog
            let currentOrderManager = isUnlockItem ? (_a = this.cartService) === null || _a === void 0 ? void 0 : _a.unlockCatOrderManager : this.orderManager;
            // if quick ala carte, then check if menu first flow not confirm & item on click mode
            if (this.orderFlowManager.isMenuFirstFlowAndNotConfirmed() && this.orderFlowManager.isOrderModeSelectionOnItemClick()) {
                // if yes try call popup alacarte to trigger open directory dialog
                this.popUpAlacarteDialog(category, mainItemGroup, mainItem, isUnlockItem, isRecommend, opt);
                return;
            }
            if (!this.cartService.isRequiredModifier(mainItem) && !this.settingManager.get('menu.alwaysPromptModifier', false)) {
                if (!isUnlockItem) {
                    this.routingService.navigateCloseModal();
                }
                const oi = currentOrderManager.addSingleItem(category, mainItemGroup, mainItem, false, isRecommend, '', true);
            }
            else {
                if (((_b = mainItem.mgroups) === null || _b === void 0 ? void 0 : _b.length) > 0) {
                    const oi = currentOrderManager.createOrderItem(category, mainItemGroup, mainItem);
                    if ((mainItem === null || mainItem === void 0 ? void 0 : mainItem.min) > 1) { // check min item quantity
                        oi.quantity = mainItem.min;
                    }
                    this.openModifier(oi, isRecommend, isUnlockItem, opt, isVariationsItem);
                }
                else {
                    const oi = currentOrderManager.addSingleItem(category, mainItemGroup, mainItem, false, isRecommend, '', true);
                    this.analyticsService.trackAddToCart(oi);
                    this.routingService.isAux() && this.routingService.navigateCloseModal();
                }
            }
            return;
        }
        this.popUpAlacarteDialog(category, mainItemGroup, mainItem, isUnlockItem, isRecommend, opt);
        // let isHasModifier = mainItem?.mgroups?.length > 0;
        // console.log('isHasModifier', isHasModifier);
        // if (isHasModifier) {
        //     let orderItem = this.orderManager.createOrderItem(category, mainItemGroup, mainItem);
        //     this.modifierClicked(orderItem, isUnlockItem);
        // } else {
        //     // this.orderManager.addSingleItem(category, mainItemGroup, mainItem);
        //     // console.log(this.orderManager.order);
        //     this.popUpAlacarteDialog(category, mainItemGroup, mainItem, isUnlockItem);
        // }
    }
    popUpAlacarteDialog(category, mainItemGroup, mainItem, isUnlockItem = false, isRecommend = false, opt) {
        console.log('popUpAlacarteDialog');
        var input = {
            mainItem,
            category,
            mainItemGroup,
            isUnlockItem,
            isRecommend,
            opt
        };
        var path = 'order/dialog/alacarte';
        this.dialogService.openAux(path, input, this.getItemHandleModalOptions(opt), result => {
            console.log('dismiss AlacarteDialog callback resul:', result);
            if (isUnlockItem || !this.isCloseAllDialogAfterAddToCart()) {
                this.routingService.navigateCloseModalTo();
            }
            else {
                this.routingService.navigateCloseAllModal();
            }
        });
    }
    // TODO: use device config this.context.getDeviceConfig("checkItemMax")
    itemSelected(event) {
        var _a;
        if (this.court) {
            this.orderManager.switchManager(this.orderContext.storeId);
        }
        let category = event.category;
        let itemgroup = event.itemgroup;
        let item = event.item;
        let type = event.type || 'add';
        let isRecommend = (_a = event.isRecommend) !== null && _a !== void 0 ? _a : false;
        if (type === 'add') {
            // if mainItem 存在 mainItem.variations 不需要check mainItem 库存(flow 会在 variationsDialog 选择 item时 check)
            if (!this.orderManager.checkInventory(item, (this.orderManager.getQuantity(item) + 1)) && !(item === null || item === void 0 ? void 0 : item.variations)) {
                const msg = this.t.instant('byod.components.cart.dialog-insufficient-stock', { stock: this.orderManager.getInv(item) });
                this.dialogService.showAlert('', msg);
                return;
            }
            if (!this.canAddItem(item)) {
                this.dialogService.showToast(this.t.instant('byod.pages.base-page.item-max-message'), 500, 'top');
                return;
            }
            if (this.orderManager.checkOrderMaxItem(1)) {
                this.dialogService.showToast(this.t.instant('byod.components.cart.max-order-amount-reached', { amount: this.orderContext.store.menu.maxItems }), 2000, 'top');
                return;
            }
            // if (this.isParent(item)) {
            //     this.defaultParentItemsHandle(category, itemgroup, item);
            // } else {
            //     if (this.cartService?.isSoldout(item)) {
            //         console.log('is Soldout');
            //         return;
            //     }
            //     this.itemHandle(category, itemgroup, item);
            // }
            this.menuLayoutHandle(category, itemgroup, item, isRecommend, event.opt);
        }
        else if (type === 'remove') {
            this.removeItemHandle(category, itemgroup, item);
        }
    }
    // 判断 menu layout setting 入不同的layout
    menuLayoutHandle(category, mainItemGroup, mainItem, isRecommend = false, opt) {
        var _a, _b;
        let setLayout = (_a = this.layoutService) === null || _a === void 0 ? void 0 : _a.getSetLayout(mainItem);
        console.log('setLayout', setLayout);
        if (!setLayout) {
            console.warn('no setLayout');
        }
        // return 'ComboPage';
        switch (setLayout) {
            case 'multi-steps':
                console.log('multi-steps', setLayout);
                // todo
                // if (this.isParent(mainItem)) {
                this.parentItemsHandle_multiSteps(category, mainItemGroup, mainItem, isRecommend, opt);
                // } else {
                //     if (this.cartService?.isSoldout(mainItem)) {
                //         console.log('is Soldout');
                //         return null;
                //     }
                //     this.itemHandle(category, mainItemGroup, mainItem);
                // }
                break;
            case 'multi-page':
            case 'multi-page-with-image':
            case 'single-page':
            default:
                if (this.isParent(mainItem)) {
                    this.parentItemsHandle(category, mainItemGroup, mainItem, isRecommend, opt);
                }
                else {
                    if ((_b = this.cartService) === null || _b === void 0 ? void 0 : _b.isSoldout(mainItem)) {
                        console.log('is Soldout');
                        return null;
                    }
                    this.itemHandle(category, mainItemGroup, mainItem, 'normal', isRecommend, opt);
                }
        }
    }
    modifierClicked(orderItem, isUnlockItem = false) {
        console.log('AllModifiersDialogComponent(isUnlockItem)', isUnlockItem);
        var input = {
            orderItem,
            edit: false,
            callback: (result) => {
                // 考虑过 不写 callback,搬到 AllModifiersDialogComponent,但难处理，combo版也有调用 AllModifiersDialogComponent(不需要写addOrderItem)
                console.log('The AllModifiersDialogComponent was closed', result);
                let orderItem = result === null || result === void 0 ? void 0 : result.orderItem;
                orderItem && this.orderManager.addOrderItem(orderItem);
                // this.orderItemBuilder.updateByOi(orderItem);
                console.log('this.oi', orderItem);
                console.log('this.oi', this.orderManager.order);
            }
        };
        var path = "order/dialog/all-modifiers";
        this.dialogService.openAux(path, input);
    }
    canAddItem(item) {
        return this.cartService.canAddItem(item);
    }
    /**
     * @description:
     * @param {number} max unlockCat items Max
     * @param {*} addingQua 即将adding 的数量
     * @return {*}
     */
    canAddUnlockItem(max, addingQua = 0) {
        let currentQua = this.getUnlockManagerAmount();
        return max && (currentQua + addingQua) < max;
    }
    showUnlockItemMaxAlert(max) {
        var _a;
        (_a = this.dialogService) === null || _a === void 0 ? void 0 : _a.showToast(this.t.instant('byod.dialogs.unlock-dialog.max-unlock-item-amount-reached', { amount: max }), 2000, 'top');
    }
    // 获取 选中的unlockitem 数量
    getUnlockManagerAmount() {
        // let order = this.cartService?.unlockCatOrderManager?.getOrder();
        // let amount = order ? Order.getCount(order) : 0;
        // return amount;
        var _a, _b, _c, _d, _e;
        const oi = (_e = (_d = (_c = (_b = (_a = this.cartService) === null || _a === void 0 ? void 0 : _a.unlockCatOrderManager) === null || _b === void 0 ? void 0 : _b.getActiveManager()) === null || _c === void 0 ? void 0 : _c.getOrder()) === null || _d === void 0 ? void 0 : _d.orderitems) === null || _e === void 0 ? void 0 : _e.filter(f => f.category.id == this.cartService.unlockCatCurrent.id);
        const x = { orderitems: oi };
        return (oi === null || oi === void 0 ? void 0 : oi.length) > 0 ? _aigens_core_src_app_data__WEBPACK_IMPORTED_MODULE_6__.Order.getCount(x) : 0;
    }
    canMinusItem(item) {
        return this.cartService.canMinusItem(item);
    }
    openModifier(orderItem, isRecommend = false, isUnlockItem = false, opt, isVariationsItem = false) {
        var _a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_7__.__awaiter)(this, void 0, void 0, function* () {
            const currentOrderManager = isUnlockItem ? (_a = this.cartService) === null || _a === void 0 ? void 0 : _a.unlockCatOrderManager : this.orderManager;
            var input = {
                orderItem,
                edit: false
            };
            var path = 'order/dialog/all-modifiers';
            this.dialogService.openAux(path, input, { autoClose: false }, (result) => {
                let orderItem = result === null || result === void 0 ? void 0 : result.orderItem;
                if (orderItem) {
                    currentOrderManager.addOrderItem(orderItem, isRecommend);
                }
                if (opt === null || opt === void 0 ? void 0 : opt.callbackAfterAddToCart) {
                    opt.callbackAfterAddToCart(orderItem, orderItem, opt);
                }
                if (isUnlockItem) {
                    this.routingService.navigateCloseModalTo();
                }
                else if (isVariationsItem) {
                    this.routingService.navigateCloseAllModal();
                }
                else {
                    this.routingService.navigateCloseModal();
                }
            });
        });
    }
    getItemQuantity(item) {
        return this.orderManager.getQuantity(item);
    }
    getIsParent(item) {
        return !!(item.variations && item.variations.length > 0);
    }
    checkSelected(cat, item) {
        var _a;
        let order = this.orderManager.getOrder();
        let selected = false;
        let variationsId = [];
        if (!(((_a = order === null || order === void 0 ? void 0 : order.orderitems) === null || _a === void 0 ? void 0 : _a.length) > 0)) {
            return false;
        }
        if (this.getIsParent(item)) {
            item.variations.map((variation, i) => {
                variationsId.push(variation.id);
            });
        }
        order.orderitems.map((oi) => {
            var _a;
            if (((_a = oi === null || oi === void 0 ? void 0 : oi.items[0]) === null || _a === void 0 ? void 0 : _a.id) === (item === null || item === void 0 ? void 0 : item.id) && (oi === null || oi === void 0 ? void 0 : oi.categoryId) === (cat === null || cat === void 0 ? void 0 : cat.id)) { // sometimes item is belong to two different cat, so judge by item.id is not works
                selected = true;
                return;
            }
            if (variationsId.length > 0) {
                variationsId.map((vId) => {
                    var _a;
                    if (((_a = oi.items[0]) === null || _a === void 0 ? void 0 : _a.id) === vId && (oi === null || oi === void 0 ? void 0 : oi.categoryId) === (cat === null || cat === void 0 ? void 0 : cat.id)) {
                        selected = true;
                        return;
                    }
                });
            }
        });
        return selected;
    }
    /**
     * Override in child. This one is flag to determine user click item on search item page.
     * Will be used as a flag to add the item into deeplink service.
     */
    isFromSearchItemFlow() {
        return false;
    }
    isCloseAllDialogAfterAddToCart() {
        return true;
    }
    isCartPaymentMethodPromptEnabled() {
        return this.orderContext.mode != 'byod' &&
            this.orderContext.mode != 'preorder' &&
            this.settingManager.get('cartPaymentMethodPrompt', false);
    }
    isCartPaymentMethodPromptEnabledByod(mode) {
        return mode === 'byod' &&
            this.settingManager.get('cartPaymentMethodPrompt', false);
    }
    getItemHandleModalOptions(opt) {
        const options = { autoClose: false };
        const qp = {};
        if (opt === null || opt === void 0 ? void 0 : opt.mandatory) {
            qp.disableClose = true;
        }
        if (opt === null || opt === void 0 ? void 0 : opt.deepLinkMode) {
            qp.src = 'deepLink';
        }
        if (Object.keys(qp).length != 0) {
            options.queryParams = qp;
        }
        return options;
    }
}
OrderBasePage.ɵfac = function OrderBasePage_Factory(t) { return new (t || OrderBasePage)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injector)); };
OrderBasePage.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: OrderBasePage, selectors: [["ng-component"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵInheritDefinitionFeature"]], decls: 0, vars: 0, template: function OrderBasePage_Template(rf, ctx) { }, encapsulation: 2 });


/***/ }),

/***/ 54729:
/*!*************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/cart.service.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CartService": () => (/* binding */ CartService)
/* harmony export */ });
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var _common_base_cart_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../common/base-cart.service */ 36248);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash-es */ 38163);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash-es */ 84251);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _menu_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./menu.service */ 63292);
/* harmony import */ var _aigens_directory_src_app_directory_services_directory_context_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aigens/directory/src/app/directory/services/directory-context-manager.service */ 7567);
/* harmony import */ var _order_context_manager_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./order-context-manager.service */ 4911);
/* harmony import */ var _aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/routing.service */ 28759);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);












class CartService extends _common_base_cart_service__WEBPACK_IMPORTED_MODULE_2__.BaseCartService {
    constructor(injector, menuService, directoryContextManager, orderContextManager, routingService, analyticsService, subscribeService, discountManager) {
        super(injector);
        this.injector = injector;
        this.menuService = menuService;
        this.directoryContextManager = directoryContextManager;
        this.orderContextManager = orderContextManager;
        this.routingService = routingService;
        this.analyticsService = analyticsService;
        this.subscribeService = subscribeService;
        this.discountManager = discountManager;
        this.DISCOUNT_ID_OFFER_ID_SEPARATOR = '#';
        this.itemMap = {}; // sometimes origin item existes attr.mgroups but item.mgroups is null in builder, So createing this itemMap to find the origin data(v3)
        this.modifiableMap = {};
        this.requiredModifierMap = {};
        this.unlockDiscountsArrMap = {}; // 根据 unlock conditions 分三种 (promoCode , reward , others)
        this.couponSetKeyMap = {};
        this.calculateOrder_checkoutPageCallback = null;
        /** some logic about applying discount start */ // todo: to New DiscountService?
        this.promoCode = null;
        this.emailReceipt = false;
        this.phoneNotify = false;
        this.isCourt = false;
        this.hasCrm = false;
    }
    clearCartServiceDataAfterPostOrderJson() {
        // clear some data after posting order successly
        this.promoCode = null;
    }
    clearUnlockCatOrderManager(isCalculate = false) {
        this.unlockCatOrderManager = null;
        // 加完unlockItem 是否需要再次 calculate.json
        isCalculate && this.calculateOrder_checkoutPageCallback && this.calculateOrder_checkoutPageCallback();
    }
    setCalculateCallback(callback = null) {
        this.calculateOrder_checkoutPageCallback = () => {
            console.log('CartService calculateOrder_checkoutPageCallback');
            setTimeout(() => {
                console.log('this', this);
                callback && callback();
            }, 500);
        };
    }
    // it should clear the reward-unlock-orderItem when clear the all rewards
    removeAllRewardUnlockItem() {
        var _a, _b;
        console.log('removeRewardUnlockItem');
        const allRewardOiUnlockCat = [];
        const allRewardOiUnlockItem = [];
        (_b = (_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.order) === null || _b === void 0 ? void 0 : _b.orderitems.forEach(oi => {
            if ((oi === null || oi === void 0 ? void 0 : oi.unlockDiscountConditionType) === 'reward' && (oi === null || oi === void 0 ? void 0 : oi.discountId)) {
                if ((oi === null || oi === void 0 ? void 0 : oi.categoryType) == 'unlockItem') {
                    allRewardOiUnlockItem.push(oi);
                }
                else {
                    allRewardOiUnlockCat.push(oi === null || oi === void 0 ? void 0 : oi.category);
                }
            }
        });
        allRewardOiUnlockCat === null || allRewardOiUnlockCat === void 0 ? void 0 : allRewardOiUnlockCat.forEach(id => this.removeUnlockItemByUnlockCat(id));
        allRewardOiUnlockItem === null || allRewardOiUnlockItem === void 0 ? void 0 : allRewardOiUnlockItem.forEach(oi => {
            var _a;
            const storeId = oi === null || oi === void 0 ? void 0 : oi.storeId;
            const itemId = (_a = oi === null || oi === void 0 ? void 0 : oi.items[0]) === null || _a === void 0 ? void 0 : _a.id;
            this.removeUnlockItemByItemId(itemId, storeId);
        });
    }
    removeUnlockItemByUnlockCat(unlockCat) {
        // it should remove the promo-code-unlock-item when user clear promo code which triggger the unlockCat flow
        this.orderManager.removeUnlockItems(unlockCat);
    }
    removeUnlockItemByDiscountId(discountId, storeId) {
        if (storeId) {
            this.orderManager.switchManager(storeId);
        }
        this.orderManager.removeUnlockByDiscountId(discountId);
    }
    removeUnlockItemByItemId(itemId, storeId) {
        if (storeId) {
            this.orderManager.switchManager(storeId);
        }
        this.orderManager.removeUnlockByItemId(itemId);
    }
    comboOiEditHandle(oi, opt) {
        var _a, _b;
        // orderItem 里的 category groups  数据不完整
        let mainItem = this.getOriginMainItem((_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.getStoreFromActiveManager(), oi);
        let category = oi === null || oi === void 0 ? void 0 : oi.category;
        let mainItemGroup = (_b = category === null || category === void 0 ? void 0 : category.groups) === null || _b === void 0 ? void 0 : _b[0];
        this.popupComboDialog(category, mainItemGroup, mainItem, oi, opt);
    }
    alaCarteOiEditHandle(oi) {
        var _a, _b;
        // orderItem 里的 category groups  数据不完整
        let mainItem = this.getOriginMainItem((_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.getStoreFromActiveManager(), oi);
        let customMainItem = this.getMainItem(oi);
        let category = oi === null || oi === void 0 ? void 0 : oi.category;
        let mainItemGroup = (_b = category === null || category === void 0 ? void 0 : category.groups) === null || _b === void 0 ? void 0 : _b[0];
        this.popupAlaCarteDialog(category, mainItemGroup, mainItem, oi, customMainItem);
    }
    alacarteModifierOiEditHandle(oi, opt) {
        this.popupAlacarteModifier(oi, opt);
    }
    multiStepsEditHandle(oi, opt) {
        var _a, _b;
        // orderItem 里的 category groups  数据不完整
        let mainItem = this.getOriginMainItem((_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.getStoreFromActiveManager(), oi);
        let category = oi === null || oi === void 0 ? void 0 : oi.category;
        let mainItemGroup = (_b = category === null || category === void 0 ? void 0 : category.groups) === null || _b === void 0 ? void 0 : _b[0];
        this.popupMultiStepsComboDialog(category, mainItemGroup, mainItem, oi, opt);
    }
    popupAlacarteModifier(editOi, opt) {
        var input = {
            editOi,
            edit: true,
            callback: (result) => {
                console.log('this.orderManager.order', this.orderManager.order);
            },
            opt
        };
        var path = 'order/dialog/all-modifiers';
        this.dialogService.openAux(path, input, { autoClose: false }, (result) => {
            if (opt === null || opt === void 0 ? void 0 : opt.callbackAfterAddToCart) {
                const oi = result.orderItem;
                opt.callbackAfterAddToCart(null, oi, opt);
            }
            this.routingService.navigateCloseModal();
        });
    }
    popupComboDialog(category, mainItemGroup, mainItem, editOi = null, opt) {
        console.log('cart combo edit handle');
        var input = {
            mainItem,
            category,
            mainItemGroup,
            editOi,
            opt
        };
        var path = 'order/dialog/combo';
        this.dialogService.openAux(path, input, { autoClose: false }, (result) => {
            if (aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem === null || aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem === void 0 ? void 0 : aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem.isOrderItemHasCategoryType(editOi, 'unlock')) { // edit unlock item in checkoutPage so it need to call calculate.json
                this.calculateOrder_checkoutPageCallback && this.calculateOrder_checkoutPageCallback();
            }
            this.routingService.navigateCloseModal();
        });
    }
    popupAlaCarteDialog(category, mainItemGroup, mainItem, editOi = null, customMainItem) {
        console.log('cart ala carte edit handle');
        var input = {
            mainItem,
            category,
            mainItemGroup,
            custom: customMainItem.custom,
            editOi
        };
        var path = 'order/dialog/alacarte';
        this.dialogService.openAux(path, input, {});
    }
    popupMultiStepsComboDialog(category, mainItemGroup, mainItem, editOi = null, opt) {
        console.log('cart multi steps combo edit handle');
        var input = {
            baseItem: mainItem,
            variationsItems: [mainItem],
            category,
            mainItemGroup,
            editOi,
            opt
        };
        var path = 'order/dialog/multi-steps-combo';
        this.dialogService.openAux(path, input, { autoClose: false }, (result) => {
            console.log('popupMultiStepsComboDialog callback');
            if (aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem === null || aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem === void 0 ? void 0 : aigens_data__WEBPACK_IMPORTED_MODULE_1__.OrderItem.isOrderItemHasCategoryType(editOi, 'unlock')) { // edit unlock item in checkoutPage so it need to call calculate.json
                this.calculateOrder_checkoutPageCallback && this.calculateOrder_checkoutPageCallback();
            }
            this.routingService.navigateCloseAllModal();
        });
    }
    /**
     * @description: // user edits OI in cartPage which sometimes lead to order not meeting with the discount.
     * it will change the orderManager.order
     * @return {*}
     */
    discountOIHandle() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;
        let discountsOIs = [];
        if ((_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.multi) { // court mode
            (_d = (_c = (_b = this.orderManager) === null || _b === void 0 ? void 0 : _b.order) === null || _c === void 0 ? void 0 : _c.subs) === null || _d === void 0 ? void 0 : _d.forEach(od => {
                var _a;
                discountsOIs.push(...(_a = od.orderitems) === null || _a === void 0 ? void 0 : _a.filter(oi => oi === null || oi === void 0 ? void 0 : oi.discountId));
            });
        }
        else {
            discountsOIs = (_g = (_f = (_e = this.orderManager) === null || _e === void 0 ? void 0 : _e.order) === null || _f === void 0 ? void 0 : _f.orderitems) === null || _g === void 0 ? void 0 : _g.filter(oi => oi === null || oi === void 0 ? void 0 : oi.discountId);
        }
        let discountsIds = (_k = (_j = (_h = this.orderManager) === null || _h === void 0 ? void 0 : _h.order) === null || _j === void 0 ? void 0 : _j.discounts) === null || _k === void 0 ? void 0 : _k.map(discount => discount === null || discount === void 0 ? void 0 : discount.id);
        console.log('discountOIHandle discountsOIs', discountsOIs);
        console.log('discountOIHandle discountsIds', discountsIds);
        let removeOis = discountsOIs === null || discountsOIs === void 0 ? void 0 : discountsOIs.filter(oi => {
            return discountsIds.filter(f => oi === null || oi === void 0 ? void 0 : oi.discountId.includes(f)).length == 0;
        });
        if ((removeOis === null || removeOis === void 0 ? void 0 : removeOis.length) > 0) {
            const subtitle = this.t.instant('byod.dialogs.unlock-dialog.remove-unlock-item');
            this.byodDialogService.showAlert('', subtitle, res => {
                switch (res) {
                    case 'confirm':
                        // 目前只有 unlock discount会 add to orderManager.order.orderItems
                        removeOis.forEach(oi => {
                            var _a;
                            if ((oi === null || oi === void 0 ? void 0 : oi.categoryType) == 'unlockItem') {
                                this.removeUnlockItemByItemId((_a = oi === null || oi === void 0 ? void 0 : oi.items[0]) === null || _a === void 0 ? void 0 : _a.id, oi.storeId);
                            }
                            else {
                                this.removeUnlockItemByUnlockCat(oi === null || oi === void 0 ? void 0 : oi.category);
                            }
                        });
                        this.routingService.navigateCloseAllModal(); // close all modal if any first
                        // remove 完 unlock items call calculate.json
                        this.calculateOrder_checkoutPageCallback && this.calculateOrder_checkoutPageCallback(); // todo check whether call?
                        break;
                    default:
                        this.routingService.navigateCloseAllModal(); // close all modal if any first
                        this.routingService.back();
                        break;
                }
            }, true);
        }
    }
    /**
     * @description: Sometimes the order isnot meeting with the discount after user edits OI in cartPage. So it need remove the discountOi.
     * it will change the orderManager.selectedOffers
     * @return {*}
     */
    discountOfferHandle() {
        var _a;
        let { order } = this.orderManager;
        let discountsIds = this.getDiscountsIds(order);
        console.log('discountOfferHandle discountsIds', discountsIds);
        this.orderManager.selectedOffers = (_a = this.orderManager.selectedOffers) === null || _a === void 0 ? void 0 : _a.filter(offer => { var _a, _b; return discountsIds === null || discountsIds === void 0 ? void 0 : discountsIds.includes((_b = (_a = offer === null || offer === void 0 ? void 0 : offer.reward) === null || _a === void 0 ? void 0 : _a.discount) === null || _b === void 0 ? void 0 : _b.id); });
    }
    crmOfferHandle() {
        var _a, _b, _c, _d, _e, _f, _g;
        let isMultiOffer = (_a = this.settingManager) === null || _a === void 0 ? void 0 : _a.get('isMultiOffer', false);
        let crmOffer = (_c = (_b = this.orderManager) === null || _b === void 0 ? void 0 : _b['bundledOffer']) === null || _c === void 0 ? void 0 : _c[0]; // it is saved when using offer in crm
        if (crmOffer) {
            console.log('update crmOffer to selectedOffers');
            if (isMultiOffer && this.isUsingOffer(this.orderManager.selectedOffers, crmOffer)) {
                (_e = (_d = this.orderManager) === null || _d === void 0 ? void 0 : _d.selectedOffers) === null || _e === void 0 ? void 0 : _e.push(crmOffer);
            }
            else if (crmOffer) {
                this.orderManager.selectedOffers = [crmOffer];
            }
            (_g = (_f = this.orderManager) === null || _f === void 0 ? void 0 : _f['bundledOffer']) === null || _g === void 0 ? void 0 : _g.pop();
        }
    }
    // 判断某张新使用的offer 是否存在于 使用中的offers 数组里, 防止同一张offer(id都相同)用了两次
    isUsingOffer(usingOffers, offer) {
        return usingOffers === null || usingOffers === void 0 ? void 0 : usingOffers.some(usingOffer => (usingOffer === null || usingOffer === void 0 ? void 0 : usingOffer.id) === (offer === null || offer === void 0 ? void 0 : offer.id));
    }
    /**
     * @description: get the order.discount id Array
     * @param {*}
     * @return {*}
     */
    getDiscountsIds(order) {
        var _a;
        return (_a = order === null || order === void 0 ? void 0 : order.discounts) === null || _a === void 0 ? void 0 : _a.map(discount => discount === null || discount === void 0 ? void 0 : discount.id);
    }
    // it will pop the offer or promoCode when the unlockItem Qua is not satisfied the min
    orderPromoCodesOrOffersHanle(unlockDiscount, min) {
        var _a, _b;
        let unlockDiscountConditionType = this.getUnlockTypeByDiscount(unlockDiscount);
        console.log('orderPromoCodesOrOffersHanle unlockDiscountConditionType', unlockDiscountConditionType);
        if (unlockDiscountConditionType === 'reward' /*&& min*/) {
            (_a = this.orderManager.selectedOffers) === null || _a === void 0 ? void 0 : _a.pop(); // to do find offer.index ?
        }
        else if (unlockDiscountConditionType === 'promoCode' /*&& min*/) {
            let isMultiOffer = this.settingManager.get('isMultiOffer', false);
            (_b = this.orderManager.promoCodes) === null || _b === void 0 ? void 0 : _b.pop(); // to do find prmoCode.index ?
            this.orderManager.promoCode = null;
        }
    }
    getUnlockTypeByDiscount(discount) {
        var _a;
        let type = 'others';
        (_a = discount === null || discount === void 0 ? void 0 : discount.conditions) === null || _a === void 0 ? void 0 : _a.forEach(c => {
            if ((c === null || c === void 0 ? void 0 : c.type) === 'code' || c.type === 'couponSet') {
                type = 'promoCode';
            }
            else if ((c === null || c === void 0 ? void 0 : c.type) === 'reward') {
                type = 'reward';
            }
        });
        console.log('currentUnlockCat type', type);
        return type;
    }
    // 現在有三個field 要看
    // category.unlockBenefitMax // 限制unlockCat item 总共可选几个(上限)
    // discount.benefit.max //满足一次条件可以选几个
    // discount.applicable //ng-core 计算的满足条件的次数 todo
    newlogicAboutBenefitMax(discountBenefitMax, discountApplicable, unlockBenefitMax) {
        let max_ = discountBenefitMax * discountApplicable;
        return unlockBenefitMax ? Math.min(max_, unlockBenefitMax) : max_;
    }
    /**
     * @description: checkOrderIsHasCurrentPromoCodeDiscount
     * @param {*}
     * @return {*}
     */
    checkOrderIsHasCurrentPromoCodeDiscount() {
        let { order } = this.orderManager;
        let appliedDiscounts = (order === null || order === void 0 ? void 0 : order.discounts) || [];
        return appliedDiscounts.some((appliedDiscount) => {
            var _a;
            return (_a = appliedDiscount === null || appliedDiscount === void 0 ? void 0 : appliedDiscount.conditions) === null || _a === void 0 ? void 0 : _a.some((condition) => (condition === null || condition === void 0 ? void 0 : condition.type) === 'code' && (condition === null || condition === void 0 ? void 0 : condition.promoCodeCheck(order.promoCode, condition === null || condition === void 0 ? void 0 : condition.code)));
        });
    }
    /**
     * Check order has applied the promo code
     * @param code
     * @returns
     */
    checkOrderHasAppliedPromoCode(code, multiPromoCode = false) {
        var _a, _b;
        let { order } = this.orderManager;
        if (multiPromoCode) {
            return ((_a = order === null || order === void 0 ? void 0 : order.promoCodes) === null || _a === void 0 ? void 0 : _a.indexOf(code)) >= 0;
        }
        else {
            return (order === null || order === void 0 ? void 0 : order.promoCode) === code;
        }
        // If not promotions in order, use simple flow to determin if code applied
        // if(order?.promotions?.length <= 0) {
        if (multiPromoCode) {
            return ((_b = order === null || order === void 0 ? void 0 : order.promoCodes) === null || _b === void 0 ? void 0 : _b.indexOf(code)) >= 0;
        }
        else {
            return (order === null || order === void 0 ? void 0 : order.promoCode) === code;
        }
        // }
        // return order.promotions?.some((promotion) => {
        //     return promotion?.conditions?.some((condition) => {
        //         if(condition.type === 'code') {
        //             const ignoreCase = condition.ignoreCase ?? false;
        //             if(ignoreCase) {
        //                 return code.toLowerCase() === condition.code?.toLowerCase();
        //             }
        //             return code === condition.code;
        //         }
        //         return false;
        //     });
        // });
    }
    /**
     * @description: get discounts from order.discounts(applied) by benefit type
     * @param {*} type
     * @return {*}
     */
    getOrderDiscountsByBenefitType(type) {
        let { order } = this.orderManager;
        let appliedDiscounts = (order === null || order === void 0 ? void 0 : order.discounts) || [];
        return appliedDiscounts === null || appliedDiscounts === void 0 ? void 0 : appliedDiscounts.filter((appliedDiscount) => {
            var _a;
            return (_a = appliedDiscount === null || appliedDiscount === void 0 ? void 0 : appliedDiscount.benefits) === null || _a === void 0 ? void 0 : _a.some((benefit) => (benefit === null || benefit === void 0 ? void 0 : benefit.type) === type);
        });
    }
    /**
     * @description: get discounts from store.menu.discounts by benefit type
     * @param {*} type
     * @return {*}
     */
    filterDiscountsByBenefitType(type, discounts) {
        const disc = discounts || [];
        return disc === null || disc === void 0 ? void 0 : disc.filter((d) => {
            var _a;
            return (_a = d === null || d === void 0 ? void 0 : d.benefits) === null || _a === void 0 ? void 0 : _a.some((benefit) => (benefit === null || benefit === void 0 ? void 0 : benefit.type) === type);
        });
    }
    /** some logic about applying discount end */
    /**
     * Check items availability on user's cart
     *
     */
    checkAvailabilityOrderItemOnCart(varTimestamp, varMode = null, varStore = null, varOrder = null) {
        var _a, _b;
        const validOrder = varOrder ? JSON.parse(JSON.stringify(varOrder)) : JSON.parse(JSON.stringify(this.orderManager.order));
        const invalidOrderItems = [];
        let error = null;
        if (this.orderManager.multi) { // multi OM
            validOrder.subs.forEach(subOrder => {
                const om = this.orderManager.findOm(subOrder.storeId);
                if (om) {
                    const store = om.store;
                    const menu = om.store.menu;
                    const mode = varMode ? varMode : om.mode;
                    const timestamp = this.convertNowDateToStoreTimeZone(store.timezone, varTimestamp).getTime();
                    // currently only process if om has menu
                    if (menu) {
                        const orderItems = JSON.parse(JSON.stringify(subOrder.orderitems));
                        subOrder.orderitems = [];
                        for (const oi of orderItems) {
                            const valid = this.isOrderItemValid(store, menu, mode, oi, timestamp);
                            if (!valid) {
                                invalidOrderItems.push(oi);
                            }
                            else {
                                subOrder.orderitems.push(oi);
                            }
                        }
                    }
                }
            });
        }
        else { // single OM
            validOrder.orderitems = [];
            const store = varStore ? varStore : this.orderManager.store;
            const menu = varStore ? varStore.menu : this.orderManager.store.menu;
            const mode = varMode ? varMode : this.orderManager.mode;
            const orderItems = varOrder ? JSON.parse(JSON.stringify(varOrder.orderitems)) : (_a = this.orderManager.order) === null || _a === void 0 ? void 0 : _a.orderitems;
            const timestamp = this.convertNowDateToStoreTimeZone(store.timezone, varTimestamp).getTime();
            // const timestamp = _timestamp;
            for (const oi of orderItems) {
                const valid = this.isOrderItemValid(store, menu, mode, oi, timestamp);
                if (!valid) {
                    error = (_b = valid[0]) === null || _b === void 0 ? void 0 : _b.error;
                    invalidOrderItems.push(oi);
                }
                else {
                    validOrder.orderitems.push(oi);
                }
            }
        }
        return { validOrder, invalidOrderItems };
    }
    /**
     * Check whether order item is valid or not
     */
    isOrderItemValid(store, menu, mode, oi, timestamp) {
        let valid = true;
        const realCat = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getCategory(menu, oi.categoryId);
        if (realCat) {
            let checkPublish = true;
            let timestampForCheck = timestamp;
            // if category has type such as recommendation / gift / unlocks
            if (realCat.type) {
                checkPublish = false;
                timestampForCheck = this.menuManager.getTime(store);
            }
            // console.log('==== realCat', realCat, checkPublish, timestampForCheck);
            // need to check category availability also
            const availCat = this.menuManager.isAvailableCategory(store, aigens_data__WEBPACK_IMPORTED_MODULE_1__.Data.toData(aigens_data__WEBPACK_IMPORTED_MODULE_1__.Category, realCat), mode == 'takeaway', checkPublish, timestampForCheck, mode);
            if (!availCat) {
                valid = false;
            }
            for (const ig of oi.groups) {
                const realIg = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getItemGroup(menu, ig.id);
                if (!realIg) {
                    valid = false;
                    continue;
                }
                for (const item of ig.items) {
                    const realItem = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getItem(menu, realIg, item.id);
                    if (!realItem) {
                        valid = false;
                        continue;
                    }
                    const itemAvailable = this.menuManager.isAvailableItem(store, realCat, realIg, realItem, mode == 'takeaway', timestampForCheck, mode);
                    if (!itemAvailable) {
                        valid = false;
                    }
                }
            }
        }
        else {
            valid = false;
        }
        return valid;
    }
    /**
     * Check items availability on user's cart
     *
     * @param timestamp
     * @param mode
     */
    checkAvailabilityOrderItemOnCartBeforeChangeMode(timestamp, mode) {
        const validOrder = JSON.parse(JSON.stringify(this.orderManager.order));
        validOrder.orderitems = [];
        let orderItems;
        if (this.orderManager.order.subs) {
            const length = this.orderManager.order.subs.length - 1;
            orderItems = this.orderManager.order.subs[length].orderitems;
        }
        else {
            orderItems = this.orderManager.order.orderitems;
        }
        const menu = this.orderManager.store.menu;
        const invalidOrderItems = [];
        orderItems === null || orderItems === void 0 ? void 0 : orderItems.forEach(oi => {
            let valid = true;
            const realCat = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getCategory(menu, oi.categoryId);
            for (const ig of oi.groups) {
                const realIg = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getItemGroup(menu, ig.id);
                for (const item of ig.items) {
                    const realItem = _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MenuManager.getItem(menu, realIg, item.id);
                    const itemAvailable = this.menuManager.isAvailableItem(this.orderManager.store, realCat, realIg, realItem, this.orderContext.mode == 'takeaway', timestamp, mode);
                    if (!itemAvailable) {
                        valid = false;
                    }
                }
            }
            if (!valid) {
                invalidOrderItems.push(oi);
            }
            else {
                validOrder.orderitems.push(oi);
            }
        });
        return { validOrder, invalidOrderItems };
    }
    /**
     * @description:
     * @param {Order} order
     * @return {*}
     */
    isCanOrderAfterChangeTime(order) {
        let ois = order === null || order === void 0 ? void 0 : order.orderitems;
        // console.log('isCanOrderAfterChangeTime', this.isCanOrder(ois));
        return this.isCanOrder(ois);
    }
    /**
     * @description: // 判断ois 是否都可以在指定配送时间内配送(Can the orderItems be ordered)  tips: reOrder-flow can reuse this function
     * @param {OrderItem} orderItems
     * @param {*} mode
     * @return {*}
     */
    isCanOrder(orderItems) {
        let allCanOrderBooleanArr = []; // save the oi canOrderByCurrentOi
        if ((orderItems === null || orderItems === void 0 ? void 0 : orderItems.length) > 0) {
            for (let i = 0; i < orderItems.length; i++) {
                const oi = orderItems[i];
                let canOrderByCurrentOi = this.isCanOrderByOI(oi);
                allCanOrderBooleanArr.push(canOrderByCurrentOi);
            }
        }
        // console.log('allCanOrderBooleanArr', allCanOrderBooleanArr);
        return allCanOrderBooleanArr.every(bool => bool);
    }
    /**
     * @description: // 判断oi 是否可以在指定配送时间内配送(Can the oi be ordered)
     * @param {OrderItem} oi
     * @return {*}
     */
    isCanOrderByOI(oi) {
        // check oi.cat 对应的 cat 是否可用
        let oiCatId = oi.categoryId;
        let oiCat = this.orderContext.availableCategories.find(cat => (cat === null || cat === void 0 ? void 0 : cat.id) === oiCatId);
        // check oi.items 对应的 item 是否可用
        let allItemCanOrderBooleanArr = oiCat && oi && oi.items && oi.items.map(item => this.isCanOrderByItem(item, this.orderContext.mode));
        console.log('allItemCanOrderBooleanArr', allItemCanOrderBooleanArr);
        return allItemCanOrderBooleanArr === null || allItemCanOrderBooleanArr === void 0 ? void 0 : allItemCanOrderBooleanArr.every(bool => bool);
    }
    /**
     * @description: // 判断item 是否可以在指定配送时间内配送(Can the item be ordered?)
     * @param {Item} item
     * @param {*} mode
     * @return {*}
     */
    isCanOrderByItem(item, mode = 'takeaway') {
        var _a, _b, _c, _d;
        const origin = (_c = (_b = (_a = this === null || this === void 0 ? void 0 : this.orderManager) === null || _a === void 0 ? void 0 : _a.store) === null || _b === void 0 ? void 0 : _b.menu) === null || _c === void 0 ? void 0 : _c['imap'][item === null || item === void 0 ? void 0 : item.id];
        if (origin) {
            item = origin;
        }
        let itemPeriods = item && item.periods || [];
        // console.log('isCanOrderByItem', item.name + ' periodsCode:', itemPeriods)
        let timeOk = false;
        let userSelectTime = (_d = this.menuService) === null || _d === void 0 ? void 0 : _d.getUserSelectTime_number();
        console.log('userSelectTime', userSelectTime);
        // check item 当前 userSelectTime 时间是否可用
        if (!this.menuManager.isAvailabeByPeriods(this.orderContext.store, itemPeriods, userSelectTime)) {
            console.log('periods filter', item.name);
            timeOk = false;
        }
        else {
            timeOk = true;
        }
        // check oi 每个item的 mode 是否适配当前的 store mode
        let modeOk = true;
        if ((item === null || item === void 0 ? void 0 : item.modes) && (item === null || item === void 0 ? void 0 : item.modes.length) > 0) {
            modeOk = item.modes.indexOf(mode) > -1;
        }
        // check oi 对应 item数量是否足够
        let invOk = !this.inventoryManager.isSoldout(item);
        return timeOk && modeOk && invOk; // 三者满足才能用
    }
    /**
     * @description: jugde by whether item and item.variations arr all soldout
     * @param {Item} item
     * @return {*}
     */
    isVariationsAllSoldout(item) {
        if (!item) {
            return false;
        }
        if (!item.variations || item.variations.length === 0) {
            return this.isSoldout(item);
        }
        let items = [item, ...item === null || item === void 0 ? void 0 : item.variations];
        return items === null || items === void 0 ? void 0 : items.every(item => this.isSoldout(item));
    }
    // private getOrderPostBody(order, paymentObject?) {
    //     let body = {};
    //     body = Order.toOrderData(order); // this.slimOrder(order);
    //     console.log('body', body);
    //     body['session'] = this.memberContext?.member?.sessionId;
    //     body['storeId'] = order.storeId;
    //     body['deviceId'] = this.getDeviceId();
    //     ;
    //     body['takeout'] = order.takeout;
    //     body['type'] = this.orderManager.mode;
    //     if ('delivery' === this.orderManager.mode || 'takeaway' === this.orderManager.mode) {
    //         // todo delivery
    //         if (this.directoryContext && this.orderManager.mode === this.directoryContext.DELIVERY) {
    //             body['addressId'] = this.directoryContext?.state?.deliveryAddress?.id;
    //         }
    //         if ('takeaway' === this.orderManager.mode) {
    //             if (this.pickUpTime) {
    //                 body['pickupTime'] = this.pickUpTime;
    //             }
    //             // if (this.menuService.openSelectDiningTimeFlowBeforeCatShow) {
    //             //     let pickupTime_toServer = this.getAdvancedTime_toServer();
    //             //     if (pickupTime_toServer) {
    //             //         body['pickupTime'] = pickupTime_toServer;
    //             //     }
    //             // }
    //             // if (this.systemConfigService.pickupMethodFeature) {
    //             //     body['pickupMethod'] = this.pickupMethod;
    //             //     let pickupInfo = this.configs.getLocal('pickupInfo');
    //             //     if (this.pickupMethod === 'curbside' && pickupInfo) {
    //             //         body['pickupInfo'] = pickupInfo;
    //             //     }
    //             //     let pickupInfo_ = JSON.parse(JSON.stringify(pickupInfo));
    //             //     pickupInfo_ && delete pickupInfo_['note'];
    //             //     this.configs.setLocal('pickupInfo', pickupInfo_);
    //             // }
    //             // body['type'] = 'takeaway'; // pickupstore 用takeaway
    //         }
    //         // if ('delivery' === this.orderManager.mode) {
    //         //     if (this.menuService.openSelectDiningTimeFlowBeforeCatShow) {
    //         //         let deliveryTime_toServer = this.getAdvancedTime_toServer(this.addressManager.currentCourier);
    //         //         // body['pickupTime'] = deliveryTime_toServer; // server食住pickuptime 先
    //         //         deliveryTime_toServer && (body['schedule'] = deliveryTime_toServer);
    //         //     }
    //         // }
    //         // body['note'] = this.addressManager.note;
    //         body['cutlery'] = this.orderManager.cutlery;
    //         body['contactless'] = this.orderManager.contactless;
    //     }
    //     // if('dinein' === this.orderManager.mode && this.menuService.openSelectDiningTimeFlowBeforeCatShow) {
    //     //   let pickupTime_toServer = this.getAdvancedTime_toServer();
    //     //   if (pickupTime_toServer) {
    //     //       body['pickupTime'] = pickupTime_toServer;
    //     //   }
    //     // }
    //     if (this.orderManager.note) {
    //         body['note'] = this.orderManager.note;
    //     }
    //     if (this.name) {
    //         body['username'] = this.name;
    //     }
    //     body['userToken'] = this.configService.getUserToken();
    //     // console.log('JJ: OrderService -> postOrderWithPaymentObject -> this.sdkConfigService.isCrystalJade', this.sdkConfigService.getMemberCardNo);
    //     // if (this.sdkConfigService.isCrystalJade && this.sdkConfigService.getMemberCardNo) {
    //     //     body['card'] = this.sdkConfigService.getMemberCardNo;
    //     // }
    //     if (order.id) {
    //         // for the case which need to reuse the order.id: apply discountCode and pay.
    //         body['id'] = order.id;
    //     }
    //     // TODO: should use order.member
    //     const member = this.memberContext.getMember();
    //     // if (this.isCourt || member) {
    //     //     body["member"] = this.member;
    //     //     if (member) {
    //     //         headers["sid"] = member.sessionId;
    //     //     }
    //     // }
    //     if (this.isCourt) {
    //         body['deviceId'] = this.getDeviceId();
    //         body['member'] = member;
    //     } else {
    //         if (member && this.hasCrm) {
    //             body['member'] = Member.toMemberData(member);
    //         }
    //     }
    //     if (body['member']) {
    //         // if (this.name) {
    //         //     body['member']['lastName'] = this.name;
    //         // }
    //     } else {
    //         if (this.name) {
    //             let m = {
    //                 'lastName': this.name,
    //                 'firstName': ''
    //             };
    //             body['member'] = m;
    //             body['lastName'] = this.name;
    //             body['firstName'] = '';
    //         }
    //     }
    //     if (this.email && this.email !== '') {
    //         body['email'] = this.email;
    //     } else {
    //         // body['email'] = 'aigensemail@gmail.com'; // dummy email no longer used;
    //     }
    //     if (this.pickUpTime && 'delivery' !== this.orderManager.mode) {
    //         body['pickupTime'] = this.pickUpTime;
    //     }
    //     if (this.phone) {
    //         body['phone'] = this.phone;
    //         body['countryCode'] = '+' + this.countryCode;
    //         // body['phone'] = this.phone;
    //         // if ((this.orderManager.mode === 'delivery' || this.orderManager.mode === 'takeaway')){
    //         //     body['phone'] = this.phone;
    //         //     body['countryCode'] = '+' + this.countryCode;
    //         // }
    //     }
    //     if (this.spot) {
    //         body['spot'] = this.spot;
    //     }
    //     if (paymentObject) {
    //         body['charge'] = paymentObject;
    //     }
    //     body['version'] = this.version;
    //     // if (this.couponMap['coupon'] && this.couponMap['useCoupon'] && this.couponMap['canUseCoupon']) {
    //     //     body['coupon'] = this.couponMap['coupon'];
    //     // }
    //     if (this.courtId) {
    //         body['courtId'] = Number(this.courtId);
    //     }
    //     body['emailReceipt'] = !!(this.email && this.emailReceipt);
    //     body['phoneNotify'] = this.phoneNotify;
    //     body['trackerUrl'] = window.location.origin + (order.storeId ? `/store/${order.storeId}` : '') + '/order/@orderId' + '?locale=' + this.t.currentLang;
    //     // if (this.phDiscountCardService && this.phDiscountCardService.hasPhDiscountFeature()) {
    //     //     body['identifications'] = this.phDiscountCardService.getPhCards();
    //     // }
    //     // points to item need delete order.usedPoints to server
    //     // points to money need post order.usedPoints to server
    //     // so now logic(pointFeature and pointToCashFeature is copied)
    //     let store = this.orderManager.store;
    //     let pointFeature = store && store['crm'] && store['crm']['addPoints'] && store['crm'].pointToMoneyRatio !== 0 || false;
    //     let pointToCashFeature = store && store['crm'] && store['crm']['features'] && store['crm']['features'].indexOf('point-as-cash') > 0 && pointFeature;
    //     let isPayLater = this.orderManager.mode === 'byod' || this.orderManager.mode === 'prekiosk' || this.orderManager.mode === 'preorder';
    //     if (isPayLater) {
    //         pointFeature = false;
    //         pointToCashFeature = false;
    //     }
    //     !(pointFeature && pointToCashFeature) && (delete body['usedPoints']); // TODO:无从判断是否是points to item(now use !(points to money))
    //     return body;
    // }
    /** some api start **/
    isModifiable(item) {
        if (!this.modifiableMap[item.id]) {
            this.modifiableMap[item.id] = aigens_data__WEBPACK_IMPORTED_MODULE_1__.Item.isModifiable(item);
        }
        return this.modifiableMap[item.id];
    }
    isRequiredModifier(item) {
        if (this.isModifiable(item)) {
            if (!this.requiredModifierMap[item.id]) {
                this.requiredModifierMap[item.id] = item.mgroups.some(mgroup => mgroup.min > 0);
            }
            return this.requiredModifierMap[item.id];
        }
        else {
            return false;
        }
    }
    // in FE, 需要根据 couponSet promoCode 寻找到 order对应的 discount , so save the Map.
    saveCouponSetKeyMap(code, discountId) {
        this.couponSetKeyMap[code] = discountId;
    }
    getDiscountIdByCouponSetKey(code) {
        var _a;
        return (_a = this.couponSetKeyMap) === null || _a === void 0 ? void 0 : _a[code];
    }
    clearCouponSetKeyMap() {
        this.couponSetKeyMap = {};
    }
    createUnlockCatOrderManager(unlocks) {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        const unlockCatOrderManager = new _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.OrderManager(this.injector);
        if (this.orderManager.multi) { // multi like court mode
            const tempStoreId = [];
            // create order manager as many as unlock stores
            unlocks.forEach(u => {
                var _a, _b;
                if (!tempStoreId.includes(u.store.id)) {
                    unlockCatOrderManager === null || unlockCatOrderManager === void 0 ? void 0 : unlockCatOrderManager.createSwitchCourtOrder((_a = this.orderContext) === null || _a === void 0 ? void 0 : _a.court, u.store, (_b = this.orderContext) === null || _b === void 0 ? void 0 : _b.mode, {});
                }
            });
            (_c = (_b = (_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.order) === null || _b === void 0 ? void 0 : _b.subs) === null || _c === void 0 ? void 0 : _c.forEach(od => {
                var _a;
                const currentDiscountUnlockOrderItems = (_a = od.orderitems) === null || _a === void 0 ? void 0 : _a.filter(oi => unlocks.map(z => this.getKeyOfDiscountWithOffer(z.unlockDiscount.id, z.offerId)).includes(oi.discountId));
                if (currentDiscountUnlockOrderItems.length > 0) {
                    unlockCatOrderManager === null || unlockCatOrderManager === void 0 ? void 0 : unlockCatOrderManager.switchManager(od.storeId);
                    currentDiscountUnlockOrderItems.forEach(oi => {
                        unlockCatOrderManager === null || unlockCatOrderManager === void 0 ? void 0 : unlockCatOrderManager.addOrderItem(lodash_es__WEBPACK_IMPORTED_MODULE_8__["default"](oi));
                    });
                }
            });
        }
        else { // single store
            unlockCatOrderManager === null || unlockCatOrderManager === void 0 ? void 0 : unlockCatOrderManager.createOrder((_d = this.orderContext) === null || _d === void 0 ? void 0 : _d.store, (_e = this.orderContext) === null || _e === void 0 ? void 0 : _e.mode, {});
            // add current discount item
            const currentDiscountUnlockOrderItems = (_h = (_g = (_f = this.orderManager) === null || _f === void 0 ? void 0 : _f.order) === null || _g === void 0 ? void 0 : _g.orderitems) === null || _h === void 0 ? void 0 : _h.filter(oi => unlocks.map(z => this.getKeyOfDiscountWithOffer(z.unlockDiscount.id, z.offerId)).includes(oi.discountId));
            currentDiscountUnlockOrderItems.forEach(oi => unlockCatOrderManager === null || unlockCatOrderManager === void 0 ? void 0 : unlockCatOrderManager.addOrderItem(lodash_es__WEBPACK_IMPORTED_MODULE_8__["default"](oi)));
        }
        console.log('createUnlockCatOrderManager = ', unlockCatOrderManager);
        this.unlockCatOrderManager = unlockCatOrderManager;
    }
    isItemComboOrAlacarteHasModifier(cat, item) {
        return aigens_data__WEBPACK_IMPORTED_MODULE_1__.Item.isSet(cat, item) || aigens_data__WEBPACK_IMPORTED_MODULE_1__.Item.isModifiable(item);
    }
    runCalculateOrderCheckoutCallback() {
        if (this.calculateOrder_checkoutPageCallback) {
            this.calculateOrder_checkoutPageCallback();
        }
    }
    isALaCarteItem(category, item) {
        return !aigens_data__WEBPACK_IMPORTED_MODULE_1__.Item.isSet(category, item) && !aigens_data__WEBPACK_IMPORTED_MODULE_1__.Item.isVariations(item, this.settingManager.get('singleChildShowVariation', false));
    }
    isSimpleItem(cat, item) {
        return this.settingManager.get('menu.quickAlacarte', false) && this.isALaCarteItem(cat, item) && !this.isRequiredModifier(item);
    }
    addUnlockItemDirectlyToUnlockOrderManager(unlock) {
        var _a;
        this.unlockCatOrderManager.switchManager((_a = unlock.store) === null || _a === void 0 ? void 0 : _a.id);
        for (let n = 1; n <= unlock.max; n++) {
            this.unlockCatOrderManager.addSingleItem(unlock.category, unlock.itemGroup, unlock.item);
        }
    }
    getKeyOfDiscountWithOffer(discountId, offerId) {
        if (offerId) {
            return discountId + this.DISCOUNT_ID_OFFER_ID_SEPARATOR + offerId;
        }
        return discountId;
    }
    /**
     * Get offer id from offerIds, that is not defined in any item in order manager
     * Assumption: FE process offer one by one
     * @param offerIds
     */
    getVacantOfferIdInOrderManager(offerIds) {
        var _a;
        let existingOffer = [];
        if (this.orderManager.multi) {
            existingOffer = [];
            this.orderManager.order.subs.forEach(od => {
                var _a;
                const x = (_a = od.orderitems) === null || _a === void 0 ? void 0 : _a.filter(oi => oi['offerId']).map(oi => oi['offerId']);
                existingOffer.push(...x);
            });
        }
        else {
            existingOffer = (_a = this.orderManager.order.orderitems) === null || _a === void 0 ? void 0 : _a.filter(oi => oi['offerId']).map(oi => oi['offerId']);
        }
        const diff = lodash_es__WEBPACK_IMPORTED_MODULE_9__["default"](offerIds, existingOffer);
        if ((diff === null || diff === void 0 ? void 0 : diff.length) > 0) {
            return diff[0];
        }
        return null;
    }
}
CartService.ɵfac = function CartService_Factory(t) { return new (t || CartService)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_menu_service__WEBPACK_IMPORTED_MODULE_3__.MenuService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_aigens_directory_src_app_directory_services_directory_context_manager_service__WEBPACK_IMPORTED_MODULE_4__.DirectoryContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_order_context_manager_service__WEBPACK_IMPORTED_MODULE_5__.OrderContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_6__.RoutingService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.AnalyticsService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_7__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.DiscountManager)); };
CartService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({ token: CartService, factory: CartService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 55494:
/*!*****************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/catering.service.ts ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CateringService": () => (/* binding */ CateringService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);


class CateringService {
    constructor(dataService) {
        this.dataService = dataService;
        this.distributeMethod = 'takeaway';
    }
    setDistributeMethod(method) {
        this.distributeMethod = method;
    }
    getDistributeMethod() {
        return this.distributeMethod;
    }
    setPickupStore(store) {
        this.pickupStore = store;
    }
    setPickupStoreId(id) {
        this.fetchStoreObjectByStoreId(id);
    }
    setDeliveryAddress(address) {
        this.deliveryAddress = address;
    }
    getPickupStoreId() {
        var _a;
        return (_a = this.pickupStore) === null || _a === void 0 ? void 0 : _a.id;
    }
    getDeliveryAddressId() {
        var _a;
        return (_a = this.deliveryAddress) === null || _a === void 0 ? void 0 : _a.id;
    }
    fetchStoreObjectByStoreId(storeId) {
        const url = `/api/v1/store/store/${storeId}.json`;
        this.dataService.get(url).subscribe((store) => {
            if (store) {
                this.setPickupStore(store);
            }
        });
    }
    resetCatering() {
        this.deliveryAddress = null;
        this.pickupStore = null;
        this.distributeMethod = 'takeaway';
    }
}
CateringService.ɵfac = function CateringService_Factory(t) { return new (t || CateringService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.DataService)); };
CateringService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: CateringService, factory: CateringService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 14421:
/*!******************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/deep-link-manager.ts ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeepLinkManager": () => (/* binding */ DeepLinkManager)
/* harmony export */ });
/* harmony import */ var _aigens_byod_src_app_byod_framework_base_base_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/byod/src/app/byod/framework/base/base-page */ 85783);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _aigens_core_src_app_framework_helpers_localeStringLookup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/helpers/localeStringLookup */ 50697);
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var _aigens_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/deep-link.service */ 13661);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _aigens_core_src_app_pure_services_time_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/time.service */ 72570);
/* harmony import */ var _aigens_byod_src_app_byod_services_cart_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/cart.service */ 54729);
/* harmony import */ var _aigens_byod_src_app_byod_services_order_flow_manager_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/order-flow-manager.service */ 29331);
/* harmony import */ var _aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @aigens/core/src/app/pure/managers/setting-manager */ 74663);
/* harmony import */ var _aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/routing.service */ 28759);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);

















/**
 * BECAUSE THERE IS STATE MANAGEMENT, IT SHOULD BE SINGLETON.
 * DON'T DECLARE THIS IN MODULE BECAUSE IT MAY GIVE STRANGE BEHAVIOR.
 */
class DeepLinkManager extends aigens_framework__WEBPACK_IMPORTED_MODULE_1__.BaseService {
    constructor(injector, subscribeService, orderManager, t, timeService, menuManager, orderContext, cartService, orderFlowManager, dataService, settingManager, deeplinkService, routingService, directoryContext, memberContext) {
        super(injector);
        this.injector = injector;
        this.subscribeService = subscribeService;
        this.orderManager = orderManager;
        this.t = t;
        this.timeService = timeService;
        this.menuManager = menuManager;
        this.orderContext = orderContext;
        this.cartService = cartService;
        this.orderFlowManager = orderFlowManager;
        this.dataService = dataService;
        this.settingManager = settingManager;
        this.deeplinkService = deeplinkService;
        this.routingService = routingService;
        this.directoryContext = directoryContext;
        this.memberContext = memberContext;
        this.actionQueue = [];
        console.log('construct DeepLinkManager should happen once!');
        this.listenCloseModalDeepLinkAction();
    }
    getOrderBasePageInstance() {
        if (this.orderBasePage == null) {
            this.orderBasePage = new _aigens_byod_src_app_byod_framework_base_base_page__WEBPACK_IMPORTED_MODULE_0__.OrderBasePage(this.injector);
        }
    }
    /**
     * Please set dialog service if not, any logic using dialog service won't work.
     */
    setDialogService(dialog) {
        this.dialogService = dialog;
    }
    /**
     * IMPORTANT: NEED TO CALL ONCE IN ENTRY POINT PAGE / MODULE
     *
     * Please also set any dialog component that use to show any message to user. This is to avoid issue when run module that don't import BYOD module
     */
    setDialogComponent(itemNotAvailableDialogComponent, clearInvalidCartItemConfirmDialogComponent) {
        this.itemNotAvailableDialogComponent = itemNotAvailableDialogComponent;
        this.clearInvalidCartItemConfirmDialogComponent = clearInvalidCartItemConfirmDialogComponent;
    }
    /**
     * Listen to close modal event of deeplink dialog action, then run next action if any
     */
    listenCloseModalDeepLinkAction() {
        this.context.listen('routingService.navigateCloseAllModal').subscribe(x => {
            const closedAuxUrl = x === null || x === void 0 ? void 0 : x.closedAuxUrl;
            if (closedAuxUrl && closedAuxUrl.includes('src=deepLink')) {
                this.run();
            }
        });
    }
    run(actions) {
        if (actions != null) {
            this.actionQueue = actions; // put processed action into queue, to be proceed later sequentially. it will replaced all queue.
        }
        console.log('run deeplinkActionQueue = ', this.actionQueue);
        if (this.actionQueue.length > 0) {
            const action = this.actionQueue.splice(0, 1);
            if ((action === null || action === void 0 ? void 0 : action.length) > 0) { // run top action of queue
                // need a timeout to make action can show dialog sequentially
                setTimeout(() => this.processPendingAction(action[0]), 100);
            }
        }
    }
    showItemSelectionDialog(event) {
        // this opt is to make sure that deeplink will run next action
        event.opt = {
            mandatory: false,
            canModifyQty: true,
            deepLinkMode: true
        };
        this.orderBasePage.itemSelected(event);
    }
    processPendingAction(action) {
        this.getOrderBasePageInstance();
        console.log('processPendingAction = ', action);
        const type = action.action;
        const flow = action.params.flow;
        const isAuto = action.auto;
        if (isAuto) {
            switch (type) {
                case 'addItem':
                    this.orderManager.addSingleItemById(action.params.itemId);
                    break;
                case 'addDiscount':
                    this.orderManager.setPromoCode(action.params.code);
                    break;
                case 'addOrder':
                    this.orderManager.reconstructOrder(action.params.order);
                    break;
                case 'addOrderItem':
                    const orderitem = action.params.orderitem;
                    const rawOrder = new aigens_data__WEBPACK_IMPORTED_MODULE_3__.Order();
                    rawOrder.orderitems = [orderitem];
                    this.orderManager.reconstructOrder(rawOrder);
                    break;
                case 'addCouponCode':
                    this.processActionRedeemCouponCode(action);
                    break;
                default:
                    console.log('UNSUPPORTED ACTION', action);
                    break;
            }
            this.run();
        }
        else {
            switch (type) {
                case 'addItem':
                    this.processActionAddItem(action);
                    break;
                case 'addOrderItem':
                    this.processActionAddOrderItem(action);
                    break;
                case 'addOrder':
                    this.processActionAddOrder(action);
                    break;
                case 'addDiscount':
                    this.processActionAddDiscount(action, flow);
                    break;
                case 'addSearchItem':
                    this.processActionAddSearchItem(action);
                    break;
                case 'addCrmOffer':
                    this.processActionAddCrmOffer(action);
                    break;
                case 'addPreorder':
                    this.processActionAddPreorder(action);
                    break;
                default:
                    console.log('UNSUPPORTED ACTION', action);
                    this.run(); // unsupported action need to run next queue
                    break;
            }
        }
    }
    processActionAddItem(action) {
        var _a, _b, _c, _d, _e;
        const timestamp = this.timeService.getTime();
        const entry = this.orderManager.reverseLookupItem(action.params.itemId);
        console.log('addItem', action, entry);
        const isRecommend = (_b = (_a = action.params) === null || _a === void 0 ? void 0 : _a.isRecommend) !== null && _b !== void 0 ? _b : false;
        if (entry && ((_c = this.menuManager) === null || _c === void 0 ? void 0 : _c.isAvailableItem(this.orderContext.store, entry.c, entry.ig, entry.i, this.orderContext.mode == 'takeaway', timestamp, this.orderManager.mode)) && (this.settingManager.get('menu.quickAlacarte', false))) {
            const title = (0,_aigens_core_src_app_framework_helpers_localeStringLookup__WEBPACK_IMPORTED_MODULE_2__.localeStringLookup)(entry.i, this.context.userLang, 'name');
            const message = this.t.instant('byod.pages.order-page.add-promo-item-message');
            this.dialogService.showConfirm(title, message, {
                callback: (status) => {
                    if ('OK' == status) {
                        if (entry) {
                            const event = {
                                category: entry.c,
                                itemgroup: entry.ig,
                                item: entry.i,
                                type: 'add',
                                isRecommend,
                            };
                            this.showItemSelectionDialog(event);
                            // here will not call run() because it prompt a item selection dialog,
                            // which is the event (e.g. user dismiss dialog) will be caught by listenCloseModalDeepLinkAction()
                        }
                        else {
                            this.run();
                        }
                    }
                },
            }).subscribe((resp) => {
                if (!resp) { // when user click overlay confirm
                    this.run();
                }
            });
        }
        else if (entry && ((_d = this.menuManager) === null || _d === void 0 ? void 0 : _d.isAvailableItem(this.orderContext.store, entry.c, entry.ig, entry.i, this.orderContext.mode == 'takeaway', timestamp, this.orderManager.mode))) {
            const event = {
                category: entry.c,
                itemgroup: entry.ig,
                item: entry.i,
                type: 'add',
                isRecommend,
            };
            this.showItemSelectionDialog(event);
        }
        else {
            const message = this.t.instant('byod.pages.order-page.item-message', { name: (_e = entry === null || entry === void 0 ? void 0 : entry.i) === null || _e === void 0 ? void 0 : _e.name });
            const duration = 3000;
            this.dialogService.showToast(message, duration);
            this.run();
        }
    }
    processActionAddOrderItem(action) {
        const timestamp = this.timeService.getTime();
        const orderitem = action.params.orderitem;
        const rawOrder = new aigens_data__WEBPACK_IMPORTED_MODULE_3__.Order();
        rawOrder.orderitems = [orderitem];
        console.log('order item test', orderitem);
        const orderItemName = orderitem.groups[0].items[0].name;
        console.log('order item  name test', orderItemName);
        const title = this.t.instant('byod.pages.order-page.reorder');
        const message = this.t.instant('byod.pages.order-page.reorder-message');
        const reorderFail = this.t.instant('byod.dialogs.clear-invalid-cart-item-confirm-dialog.reorder-not-available', { name: orderItemName });
        this.dialogService.showConfirm(title, message, {
            callback: (status) => {
                if ('OK' == status) {
                    if (this.cartService.isOrderItemValid(this.orderContext.store, this.orderContext.store.menu, this.orderContext.mode, rawOrder.orderitems[0], timestamp)) {
                        this.orderManager.reconstructOrder(rawOrder);
                        this.run();
                    }
                    else {
                        this.dialogService.showAlert(title, reorderFail, () => this.run());
                    }
                }
            }
        }).subscribe((resp) => {
            if (!resp) { // when user click overlay confirm
                this.run();
            }
        });
    }
    processActionAddOrder(action) {
        const timestamp = this.timeService.getTime();
        const order = action.params.order;
        console.log('order test', order);
        const title = this.t.instant('byod.pages.order-page.reorder');
        const message = this.t.instant('byod.pages.order-page.reorder-message');
        const reorderFail = this.t.instant('byod.dialogs.clear-invalid-cart-item-confirm-dialog.reorder-not-available', { name: title });
        const validOrder = new aigens_data__WEBPACK_IMPORTED_MODULE_3__.Order();
        validOrder.orderitems = [];
        let validStatus = true;
        for (const oi of order.orderitems) {
            const valid = this.cartService.isOrderItemValid(this.orderContext.store, this.orderContext.store.menu, this.orderContext.mode, oi, timestamp);
            if (!valid) {
                validStatus = false;
            }
            else {
                validOrder.orderitems.push(oi);
            }
        }
        this.dialogService.showConfirm(title, message, {
            callback: (status) => {
                if ('OK' == status) {
                    if (!validStatus) {
                        this.dialogService.showAlert(title, reorderFail, () => {
                            var _a;
                            if (((_a = validOrder === null || validOrder === void 0 ? void 0 : validOrder.orderitems) === null || _a === void 0 ? void 0 : _a.length) > 0) {
                                this.orderManager.reconstructOrder(validOrder);
                            }
                            this.run();
                        });
                    }
                    else {
                        this.orderManager.reconstructOrder(validOrder);
                        this.run();
                    }
                }
            }
        }).subscribe((resp) => {
            if (!resp) { // when user click overlay confirm
                this.run();
            }
        });
    }
    processActionAddSearchItem(action) {
        const entry = this.orderManager.reverseLookupItem(action.params.itemId);
        console.log('addSearchItem', action, entry);
        if (entry) {
            const i = aigens_data__WEBPACK_IMPORTED_MODULE_3__.Data.toData(aigens_data__WEBPACK_IMPORTED_MODULE_3__.Item, entry.i);
            i.variations = []; // delete variations to avoid variations dialog
            i.minPrice = 0;
            const event = {
                category: entry.c,
                itemgroup: entry.ig,
                item: i,
                type: 'add'
            };
            this.showItemSelectionDialog(event);
        }
        else {
            this.dialogService.openComponent(this.itemNotAvailableDialogComponent, { item: action.params.itemObj })
                .afterClosed().subscribe(resp => {
                if ((resp === null || resp === void 0 ? void 0 : resp.action) === 'changeStore') {
                    this.orderFlowManager.smartShowModeSelector({ pendingAction: [action] });
                }
            });
        }
    }
    processActionAddCrmOffer(action) {
        var _a, _b;
        const offerId = (_a = action === null || action === void 0 ? void 0 : action.params) === null || _a === void 0 ? void 0 : _a.offerId;
        if (offerId && !((_b = action === null || action === void 0 ? void 0 : action.params) === null || _b === void 0 ? void 0 : _b.offer)) {
            const url = '/api/v1/crm/offer.json';
            this.dialogService.superloading(true);
            this.dataService
                .get(url, {
                brandId: this.context.brandId,
            })
                .subscribe({
                next: (allRewards) => {
                    var _a;
                    this.dialogService.superloading(false);
                    console.log('fetch all crm rewards', allRewards);
                    const offer = allRewards === null || allRewards === void 0 ? void 0 : allRewards.find(e => e.id == offerId);
                    if (offer) {
                        console.log('found the offer by crm pass in offer id', offer);
                        if (!((_a = this.orderManager) === null || _a === void 0 ? void 0 : _a['bundledOffer'])) {
                            console.log('init bundledOffer array []');
                            this.orderManager['bundledOffer'] = [];
                        }
                        this.orderManager['bundledOffer'].push(offer);
                    }
                    this.run();
                },
                error: (err) => {
                    this.dialogService.superloading(false);
                    console.log(err);
                    this.run();
                }
            });
        }
        // use crm offer to byod orderPage then to checkoutPage
        // 不需要执行任何操作, 睇 code 已经有人在 byod checkoutPage 的 use-reward-component 初始化时 init this.orderManager.selectedOffers
        // if (flow === 'order') { // todo: check 有无可能执行多次, 造成同一张offer 多次push to this.orderManager.selectedOffers
        //     if (action?.params?.offer) {
        //         let isMultiOffer = this.settingManager.get('isMultiOffer', false);
        //         if (isMultiOffer) {
        //             this.orderManager.selectedOffers.push(action.params.offer);
        //             console.log('after using crm offer(this.orderManager.selectedOffers)', this.orderManager.selectedOffers);
        //         } else {
        //             this.orderManager.selectedOffers = [action.params.offer];
        //         }
        //     }
        // }
    }
    processActionAddPreorder(action) {
        const order = action.params.order;
        const temp = this.cartService.checkAvailabilityOrderItemOnCart(this.directoryContext.getUnixTime(this.directoryContext.state), null, null, order);
        if (temp.invalidOrderItems.length > 0) {
            this.dialogService
                .openComponent(this.clearInvalidCartItemConfirmDialogComponent, { orderItems: temp.invalidOrderItems, trigger: 'checkout' })
                .afterClosed().subscribe(resp => {
                if ((resp === null || resp === void 0 ? void 0 : resp.action) === 'yes') {
                    this.orderManager.clearOrderItems();
                    this.orderManager.reconstructOrder(temp.validOrder);
                    if (action.params.callback) {
                        action.params.callback();
                    }
                    // this.checkPreorderFlagAndNavigateToCheckout();
                }
                this.run();
            });
        }
        else {
            this.orderManager.reconstructOrder(temp.validOrder);
            if (action.params.callback) {
                action.params.callback();
            }
            this.run();
            // this.checkPreorderFlagAndNavigateToCheckout();
        }
    }
    processActionAddDiscount(action, flow) {
        const itemCode = action.params.discount.benefits[0].code;
        const entry = this.orderManager.reverseLookupItem(itemCode);
        const title = this.t.instant('byod.pages.order-page.promotion');
        if (!entry) {
            console.log('MISSING LOOKUP ITEM', itemCode);
            const reorderFail = this.t.instant('byod.dialogs.clear-invalid-cart-item-confirm-dialog.reorder-not-available', { name: title });
            this.dialogService.showAlert(title, reorderFail, () => this.run());
            return;
        }
        console.log('addItem', action, entry);
        const input = {
            item: entry.i,
            category: entry.c,
            itemgroup: entry.ig,
        };
        this.orderBasePage.itemHandle(input.category, input.itemgroup, input.item, flow);
        if (flow == 'checkout') {
            if (action.params.callback) {
                action.params.callback();
            }
            // this.mobileCartClicked(input);
        }
    }
    /**
     * Process action to redeem coupon code
     * @param action
     * @private
     */
    processActionRedeemCouponCode(action) {
        var _a, _b, _c;
        const code = (_a = action === null || action === void 0 ? void 0 : action.params) === null || _a === void 0 ? void 0 : _a.code;
        if (!code) {
            return;
        }
        // if not login yet, then show the
        if (this.memberContext.isGuest()) {
            this.dialogService.showAlert(this.t.instant('crm.reward.login-to-get-reward'), this.t.instant('crm.reward.please-login-or-register-to-receive-reward'), (resp) => this.routingService.goLogin());
            this.deeplinkService.addPendingCouponCode(code, true, _aigens_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_4__.DeepLinkService.AFTER_LOGIN_SUCCESS_TARGET);
            return;
        }
        const params = {
            action: 'redeemcode',
            membershipId: (_c = (_b = this.memberContext) === null || _b === void 0 ? void 0 : _b.membership) === null || _c === void 0 ? void 0 : _c.id,
            brandId: this.context.brandId,
            code: code
        };
        this.dataService.postWithParams('/api/v1/reward/offer.json', params)
            .subscribe(data => {
            if ((data === null || data === void 0 ? void 0 : data.length) > 0) { // redeem success
                this.dialogService.showAlert('', this.t.instant('crm.reward.redeem-received-successfully'), () => {
                    var _a;
                    // show the reward list
                    const brandId = this.context.brandId;
                    const path = `crm/brand/${brandId}/reward`;
                    this.routingService.navigateModal(path, {}, {
                        queryParams: { back: true, new: (_a = data[0]) === null || _a === void 0 ? void 0 : _a.id }
                    });
                });
            }
            else {
                this.dialogService.showAlert(this.t.instant('crm.reward.invalid-code'), this.t.instant('crm.reward.code-not-seems-to-be-valid'));
            }
        }, err => {
            this.dialogService.showAlert(this.t.instant('crm.reward.invalid-code'), this.t.instant('crm.reward.code-not-seems-to-be-valid'));
        });
    }
}
DeepLinkManager.ɵfac = function DeepLinkManager_Factory(t) { return new (t || DeepLinkManager)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_5__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderManager), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_13__.TranslateService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_pure_services_time_service__WEBPACK_IMPORTED_MODULE_6__.TimeService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MenuManager), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderContext), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_byod_src_app_byod_services_cart_service__WEBPACK_IMPORTED_MODULE_7__.CartService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_byod_src_app_byod_services_order_flow_manager_service__WEBPACK_IMPORTED_MODULE_8__.OrderFlowManager), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.DataService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_9__.SettingManager), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_4__.DeepLinkService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_10__.RoutingService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_11__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MemberContext)); };
DeepLinkManager.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjectable"]({ token: DeepLinkManager, factory: DeepLinkManager.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 57825:
/*!**********************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/favorite-item.service.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FavoriteItemService": () => (/* binding */ FavoriteItemService)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);




class FavoriteItemService extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BaseService {
    constructor(injector, dataService) {
        super(injector);
        this.dataService = dataService;
        this.bookmarkUrl = '/api/v1/store/bookmark.json';
        this.favoriteItems = [];
    }
    setFavoriteItem(favoriteI) {
        if (!this.favoriteItems.includes(favoriteI)) {
            this.favoriteItems.push(favoriteI);
        }
    }
    removeFavoriteItem(favoriteI) {
        this.favoriteItems = this.favoriteItems.filter((x) => x !== favoriteI);
    }
    getBookmarks() {
        let params = {};
        params['brandId'] = this.context.brandId;
        params['groupId'] = this.context.groupId;
        params['type'] = 'Item';
        params['locale'] = 'en';
        this.dataService.get(this.bookmarkUrl, params).forEach((data) => {
            data === null || data === void 0 ? void 0 : data.forEach(data => {
                this.setFavoriteItem(data.contentId);
            });
        }).catch((err) => {
            console.log(err);
        });
    }
    setBookmarkItem(itemId) {
        let params = {};
        params['brandId'] = this.context.brandId;
        params['groupId'] = this.context.groupId;
        params['type'] = 'Item';
        params['locale'] = 'en';
        params['contentId'] = itemId;
        return this.dataService.postWithParams(this.bookmarkUrl, params).forEach((data) => {
            this.setFavoriteItem(data.contentId);
        });
    }
    deleteBookmarkItem(itemId) {
        let params = {};
        params['brandId'] = this.context.brandId;
        params['groupId'] = this.context.groupId;
        params['type'] = 'Item';
        params['locale'] = 'en';
        params['contentId'] = itemId;
        params['favorite'] = false;
        return this.dataService.postWithParams(this.bookmarkUrl, params).forEach((data) => {
            this.removeFavoriteItem(data.contentId);
        });
    }
}
FavoriteItemService.ɵfac = function FavoriteItemService_Factory(t) { return new (t || FavoriteItemService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.DataService)); };
FavoriteItemService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: FavoriteItemService, factory: FavoriteItemService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 81623:
/*!***************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/layout.service.ts ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LayoutService": () => (/* binding */ LayoutService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var _core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/src/app/pure/services/platform.service */ 45485);
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);





class LayoutService {
    constructor(injector, directoryContext, platformService, orderContext) {
        this.directoryContext = directoryContext;
        this.platformService = platformService;
        this.orderContext = orderContext;
    }
    pickLayout(cat = null) {
        console.log("pickLayout start", cat);
        var result = {
            layout: "default",
            gridType: "MULTI_CAT",
            catLayout: "none",
            itemLayout: "list",
            subLayout: "order-default",
            setLayout: "single-page",
            catMode: false
        };
        result.subLayout = "order-default";
        if (this.platformService.isKiosk()) {
            result.gridType = 'SINGLE_CAT';
        }
        else if (this.platformService.isMobile() || this.platformService.isTablet()) {
            result.layout = "default";
            result.gridType = "MULTI_CAT";
        }
        else {
            result.layout = "sticky";
            result.gridType = "MULTI_CAT_FLAT";
        }
        var menu = this.orderContext.menu;
        if (!menu) {
            console.log("no menu, exit");
            return;
        }
        var settings = menu.settings;
        // settings.catLayout = 'list'; // hardcode to test 'list' layout when set menu.catGroup true for store 2335041662
        result.catLayout = settings.catLayout || "none";
        result.itemLayout = settings.itemLayout || "list";
        result.setLayout = settings.setLayout || "single-page";
        if (cat) {
            result.itemLayout = cat.layout || "list";
        }
        if (result.catLayout == 'sideMenu') {
            result.subLayout = "order-sidecat";
        }
        else if (result.catLayout == 'grid' || result.catLayout == 'list' || result.catLayout == 'grid3' || result.catLayout == 'groupCat') {
            result.catMode = true;
        }
        if (result.itemLayout == 'grid') {
            result.gridColumns = 2;
        }
        else if (result.itemLayout == 'grid3') {
            result.gridColumns = 3;
        }
        else {
            result.gridColumns = 1;
        }
        console.log("pickLayout", result);
        //add the result to the service
        Object.assign(this, result);
    }
    /**
     * @description: get the setLayout
     * @param {Item} item item.setLayout can override menu setLayout
     * @return {*}
     */
    getSetLayout(item) {
        var _a;
        return item ? ((_a = item === null || item === void 0 ? void 0 : item.setLayout) !== null && _a !== void 0 ? _a : this.setLayout) : (this.setLayout);
    }
}
LayoutService.ɵfac = function LayoutService_Factory(t) { return new (t || LayoutService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_0__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_1__.PlatformService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_2__.OrderContext)); };
LayoutService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: LayoutService, factory: LayoutService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 63292:
/*!*************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/menu.service.ts ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MenuService": () => (/* binding */ MenuService)
/* harmony export */ });
/* harmony import */ var _common_base_menu_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/base-menu.service */ 12919);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var _core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/src/app/pure/services/platform.service */ 45485);





class MenuService extends _common_base_menu_service__WEBPACK_IMPORTED_MODULE_0__.BaseMenuService {
    constructor(injector, directoryContext, platformService) {
        super(injector);
        this.directoryContext = directoryContext;
        this.platformService = platformService;
    }
    getUserSelectTime_number() {
        var _a;
        return (_a = this.directoryContext) === null || _a === void 0 ? void 0 : _a.getUnixTime();
    }
}
MenuService.ɵfac = function MenuService_Factory(t) { return new (t || MenuService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_1__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_2__.PlatformService)); };
MenuService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: MenuService, factory: MenuService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 4911:
/*!******************************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/order-context-manager.service.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrderContextManager": () => (/* binding */ OrderContextManager)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs */ 91640);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 10745);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 19337);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/storage.service */ 24430);
/* harmony import */ var _core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/src/app/pure/managers/setting-manager */ 74663);
/* harmony import */ var _menu_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./menu.service */ 63292);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _catering_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./catering.service */ 55494);
/* harmony import */ var _core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../core/src/app/pure/services/platform.service */ 45485);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var _favorite_item_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./favorite-item.service */ 57825);
/* harmony import */ var _aigens_core_src_app_framework_services_pre_order_context_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/pre-order-context.service */ 63406);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @ngx-translate/core */ 33935);



















class OrderContextManager {
    constructor(injector, route, orderContext, dataService, configService, storageService, recommendationManager, context, memberContextManager, settingManager, memberContext, menuService, subscribe, cateringService, platformService, priceManager, orderManager, directoryContext, favoriteItemService, preOrderContext, t) {
        this.injector = injector;
        this.route = route;
        this.orderContext = orderContext;
        this.dataService = dataService;
        this.configService = configService;
        this.storageService = storageService;
        this.recommendationManager = recommendationManager;
        this.context = context;
        this.memberContextManager = memberContextManager;
        this.settingManager = settingManager;
        this.memberContext = memberContext;
        this.menuService = menuService;
        this.subscribe = subscribe;
        this.cateringService = cateringService;
        this.platformService = platformService;
        this.priceManager = priceManager;
        this.orderManager = orderManager;
        this.directoryContext = directoryContext;
        this.favoriteItemService = favoriteItemService;
        this.preOrderContext = preOrderContext;
        this.t = t;
        this.cachedMenus = {};
        this.cachedSlimMenus = {};
        this.fakeCount = 0;
        this.subscribe.getObservable('order').subscribe((order) => {
            console.log('order changed', order);
            this.orderContext.save();
        });
    }
    getMenuWithSession(storeId, mode, lang = 'multi', refresh = false, byPassCache = false) {
        console.log("getMenuWithSession2");
        var menu$ = this.getMenuRaw(storeId, mode, lang, refresh);
        var session$ = this.getOrderSession(storeId, mode, lang, false, byPassCache);
        return (0,rxjs__WEBPACK_IMPORTED_MODULE_11__.forkJoin)([menu$, session$]).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.tap)(e => this.postMenuProcesses(false)));
    }
    getMenu(storeId, mode, lang = 'multi', refresh = false, moduleType = 'byod') {
        return this.getMenuRaw.apply(this, arguments).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.tap)(e => this.postMenuProcesses()));
    }
    getMenuRaw(storeId, mode, lang = 'multi', refresh = false, moduleType = 'byod') {
        var _a, _b;
        console.log("getMenu");
        mode = (_b = (_a = this.menuService.menuManager) === null || _a === void 0 ? void 0 : _a.debugMode) !== null && _b !== void 0 ? _b : mode;
        if (!moduleType)
            moduleType = 'byod';
        let baseUrl = '/api/v1/menu/store/';
        if (moduleType === 'merchant')
            baseUrl = '/api/v1/merchant/store/';
        var url = baseUrl + storeId + '.json?menu=' + mode + '&locale=' + lang; // 前提: brand had set cod-cash-payemnt with modes'[takeaway']; it will return cod-cash payemnt with keyword(menu=takeaway),and if use mode=takeaway, it will filter cod-cash-payment
        var channel = this.platformService.getMenuChannel();
        if (channel) {
            url += "&channel=" + channel;
        }
        var container = this.platformService.getContainer();
        if (container) {
            url += "&container=" + container;
        }
        url += "&ngsw-bypass=true";
        var store = this.getCachedMenuStore(url);
        if (store && !refresh) {
            console.log('MENU CACHED');
            this.setMenuData(url, store, true);
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.of)(store);
        }
        console.log("getMenu fetch");
        // return this.dataService.get(url, {}, false, true).pipe(map(jo => this.setMenuData(url, Data.toData(Store, jo))));
        return this.dataService.get(url, {}, false, true).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.map)(jo => {
            let retStore = aigens_data__WEBPACK_IMPORTED_MODULE_0__.Data.toData(aigens_data__WEBPACK_IMPORTED_MODULE_0__.Store, jo);
            if (!retStore.menu) {
                throw new Error(this.t.instant('pages.tableList.noMenuError'));
            }
            else {
                return this.setMenuData(url, retStore);
            }
        }));
    }
    postMenuProcesses(needRecalculateAvailableCat = true) {
        console.log('postMenuProcess');
        // once session is set, check spot period price rule, so move to here
        this.applyPriceRule();
        //once session is set, call this to check session.passes and recal cat will show the passes
        this.setPassMarkers();
        if (needRecalculateAvailableCat) {
            this.recalculateAavailableCategories();
        }
    }
    /**
     * This is a method to fetch menu from API and do some map on it.
     * But we don't change any context.
     * Purpose:
     * - get menu from other store and validate the menu against user cart
     *
     * @param storeId
     * @param mode
     * @param lang
     */
    getMenuWithoutChangeAnyContext(storeId, mode, lang = 'multi') {
        var url = '/api/v1/menu/store/' + storeId + '.json?menu=' + mode + '&locale=' + lang;
        var container = this.platformService.getContainer();
        if (container) {
            url += "&container=" + container;
        }
        var channel = this.platformService.getMenuChannel();
        if (channel) {
            url += "&channel=" + channel;
        }
        var store = this.getCachedMenuStore(url);
        if (store) {
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.of)(store);
        }
        return this.dataService.get(url).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.map)(jo => {
            store = aigens_data__WEBPACK_IMPORTED_MODULE_0__.Data.toData(aigens_data__WEBPACK_IMPORTED_MODULE_0__.Store, jo);
            const mm = new aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MenuManager(this.injector);
            mm.processMenu(store.menu);
            // closed first, because sometimes give unstable behavior like change mode not changing directly
            // this.postMenuProcesses();
            return store;
        }));
    }
    /**
     * Fetch & store slim menu. Now, we use it for handling unlock category in court mode.
     *
     * @param storeIds
     * @param mode
     * @param lang
     */
    fetchAndStoreSlimMenu(storeIds, mode, lang = 'multi') {
        this.orderContext.slimMenu = {};
        storeIds.forEach(id => {
            let url = '/api/v1/menu/store/' + id + '.json?menu=' + mode + '&locale=' + lang;
            const container = this.platformService.getContainer();
            if (container) {
                url += '&container=' + container;
            }
            const channel = this.platformService.getMenuChannel();
            if (channel) {
                url += '&channel=' + channel;
            }
            let store = this.getCachedSlimMenuStore(url);
            if (store) {
                this.orderContext.slimMenu[id] = store;
            }
            this.dataService.get(url).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.map)(jo => {
                store = aigens_data__WEBPACK_IMPORTED_MODULE_0__.Data.toData(aigens_data__WEBPACK_IMPORTED_MODULE_0__.Store, jo);
                const mm = new aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MenuManager(this.injector);
                mm.processMenu(store.menu);
                this.orderContext.slimMenu[id] = store;
            })).subscribe(x => {
            });
        });
    }
    setMenuSetting(store) {
        var _a, _b;
        this.settingManager.setStoreMenu(store);
        this.orderContext.next('settingManagerDataChange', true);
        this.subscribe.mergeTranslation(this.t); // update the translation after calling the store.json
        this.settingManager.setForm((_b = (_a = this.orderContext) === null || _a === void 0 ? void 0 : _a.session) === null || _b === void 0 ? void 0 : _b.form);
    }
    getOrderSession(storeId, mode, lang = 'multi', refresh = false, byPassCache = false) {
        console.log('getOrderSession starts');
        //check if session created already
        var existing = this.orderContext.session;
        if (existing && !byPassCache) {
            if (existing === null || existing === void 0 ? void 0 : existing.form) {
                this.settingManager.setForm(existing.form);
            }
            if (existing.storeId == storeId && existing.mode == mode) {
                var now = Date.now();
                if (now > existing.expire) {
                    console.log("session expired", new Date(existing.expire));
                }
                else {
                    console.log("session not expired", new Date(existing.expire));
                    return (0,rxjs__WEBPACK_IMPORTED_MODULE_13__.of)(existing);
                }
            }
        }
        var url = '/api/v1/menu/session.json';
        var params = {
            storeId: storeId,
            mode: mode,
            "ngsw-bypass": "true",
            locale: 'multi',
            v: 4,
        };
        if (this.orderContext.spot) {
            params['spot'] = this.orderContext.spot;
        }
        //var sid = this.configService.getSessionId();
        if (mode != 'byod') {
            params['deviceId'] = this.configService.getDeviceId();
            params['guestLogin'] = true;
        }
        if (mode == 'byod') {
            params['session'] = this.orderContext.key || this.route.snapshot.queryParams.key || this.configService.getDeviceId();
            params['spot'] = this.route.snapshot.queryParams.spot;
        }
        var fields = ['membership', 'behavior', 'memberFlow'];
        if ('delivery' == mode || 'takeaway' == mode) {
            fields.push(...['addresses']);
        }
        else if ('dinein' == mode) {
            fields.push(...['passes']);
        }
        else if ('byod' == mode) {
            fields.push(...['passes']);
            fields.push(...['order']);
        }
        params['fields'] = fields.join(',');
        params['needForm'] = true;
        console.log("getOrderSession fetch");
        return this.dataService.postWithParams(url, params).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_14__.map)(jo => this.setOrderSessionData(storeId, mode, jo)));
    }
    setOrderSessionData(storeId, mode, data) {
        console.log('setOrderSessionData', data);
        this.orderContext.session = data;
        if (data === null || data === void 0 ? void 0 : data.form) {
            this.settingManager.setForm(data.form);
        }
        data.storeId = storeId;
        data.mode = mode;
        if (data.behavior) {
            this.orderContext.next('behavior', data.behavior);
        }
        var member = data.member;
        var sessionId = data.sessionId || this.configService.getSessionId();
        if (data.spot) {
            this.orderContext.spotData = data.spot;
        }
        if (sessionId && member) {
            member.sessionId = sessionId;
            if (member && data.membership) {
                member.membership = data.membership;
            }
            this.memberContextManager.setMemberData(member);
        }
        return data;
    }
    initByodPreView(mode, time) {
        var _a;
        this.priceManager.setDebugTime(time);
        this.configService.setDebugTime(time);
        (_a = this.menuService.menuManager) === null || _a === void 0 ? void 0 : _a.setDebugTime(time);
        this.menuService.menuManager.debugMode = mode;
    }
    setPassMarkers() {
        var _a, _b;
        console.log("enable Pass Cats", this.orderContext.session);
        var resultPasses = (_a = this.orderContext.session) === null || _a === void 0 ? void 0 : _a.passes;
        if (!resultPasses || !(resultPasses instanceof Array)) {
            return;
        }
        let marker = [];
        let passes = resultPasses;
        passes.forEach(pass => {
            if (pass && pass['item'] && pass['item']['marker']) {
                marker.push(pass['item']['marker']);
            }
        });
        console.log('marker', marker);
        (_b = this.menuService) === null || _b === void 0 ? void 0 : _b.setMarkers(marker);
    }
    getCachedMenuStore(url) {
        var cached = this.cachedMenus[url];
        if (cached) {
            return cached;
        }
        return null;
    }
    getCachedSlimMenuStore(url) {
        var cached = this.cachedSlimMenus[url];
        if (cached) {
            return cached;
        }
        return null;
    }
    //ANY code that changes categories must be handle by this method
    recalculateAavailableCategories() {
        var _a, _b, _c;
        console.log('recalculateAavailableCategories', 'SHOULD NOT SEE THIS MANY TIMES');
        var store = this.orderContext.store;
        var cats = (_a = this.menuService) === null || _a === void 0 ? void 0 : _a.processCats(store, (_b = this.orderContext) === null || _b === void 0 ? void 0 : _b.mode);
        cats = this.personalizeMenu(cats);
        this.orderContext.availableCategories = cats;
        this.orderContext.next("availableCategories", cats);
        (_c = this.orderContext) === null || _c === void 0 ? void 0 : _c.initMenuCatGroup(); // it should init catGroup function after checking all cat isAvailable
    }
    setMenuData(url, store, fromCache = false) {
        console.log('setMenuData');
        this.orderContext.setMenu(store, fromCache);
        this.setMenuSetting(store);
        console.log('caching menu', url);
        this.cachedMenus[url] = store;
        return store;
    }
    personalizeMenu(activeCats) {
        var _a, _b;
        var personal = this.orderContext.personalMenu;
        console.log('PERSONALIZE MENU', personal);
        if (!personal && this.settingManager.get('menu.sorting', null) !== 'ai')
            return activeCats;
        //sort the cats
        var result = this.recommendationManager.sortCategories(activeCats, this.memberContext.member, (_a = this.orderContext.behavior) === null || _a === void 0 ? void 0 : _a.food);
        if (result === null || result === void 0 ? void 0 : result.cats) {
            //asign the cats
            activeCats = result.cats;
        }
        for (let cat of activeCats) {
            var mainIg = cat.groups[0];
            var items = mainIg.parentItems;
            var sortedItems = this.recommendationManager.sortItems(items, this.memberContext.member, (_b = this.orderContext.behavior) === null || _b === void 0 ? void 0 : _b.food);
            mainIg.parentItems = sortedItems;
        }
        return activeCats;
    }
    makeFakeItems() {
        var items = [];
        for (let i = 0; i < 10; i++) {
            var item = new aigens_data__WEBPACK_IMPORTED_MODULE_0__.Item();
            item.name = 'ITEM ' + this.fakeCount;
            item.price = 100.0;
            items.push(item);
            var imgUrl = 'https://via.placeholder.com/150/AA0000?text=' + item.name;
            var image = new aigens_data__WEBPACK_IMPORTED_MODULE_0__.Image();
            image.url = imgUrl;
            item.images = { 'default': image };
            this.fakeCount++;
        }
        return items;
    }
    addFakeItems() {
        var menu = this.orderContext.menu;
        var cats = [];
        for (let i = 0; i < 50; i++) {
            var cat = new aigens_data__WEBPACK_IMPORTED_MODULE_0__.Category();
            cat.name = 'CAT ' + i;
            var ig = new aigens_data__WEBPACK_IMPORTED_MODULE_0__.ItemGroup();
            ig.items = this.makeFakeItems();
            ig.parentItems = ig.items;
            cat.groups = [ig];
            cats.push(cat);
        }
        var concat = menu.categories.concat(cats);
        menu.categories = concat;
        this.orderContext.availableCategories = concat;
    }
    getOrderMode() {
        if (this.orderContext.mode === 'catering') {
            return this.cateringService.getDistributeMethod();
        }
        return this.orderContext.mode;
    }
    getMinOrderAmount() {
        const { menu } = this.orderContext;
        const mode = this.getOrderMode();
        switch (mode) {
            case 'takeaway':
                return menu.settings.minTakeawayTotal;
            case 'delivery':
                return menu.settings.minDeliveryTotal;
            case 'dinein':
                return menu.settings.minDineinTotal;
            default:
                return null;
        }
    }
    getMaxOrderAmount() {
        const { menu } = this.orderContext;
        const mode = this.getOrderMode();
        switch (mode) {
            case 'takeaway':
                return menu.settings.maxTakeawayTotal;
            case 'delivery':
                return menu.settings.maxDeliveryTotal;
            case 'dinein':
                return menu.settings.maxDineinTotal;
            default:
                return null;
        }
    }
    setAllConfirmed() {
        this.orderContext.confirmedMode = true;
        this.orderContext.confirmedStore = true;
    }
    /**
     * Re-apply price rule
     */
    refreshPriceRule(forceRecalculate = false) {
        var _a, _b;
        let isRecalMenu = false;
        if ((_a = this.orderContext.store) === null || _a === void 0 ? void 0 : _a.menu) {
            const priceLevelChange = this.applyPriceRule();
            if (priceLevelChange || forceRecalculate) { // only refresh layout when price level is change
                console.log('price level change');
                // update the menu price
                this.recalculateAavailableCategories();
                isRecalMenu = true;
                // update the cart price
                if ((_b = this.orderManager) === null || _b === void 0 ? void 0 : _b.order) {
                    const rawOrder = JSON.parse(JSON.stringify(this.orderManager.order));
                    this.orderManager.clearOrderItems();
                    this.orderManager.reconstructOrder(rawOrder);
                }
            }
        }
        return isRecalMenu;
    }
    applyPriceRule() {
        var _a;
        if ((_a = this.orderContext.store) === null || _a === void 0 ? void 0 : _a.menu) {
            this.priceManager.directoryUnixTime = this.directoryContext.getUnixTime();
            this.priceManager.updateBasePrice(this.orderContext.store.menu, this.orderContext.mode, this.memberContext.member, this.orderContext.store, this.orderContext.spotData);
            this.priceManager.memberTierPrice(this.orderContext.store.menu, this.orderContext.mode, this.memberContext.member, this.orderContext.store);
        }
        return this.priceManager.priceLevelChange;
    }
    // check the maximum order amount allowed
    isMaxOrderAmountAllowedBreached() {
        var _a, _b;
        const maxOrderAmountAllowed = this.getMaxOrderAmount();
        if (maxOrderAmountAllowed) {
            if ((_b = maxOrderAmountAllowed < ((_a = this.orderManager.order) === null || _a === void 0 ? void 0 : _a.total)) !== null && _b !== void 0 ? _b : 0) {
                return { valid: false, maxAmountAllowed: maxOrderAmountAllowed };
            }
        }
        return { valid: true, maxAmountAllowed: maxOrderAmountAllowed };
    }
    savePreOrder() {
        if (this.settingManager.get('preOrderSameAsPrekiosk', false)) {
            this.preOrderContext.data = this.orderContext.makeSaveData();
            this.postPreOrderSameAsPreKioskOrder();
            this.preOrderContext.save();
            return;
        }
        this.preOrderContext.data = this.orderContext.makeSaveData();
        this.preOrderContext.save();
    }
    hasPreorder(storeId, mode) {
        if (mode == 'byod' && this.preOrderContext.order) {
            if (this.preOrderContext.storeId == storeId) {
                return true;
            }
        }
        return false;
    }
    disableCheckout() {
        var _a, _b, _c, _d, _e, _f, _g, _h;
        if (this.settingManager.get('allowEmptyOrderToCart', false)) {
            return false;
        }
        if (this.orderManager.hasOfferAlone()) {
            return false;
        }
        // only have minimum order checking now
        if (this.getMinOrderAmount() == null) {
            // minimum order not set
            return this.orderManager.isEmpty() || (!this.isPaylater() && ((_b = (_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.order) === null || _b === void 0 ? void 0 : _b.total) <= 0 && !this.orderManager.isAllowCheckoutZeroTotal((_d = (_c = this.orderManager) === null || _c === void 0 ? void 0 : _c.order) === null || _d === void 0 ? void 0 : _d.total));
        }
        else {
            if (((_f = (_e = this.orderManager.order) === null || _e === void 0 ? void 0 : _e.total) !== null && _f !== void 0 ? _f : 0) > 0) {
                return false;
            }
            else {
                if (this.orderManager.isAllowCheckoutZeroTotal((_h = (_g = this.orderManager) === null || _g === void 0 ? void 0 : _g.order) === null || _h === void 0 ? void 0 : _h.total)) {
                    return false;
                }
                return true;
            }
        }
    }
    isPaylater() {
        return this.orderManager.mode === 'byod' || this.orderManager.mode === 'prekiosk' || this.orderManager.mode === 'preorder';
    }
    postPreOrderSameAsPreKioskOrder() {
        var _a, _b;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_15__.__awaiter)(this, void 0, void 0, function* () {
            const url = '/api/v1/menu/order.json';
            const body = Object.assign({}, this.preOrderContext.data.order);
            body['type'] = 'preorder';
            body['session'] = ((_b = (_a = this.orderManager) === null || _a === void 0 ? void 0 : _a.order) === null || _b === void 0 ? void 0 : _b.session) || this.configService.getSessionId();
            body['takeout'] = 'takeaway' === this.orderManager.mode;
            // if (this.sdkConfigService.isCrystalJade && this.sdkConfigService.getMemberCardNo) {
            //     body['card'] = this.sdkConfigService.getMemberCardNo;
            // }
            yield this.storageService.getStorage(this.preOrderContext.contextId).then((x) => {
                if (x === null || x === void 0 ? void 0 : x.uuid) {
                    body['uuid'] = x.uuid;
                }
            });
            let returnedOrder = null;
            this.dataService.postWithBody(url, body).subscribe({
                next: (data) => {
                    returnedOrder = data === null || data === void 0 ? void 0 : data.data;
                    this.preOrderContext.order = returnedOrder;
                    this.preOrderContext.data = { uuid: returnedOrder.uuid };
                    this.preOrderContext.save();
                },
                error: (error) => {
                    console.log(error);
                }
            });
        });
    }
}
OrderContextManager.ɵfac = function OrderContextManager_Factory(t) { return new (t || OrderContextManager)(_angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_16__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_17__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderContext), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.DataService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.ConfigService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_2__.StorageService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.RecommendationManager), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.Context), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MemberContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_3__.SettingManager), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MemberContext), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_menu_service__WEBPACK_IMPORTED_MODULE_4__.MenuService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_5__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_catering_service__WEBPACK_IMPORTED_MODULE_6__.CateringService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_7__.PlatformService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.PriceManager), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderManager), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_8__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_favorite_item_service__WEBPACK_IMPORTED_MODULE_9__.FavoriteItemService), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_aigens_core_src_app_framework_services_pre_order_context_service__WEBPACK_IMPORTED_MODULE_10__.PreOrderContext), _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_18__.TranslateService)); };
OrderContextManager.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_16__["ɵɵdefineInjectable"]({ token: OrderContextManager, factory: OrderContextManager.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 29331:
/*!***************************************************************************!*\
  !*** ./projects/byod/src/app/byod/services/order-flow-manager.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "OrderFlowManager": () => (/* binding */ OrderFlowManager)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/routing.service */ 28759);
/* harmony import */ var _aigens_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/order-context-manager.service */ 4911);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var _aigens_directory_src_app_directory_services_directory_context_manager_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aigens/directory/src/app/directory/services/directory-context-manager.service */ 7567);
/* harmony import */ var _aigens_byod_src_app_byod_services_cart_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/cart.service */ 54729);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var _aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @aigens/core/src/app/pure/managers/setting-manager */ 74663);
/* harmony import */ var _aigens_crm_src_app_crm_standard_framework_services_routing_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @aigens/crm/src/app/crm/standard/framework/services/routing.service */ 76667);
/* harmony import */ var _aigens_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/platform.service */ 45485);













class OrderFlowManager extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BaseService {
    constructor(injector, orderContext, routingService, dialogService, orderContextManager, directoryContext, directoryContextManager, orderManager, cartService, t, settingManager, crmRoutingService, platformService) {
        super(injector);
        this.orderContext = orderContext;
        this.routingService = routingService;
        this.dialogService = dialogService;
        this.orderContextManager = orderContextManager;
        this.directoryContext = directoryContext;
        this.directoryContextManager = directoryContextManager;
        this.orderManager = orderManager;
        this.cartService = cartService;
        this.t = t;
        this.settingManager = settingManager;
        this.crmRoutingService = crmRoutingService;
        this.platformService = platformService;
    }
    smartShowModeSelector(input = null) {
        if (this.orderContext.fixedStoreId && this.orderContext.mode !== 'catering') {
            // disable mode selection if it's from store home and has device config
            const disableModeSelection = this.settingManager.get('disableModeSelection', false);
            const canChangeStoreWhenOnPremise = this.settingManager.get('storeLevelDisplayStoreSelect', false);
            if (this.directoryContext.fromStoreHome && disableModeSelection) {
                return;
            }
            if (this.platformService.isOnPremise() && !canChangeStoreWhenOnPremise) {
                return;
            }
            this.showModeSelector(input);
        }
        else {
            this.showModeStoreSelector(input);
        }
    }
    showInputSeat() {
        const inputSeatPath = 'order/dialog/input-seats';
        const auxInput = {
            spot: this.orderContext.spot,
            session: this.context.sessionId,
            storeId: this.orderContext.storeId
        };
        this.routingService.navigateModal(inputSeatPath, auxInput);
    }
    openInputTableDialog() {
        const path = 'order/dialog/input-table-no';
        this.dialogService.openAux(path, { storeId: this.orderContext.storeId }, {}, (data) => {
            if (data === null || data === void 0 ? void 0 : data.spot) {
                this.routingService.navigate(`/order/store/${this.orderContext.storeId}/mode/${this.orderContext.mode}`, { queryParams: { spot: data.spot } });
                this.orderContext.spot = data.spot;
                if (this.settingManager.get('menu.inputSeats', false) && this.orderContext.seats === undefined) {
                    this.showInputSeat();
                }
            }
        });
    }
    showModeSelector(input = null, close = true) {
        const path = `popup/store/${this.orderContext.storeId}`;
        this.routingService.navigateModal(path, input, { queryParams: { action: 'changeLoc', close }, skipLocationChange: false });
    }
    showModeStoreSelector(input = null) {
        if (this.isModeConfirmed()) {
            this.directoryContext.state.mode = this.orderContext.mode;
        }
        this.routingService.navigateModal(`directory/brand/${this.orderContext.brand.id}`, input, { queryParams: { action: 'changeLoc' } });
    }
    showCourtModeStoreSelector(input = null) {
        if (this.isModeConfirmed()) {
            this.directoryContext.state.mode = this.orderContext.mode;
        }
        this.routingService.navigateModal(`directory/court/${this.orderContext.court.id}`, input, { queryParams: { action: 'changeLoc' } });
    }
    showStoreSelector() {
        const path = `popup/store`;
        this.routingService.navigateModal(path, {}, { queryParams: {}, skipLocationChange: false });
    }
    showTimeSelection(dialogComp, callback, queryParams = null, forceSetDefault = false, disallowAsap = false) {
        const qp = {};
        if (queryParams) {
            qp.queryParams = queryParams;
        }
        // maybe callback need to breakdown in the future
        this.routingService.navigateModal(`directory/time-selection`, {
            forceSetDefault,
            disallowAsap,
            callback: (res) => {
                this.handleAfterChangeTime(res, {
                    confirmDialogComponent: dialogComp,
                    callbackNoInvalidCartItem: () => {
                        if (callback) {
                            callback(res);
                        }
                    },
                    callbackYesOnConfirmClearInvalidCartItem: () => {
                        if (callback) {
                            callback(res);
                        }
                    },
                    callbackOther: () => {
                        if (callback) {
                            callback(res);
                        }
                    },
                });
            }, qp
        }, qp);
    }
    /**
     * @description: when user change the selectTime so trigger this functions
     * @param {any} res
     * @param param
     * @return {*}
     */
    handleAfterChangeTime(res, param) {
        var _a, _b, _c, _d;
        const userSelectTime = res === null || res === void 0 ? void 0 : res.userSelectTime;
        console.log('change time', userSelectTime, new Date(userSelectTime));
        if (typeof userSelectTime === 'number') {
            const temp = this.cartService.checkAvailabilityOrderItemOnCart(userSelectTime);
            if (temp.invalidOrderItems.length > 0 && param.confirmDialogComponent) {
                this.dialogService
                    .openComponent(param.confirmDialogComponent, { orderItems: temp.invalidOrderItems, trigger: 'changeTime' })
                    .afterClosed().subscribe(resp => {
                    var _a, _b, _c, _d;
                    if ((resp === null || resp === void 0 ? void 0 : resp.action) === 'yes') {
                        (_a = this.directoryContextManager) === null || _a === void 0 ? void 0 : _a.setFinalState(false);
                        this.directoryContext.publishDefaultSharedData((_b = this.orderContext) === null || _b === void 0 ? void 0 : _b.store, (_c = this.orderContext) === null || _c === void 0 ? void 0 : _c.mode, (_d = this.orderContext) === null || _d === void 0 ? void 0 : _d.spot);
                        this.orderContextManager.refreshPriceRule(true);
                        // this.orderContextManager.recalculateAavailableCategories();
                        this.orderManager.clearOrderItems();
                        this.orderManager.reconstructOrder(temp.validOrder);
                        if (param.callbackYesOnConfirmClearInvalidCartItem) {
                            param.callbackYesOnConfirmClearInvalidCartItem();
                        }
                    }
                });
            }
            else {
                (_a = this.directoryContextManager) === null || _a === void 0 ? void 0 : _a.setFinalState(false);
                this.directoryContext.publishDefaultSharedData((_b = this.orderContext) === null || _b === void 0 ? void 0 : _b.store, (_c = this.orderContext) === null || _c === void 0 ? void 0 : _c.mode, (_d = this.orderContext) === null || _d === void 0 ? void 0 : _d.spot);
                this.orderContextManager.refreshPriceRule(true);
                // this.orderContextManager.recalculateAavailableCategories();
                if (param.callbackNoInvalidCartItem) {
                    param.callbackNoInvalidCartItem();
                }
            }
        }
        else {
            if (param.callbackOther) {
                param.callbackOther();
            }
        }
    }
    isAllConfirmed() {
        return this.orderContext.confirmedMode && this.orderContext.confirmedStore;
    }
    isModeConfirmed() {
        return this.orderContext.confirmedMode;
    }
    isStoreConfirmed() {
        return this.orderContext.confirmedStore;
    }
    isMenuFirstFlow() {
        switch (this.getOrderModeSelection()) {
            case 'beforeMenu':
                return false;
            case 'onItemClick':
                return true;
            case 'onCheckOut':
                return true;
        }
        return true;
    }
    isMenuFirstFlowAndNotConfirmed() {
        return this.isMenuFirstFlow() && !this.isAllConfirmed();
    }
    isOrderModeSelectionOnItemClick() {
        return this.getOrderModeSelection() == 'onItemClick';
    }
    isOrderModeSelectionOnCheckOut() {
        return this.getOrderModeSelection() == 'onCheckOut';
    }
    isOrderContextSeatsNotConfirmed() {
        var _a;
        if (((((_a = this.orderContext.pos) === null || _a === void 0 ? void 0 : _a.requireSpot) || this.settingManager.get('menu.userTable', false)) && this.orderContext.mode === 'dinein') || this.orderContext.mode === 'byod') {
            if (!this.orderContext.spot) {
                if (!this.orderContext.pos.inputSpot && !this.settingManager.get('menu.userTable', false)) {
                    this.dialogService.showError({ status: '400', error: this.t.instant('byod.pages.order-page.spot-invalid') });
                    return true;
                }
                this.openInputTableDialog();
                return true;
            }
            if (this.settingManager.get('menu.inputSeats', false) && this.orderContext.seats === undefined) {
                this.showInputSeat();
                return true;
            }
        }
        return false;
    }
    isModePickup() {
        return this.orderContext.mode === 'pickup';
    }
    getOrderModeSelection() {
        // beforeMenu
        // onItemClick
        // onCheckOut
        var _a, _b;
        const orderModeSelection = (_b = (_a = this.context) === null || _a === void 0 ? void 0 : _a.brand) === null || _b === void 0 ? void 0 : _b.orderModeSelection;
        return orderModeSelection !== null && orderModeSelection !== void 0 ? orderModeSelection : 'beforeMenu';
    }
    process(confirmedMode, confirmedStore, brandId, courtId, groupId) {
        var _a, _b;
        this.orderContext.confirmedMode = confirmedMode;
        this.orderContext.confirmedStore = confirmedStore;
        if (!this.orderContext.confirmedMode && this.orderContext.confirmedStore) { // from store home
            const storeModes = this.getValidModeForStore((_a = this.context.store) === null || _a === void 0 ? void 0 : _a.modes);
            if (storeModes.length == 1 && storeModes[0] == this.orderContext.mode) {
                this.orderContext.confirmedMode = true;
            }
        }
        if (!this.orderContext.confirmedMode && !this.orderContext.confirmedStore) { // from brand home
            // @ts-ignore
            const brandModes = this.getValidModeForBrand((_b = this.context.brand) === null || _b === void 0 ? void 0 : _b.modes);
            if (brandModes.length == 1 && brandModes[0] == this.orderContext.mode) {
                this.orderContext.confirmedMode = true;
            }
        }
        if (!this.isMenuFirstFlow()) {
            this.orderContext.confirmedStore = true;
            this.orderContext.confirmedMode = true;
        }
        // fixed store if court mode / group mode / from store home
        if (courtId || groupId || ((!brandId && !groupId && !courtId) || this.platformService.isOnPremise())) {
            this.orderContext.fixedStoreId = true;
        }
        this.directoryContext.fromStoreHome = (!brandId && !groupId && !courtId) || this.platformService.isOnPremise();
        // set view mode state
        this.orderContext.viewMode = this.orderContext.mode == 'view';
    }
    getValidModeForBrand(brandModes) {
        return this.filterModes(brandModes, ['takeaway', 'dinein', 'delivery']);
    }
    getValidModeForStore(storeModes) {
        return this.filterModes(storeModes, ['takeaway', 'dinein']);
    }
    filterModes(modes, valids) {
        const result = [];
        if (!modes) {
            return result;
        }
        for (const m of modes) {
            if (valids.indexOf(m) >= 0) {
                result.push(m);
            }
        }
        return result;
    }
    displayFillProfileAlert() {
        this.dialogService.showConfirm('', this.t.instant('crm.reward.need-fill-profile-msg'), { okText: this.t.instant('crm.reward.fill-profile-btn') })
            .subscribe((result) => {
            if (result == 'confirm') {
                this.crmRoutingService.goFillProfile();
            }
        });
    }
    canEditCartInCheckoutPage() {
        return this.settingManager.get('menu.checkoutFlow', 'default') === 'checkout';
    }
    isSkipMobileCartPageFlow() {
        return this.settingManager.get('menu.checkoutFlow', 'default') === 'checkout';
    }
}
OrderFlowManager.ɵfac = function OrderFlowManager_Factory(t) { return new (t || OrderFlowManager)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_9__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.OrderContext), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_1__.RoutingService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.DialogService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_2__.OrderContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_3__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_directory_src_app_directory_services_directory_context_manager_service__WEBPACK_IMPORTED_MODULE_4__.DirectoryContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.OrderManager), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_byod_src_app_byod_services_cart_service__WEBPACK_IMPORTED_MODULE_5__.CartService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_ngx_translate_core__WEBPACK_IMPORTED_MODULE_10__.TranslateService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_6__.SettingManager), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_crm_src_app_crm_standard_framework_services_routing_service__WEBPACK_IMPORTED_MODULE_7__.RoutingService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_aigens_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_8__.PlatformService)); };
OrderFlowManager.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"]({ token: OrderFlowManager, factory: OrderFlowManager.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 36248:
/*!***********************************************************!*\
  !*** ./projects/byod/src/app/common/base-cart.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseCartService": () => (/* binding */ BaseCartService)
/* harmony export */ });
/* harmony import */ var _core_src_app_pure_services_time_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../../../core/src/app/pure/services/time.service */ 72570);
/* harmony import */ var _aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/managers/setting-manager */ 74663);
/* harmony import */ var _aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! uuid */ 62535);
/* harmony import */ var _byod_services_layout_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../byod/services/layout.service */ 81623);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);










class BaseCartService {
    constructor(injector) {
        this.itemMap = {}; // sometimes origin item existes attr.mgroups but item.mgroups is null in builder, So createing this itemMap to find the origin data(v3)
        this.byodDialogService = null;
        this.t = injector.get(_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__.TranslateService);
        this.orderContext = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.OrderContext);
        this.dataService = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.DataService);
        this.memberContext = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.MemberContext);
        this.configService = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.ConfigService);
        this.menuManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.MenuManager);
        this.dialogService = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.DialogService);
        this.orderManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.OrderManager);
        this.inventoryManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_4__.InventoryManager);
        this.directoryContext = injector.get(_aigens_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_2__.DirectoryContext);
        // this.memberService = injector.get(MemberService);
        this.settingManager = injector.get(_aigens_core_src_app_pure_managers_setting_manager__WEBPACK_IMPORTED_MODULE_1__.SettingManager);
        this.layoutService = injector.get(_byod_services_layout_service__WEBPACK_IMPORTED_MODULE_5__.LayoutService);
        this.timeService = injector.get(_core_src_app_pure_services_time_service__WEBPACK_IMPORTED_MODULE_0__.TimeService);
    }
    // （坑）return Item 里没有 groups 数据，部分数据不完整
    getMainItem(oi) {
        let mainitem = aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.getMainItem(oi);
        return mainitem;
    }
    getOriginMainItem(store, oi) {
        let originMainItem = null;
        let builder = new aigens_framework__WEBPACK_IMPORTED_MODULE_4__.OrderItemBuilder(store);
        const origins = builder.findOrigins(oi);
        originMainItem = origins === null || origins === void 0 ? void 0 : origins.item;
        return originMainItem;
    }
    /**  orderItem type logic start **/
    isComboOi(oi) {
        // sometimes combo-oi because of the oi.category.groups is [],so return false
        return aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.isSet(oi);
    }
    isCouponMainItemOi(oi) {
        let mainItem = this.getMainItem(oi);
        return (mainItem === null || mainItem === void 0 ? void 0 : mainItem.type) === 'coupon';
    }
    isAlacarteModifierOi(oi) {
        return oi === null || oi === void 0 ? void 0 : oi.modifiable; // ng-core 里 执行 modifier-builder.build()里 OrderItem.getFlattenItems(this.orderitem, false) 会把 item.mgroups 舍弃
        // let mainItem = this.getMainItem(oi);
        // return Item.isModifiable(mainItem);
    }
    isAlacarteEgiftModifierOi(item) {
        var _a;
        return (_a = item.custom) === null || _a === void 0 ? void 0 : _a.isEgiftFlow;
    }
    /**  orderItem type logic end **/
    // Various operations of orderItem in cart
    cartOiByOperateType(oi, operateType) {
        switch (operateType) {
            case 'remove':
                this.minusHandle(oi);
                break;
            case 'add':
                this.addHandle(oi);
                break;
            case 'edit':
                this.editHandle(oi);
                break;
            case 'editComboModifier':
                this.editHandle(oi, true);
                break;
        }
    }
    unlockItemEditHandle(oi, opt) {
        this.editHandle(oi, false, opt);
    }
    minusHandle(oi) {
        if (!this.canMinusOrderItem(oi)) {
            // If we cannot minus the item, then we remove all items
            this.orderManager.minusOrderItem(oi, true);
            return;
        }
        this.orderManager.minusOrderItem(oi);
    }
    // TODO: check device config this.context.getDeviceConfig("checkItemMax")
    addHandle(oi) {
        if (this.orderManager.checkOrderMaxItem(1)) {
            this.dialogService.showToast(this.t.instant('byod.components.cart.max-order-amount-reached', { amount: this.orderContext.store.menu.maxItems }), 2000, 'top');
            return;
        }
        if ((oi === null || oi === void 0 ? void 0 : oi.categoryType) === 'unlock' || (oi === null || oi === void 0 ? void 0 : oi.categoryType) === 'unlockItem') {
            return;
        }
        /*
        let item = oi.items[0];
        if (this.orderContext.getMenuDeviceConfig("checkItemMax") && this.orderManager.checkAddItemMax(item, 1)) {
            this.dialogService.showToast("Fail to add cart, exceed item level max:" + item.max, 2000, 'top');
            return;
        }
        */
        if (!this.checkAddOrderItemInventory(oi)) {
            const item = aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.getMainItem(oi);
            const msg = this.t.instant('byod.components.cart.cart-insufficient-stock', {
                item: item['name' + '_' + `${this.byodDialogService.t.currentLang}`] || item.name,
                stock: this.inventoryManager.getInv(item)
            });
            this.byodDialogService.showAlert('', msg);
            return;
        }
        if (!this.canAddOrderItem(oi)) {
            this.byodDialogService.showToast(this.t.instant('byod.pages.base-page.item-max-message'), 500, 'top');
            return;
        }
        if (this.isComboOi(oi)) {
            console.log('isComboOi');
            console.log('复制一个新oi,包括 groups 配置');
            const groupCombo = this.isGroupCombo();
            if (groupCombo) {
                this.orderManager.addExistingOrderItem(oi);
            }
            else {
                this.orderManager.duplicateOrderItem(oi);
            }
        }
        else if (this.isCouponMainItemOi(oi)) {
            console.log('is CouponMainItemOi');
            console.log('复制一个新 CouponMainItemOi');
            this.orderManager.duplicateOrderItem(oi);
        }
        else {
            console.log('alacarteOi');
            console.log('alacarteOi 数量加一');
            this.orderManager.addExistingOrderItem(oi);
        }
    }
    /**
     * @description: oi edit handle logic
     * @param {OrderItem} oi that need to edit
     */
    editHandle(oi, forModifier = false, opt) {
        var _a;
        let mainItem_oi = this.getMainItem(oi);
        let setLayout = (_a = this.layoutService) === null || _a === void 0 ? void 0 : _a.getSetLayout(mainItem_oi);
        if (!setLayout) {
            console.log('no setLayout');
        }
        switch (setLayout) {
            case 'multi-steps':
                console.log('multi-steps');
                this.multiStepsEditHandle(oi, opt);
                break;
            case 'multi-page':
            case 'multi-page-with-image':
            case 'single-page':
            default:
                if (!forModifier && this.isComboOi(oi)) {
                    console.log('编辑comboOi');
                    this.comboOiEditHandle(oi, opt);
                }
                else if (this.isAlacarteModifierOi(oi)) {
                    console.log('编辑alacarteModifierOi');
                    this.alacarteModifierOiEditHandle(oi);
                }
                else if (this.isAlacarteEgiftModifierOi(mainItem_oi)) {
                    this.alaCarteOiEditHandle(oi);
                    this.alacarteModifierOiEditHandle(oi, opt);
                }
        }
    }
    // new thing
    flatten(cat, mainItem) {
        console.log('flatten', mainItem);
        let mainItemGroups = (mainItem === null || mainItem === void 0 ? void 0 : mainItem.groups) || [];
        let modifierGroups = (mainItem === null || mainItem === void 0 ? void 0 : mainItem.mgroups) || [];
        let allGroups = [...mainItemGroups, ...modifierGroups];
        // todo noneed and preselect
        // todo 拓展 the mainItemGroups.items[n].mroups 里的 item to itemMap
        this.initItemMap(cat, mainItem, allGroups);
        console.log('this.itemMap', this.itemMap);
    }
    initItemMap(cat, mainItem, groups) {
        this.itemMap = {};
        this.itemMap[mainItem.id] = mainItem; // 把mainItem 加入 itemMap
        for (const group of groups) {
            const items = [];
            // get all available items of the given group
            const mainItems = this.menuManager.getAvailableItems(this.orderManager.store, cat, group, this.orderManager.isTakeout(), null, this.orderManager.mode);
            group.items = mainItems;
            if (mainItems && mainItems.length > 0) {
                mainItems.forEach((item, index) => {
                    // item['groupIndex'] = i + 1;
                    // put all itemGroupMap in itemMap
                    this.itemMap[item.id] = item;
                });
            }
        }
    }
    /**
     *
     * @param cat mainItem.cat
     * @param migroup mainItem 所属的 itemGroup
     * @param mainItem  mainItem
     * @returns
     */
    createOrderItemBuilderByMainItem(store, cat, migroup, mainItem) {
        let builder = new aigens_framework__WEBPACK_IMPORTED_MODULE_4__.OrderItemBuilder(store);
        builder.setOriginGroups(migroup, mainItem);
        /**
         * OrderItemBuilder 属性详解
         * @attr groups: ItemGroup[] = []; 储存了当前配置过的 ItemGroups
         * @attr category: Category; 点击 mainItem时，mainItem所属 cat
         * @attr store: Store;
         * @attr items: Item[] = []; 保存了ItemGroups（配置过的）里保存的 配置item (坑：执行过build() 才会update)
         * @attr qmap: any = []; 保存了配置过item 所对应的数量map 根据item.id 读取
         * @attr orderItem: OrderItem; 执行过 build()才会有值,指示当时build时的OI
         */
        builder.setCategory(cat);
        builder.setItem(migroup, mainItem, 0);
        builder.build();
        return builder;
    }
    /**
     * @description: in edit oi flow, it need to recreate builder by oi (already existes some groups or igroups setting)
     * @param {Store} store the origin store
     * @param {OrderItem} editOi the oi need to edit
     * @return {OrderItemBuilder}  builder (the builder.orderItem is same as the editOi)
     */
    createOrderItemBuilderByOrderItem(store, editOi) {
        let builder = new aigens_framework__WEBPACK_IMPORTED_MODULE_4__.OrderItemBuilder(store);
        const origins = builder.findOrigins(editOi);
        let mainItem = origins === null || origins === void 0 ? void 0 : origins.item;
        let mainItemGroup = origins === null || origins === void 0 ? void 0 : origins.groups;
        let cat = origins === null || origins === void 0 ? void 0 : origins.category;
        // Promotion Group Id
        if (mainItem === null || mainItem === void 0 ? void 0 : mainItem.pgroupId) {
            mainItem.groups.push(mainItem.pgroup);
            mainItem.groupIds.push(mainItem.pgroupId);
        }
        let mainItemSubGroups = mainItem === null || mainItem === void 0 ? void 0 : mainItem.groups;
        if ((mainItemSubGroups === null || mainItemSubGroups === void 0 ? void 0 : mainItemSubGroups.length) == 0 && origins.itemIg) {
            mainItemSubGroups = mainItemGroup.filter(grp => grp.id != origins.itemIg.id);
            mainItem.groups = mainItemSubGroups;
        }
        this.flatten(cat, mainItem);
        builder.setOriginGroups(mainItemGroup === null || mainItemGroup === void 0 ? void 0 : mainItemGroup[0], mainItem);
        builder.setCategory(cat);
        builder.transferAllItems(editOi, mainItemSubGroups);
        builder.build();
        return builder;
    }
    /**
     * @description: add Mitem.groups.item to oibuilder
     * @param {OrderItemBuilder} oiBuilder
     * @param {Item} item  need to set it to oibuilder
     * @param {ItemGroup} group  Mitem.group
     * @param {boolean} isPreselect  todo (logic should Reference v3)
     */
    // abstract add(oiBuilder: OrderItemBuilder, item: Item, group: ItemGroup, isPreselect: boolean); // add click 每个页面可能有很多独立的操作
    add(oiBuilder, item, group, isPreselect = false, addGroupItemSuccessCB = () => { }) {
        let oi;
        let groupIndex = this.getGroupIndex(oiBuilder, group); // it will find index of the oibuilder.groups
        if (groupIndex === -1) {
            console.log('it will add a new ItemGroup to oibuilder groups');
            // when add a new itemGroup, find index of the oibuilder.originGroups
            groupIndex = oiBuilder.getItemGroupIndex_allGroups(group);
        }
        let groupSelectedItemsQua = oiBuilder.getItemGroupItemsQuantity(group);
        let isSuccessAddGItem = false;
        const isOptional = group.min === 0;
        if (!group.repeat) {
            const max = group.max;
            let able = true;
            if (max >= 1) {
                const count = groupSelectedItemsQua;
                if (count >= max && max !== 1) {
                    able = false;
                }
            }
            if (max === 1 && !this.has(oiBuilder, item, group)) {
                oiBuilder.clearItems(groupIndex);
            }
            if (able && !this.has(oiBuilder, item, group)) {
                oiBuilder.plusItem(group, item, groupIndex);
                isSuccessAddGItem = true;
                oi = oiBuilder.build();
            }
            else if (this.has(oiBuilder, item, group)) {
                // this.discard(item, group);
                oiBuilder.minusItem(null, item, groupIndex);
                oiBuilder.build();
            }
            if (!isPreselect) {
                if (oiBuilder.isGroupCompleted(group)) {
                    // this.handlingModifier(oi, group, this.itemMap, () => {
                    //     this.updateSelectedModifier();
                    //     console.log('update', this.orderManager.order);
                    // }, () => {
                    //     this.minusClicked(item, group);
                    // });
                }
                else if (isOptional) {
                    // const realItem = this.itemMap[item.id];
                    // this.groupsExpandHandle(group);
                    // if (realItem.mgroups && realItem.mgroups.length > 0) {
                    //     this.handlingModifier(oi, group, this.itemMap, () => {
                    //         this.updateSelectedModifier();
                    //     }, () => {
                    //         this.minusClicked(item, group);
                    //     }, true);
                    // }
                }
            }
        }
        else {
            const max = group.max;
            if (max <= groupSelectedItemsQua) {
                console.log('max reached');
                return;
            }
            oiBuilder.plusItem(group, item, groupIndex, 0, true);
            isSuccessAddGItem = true;
            oi = oiBuilder.build();
            if (!isPreselect) {
                if (oiBuilder.isGroupCompleted(group)) {
                    // 如果 新点击的mitem 没有 modifier并且之前的modifier 已经配好就不用执行 handlingModifier()
                    // if (item.mgroups.length > 0 || !this.isRequiredModifierSelect(this.nonAutoPickupGroups.indexOf(group))) {
                    //     this.handlingModifier(oi, group, this.itemMap, () => {
                    //         this.updateSelectedModifier();
                    //     }, () => {
                    //         const tmpItems: Item[] = [];
                    //         if (oi.groups && oi.groups[groupIndex] && oi.groups[groupIndex].items) {
                    //             for (const item of oi.groups[groupIndex].items) {
                    //                 for (let i = 0; i < item.quantity; i++) {
                    //                     tmpItems.push(this.itemMap[item.id]);
                    //                 }
                    //             }
                    //             for (const item of tmpItems) {
                    //                 this.minusClicked(item, group);
                    //             }
                    //         }
                    //     });
                    // }
                }
                else if (isOptional) {
                    // const realItem = this.itemMap[item.id];
                    // if (realItem.mgroups && realItem.mgroups.length > 0) {
                    //     this.handlingModifier(oi, group, this.itemMap, () => {
                    //         this.updateSelectedModifier();
                    //     }, () => {
                    //         this.minusClicked(item, group);
                    //     }, true);
                    // }
                }
            }
        }
        // In multi-steps page, it should auto popUp modifierDialog after adding GItem successly
        isSuccessAddGItem && addGroupItemSuccessCB();
    }
    /**
     * @description: check 当前 group.item 是否有必选的 mgroups
     * @param {Item} item
     * @return {*}
     */
    isCurrentItemHasRequiredModifier(GItem) {
        var _a, _b;
        return ((_a = GItem === null || GItem === void 0 ? void 0 : GItem.mgroups) === null || _a === void 0 ? void 0 : _a.length) > 0 && ((_b = GItem === null || GItem === void 0 ? void 0 : GItem.mgroups) === null || _b === void 0 ? void 0 : _b.some(mg => mg === null || mg === void 0 ? void 0 : mg.min));
    }
    /**
     * @description: remove Mitem.groups.item in oibuilder
     * @param {OrderItemBuilder} oiBuilder
     * @param {Item} item need to remove it in oibuilder
     * @param {ItemGroup} group Mitem.group
     */
    discard(oiBuilder, item, group) {
        oiBuilder.minusItem(null, item, this.getGroupIndex(oiBuilder, group));
        oiBuilder.build();
    }
    /**
     * @description: get groupIndex of specify group in oibuilder.groups
     * @param {OrderItemBuilder} oiBuilder
     * @param {ItemGroup} group
     * @return {number}
     */
    getGroupIndex(oiBuilder, group) {
        return oiBuilder.getItemGroupIndex_hasSelected(group);
    }
    /**
     * @description: get the quantity of item in oibuilder
     * @param {OrderItemBuilder} oiBuilder
     * @param {Item} item
     * @param {ItemGroup} group
     * @return {number}
     */
    getQuantity(oiBuilder, item, group) {
        return oiBuilder.getQuantityInGroup(this.getGroupIndex(oiBuilder, group), item.id);
    }
    /**
     * @description: whether the item existes in oibuilder (当前的 oiBuilder 是否选了该 mgroup.item)
     * @param {OrderItemBuilder} oiBuilder
     * @param {Item} item
     * @param {ItemGroup} group
     * @return {boolean}
     */
    has(oiBuilder, item, group) {
        // console.log(item, group);
        return this.getQuantity(oiBuilder, item, group) > 0;
    }
    /**
     * @description: get item isSoldout (copy from v3)
     * @param {Item} item
     * @param {Category} cat
     * @return {boolean}
     */
    isSoldout(item, cat = null) {
        let now = new Date().getDate();
        if (this.orderManager.store) {
            now = this.convertNowDateToStoreTimeZone(this.orderManager.store.timezone).getTime();
        }
        return this.inventoryManager.isSoldout(item) || !this.isAvailableItemWithValidModifierSettings(this.orderManager.store, cat, item.mgroups, this.orderManager.isTakeout(), now, true);
    }
    /**
     * @description: get item isPreparing
     * @param {Item} item
     * @param {Category} cat
     * @return {boolean}
     */
    isPreparing(item, cat = null) {
        return this.inventoryManager.isPreparing(item);
    }
    // copy from v3
    convertNowDateToStoreTimeZone(timeZone, time_num) {
        timeZone = timeZone ? timeZone : 'GMT+8';
        let timeZoneValue = timeZone.split('GMT')[1];
        let integerTimeZoneValue = parseInt(timeZoneValue) * 60;
        let now = this.menuManager.debugTime ? new Date(this.menuManager.debugTime) : this.timeService.getTimeObject();
        if (time_num) {
            now = new Date(time_num);
        }
        let timeZoneOffset = now.getTimezoneOffset();
        let newTime = now.getTime() + (timeZoneOffset + integerTimeZoneValue) * 60000;
        now.setTime(newTime);
        return now;
    }
    // menuManger.isAvailableGroup(store, cat, item.mgroups[0], orderManager.order.takeout, now, true) copy from v3
    isAvailableItemWithValidModifierSettings(store, cat, groups, takeout, now, modifier) {
        let result = true;
        // mgroups
        if (groups && groups.length > 0) {
            for (const group of groups) {
                if (group.min > 0) {
                    if (!group.items || group.items.length < 1) {
                        result = false;
                    }
                    if (!result) {
                        break;
                    }
                }
                result = this.menuManager.isAvailableGroup(store, cat, group, takeout, now, modifier, this.orderManager.mode);
                if (!result) {
                    break;
                }
            }
        }
        return result;
    }
    /**  hasModifier logic start(some logic copy form v3 and refactor) **/
    /**
     * @description: 判断 oiBuilder 是否拥有 modifier
     * @param {OrderItemBuilder} oiBuilder
     * @return {boolean}
     */
    isHasModifierByOiBuilder(oiBuilder) {
        var _a;
        let show = false;
        if (oiBuilder && oiBuilder.groups) {
            for (let i = 0; i < oiBuilder.groups.length; i++) {
                if (((_a = oiBuilder === null || oiBuilder === void 0 ? void 0 : oiBuilder.groups) === null || _a === void 0 ? void 0 : _a[i]) && this.isCurrentGroupHasModifier(oiBuilder, oiBuilder.groups[i])) {
                    show = true;
                    break;
                }
            }
        }
        return show;
    }
    /**
     * @description: 判断 oiBuilder 里某个 group 是否拥有 modifier
     * @param {OrderItemBuilder} oiBuilder
     * @param {ItemGroup} group
     * @param {any} map
     * @return {boolean}
     */
    isCurrentGroupHasModifier(oiBuilder, group, map) {
        // let index = this.groupIdMap[group.id];
        let g = oiBuilder === null || oiBuilder === void 0 ? void 0 : oiBuilder.getGroupById(group.id);
        // let originIG: ItemGroup = this.orderItemBuilder.getOriginGroupById(group.id);
        // let items
        if (g) {
            let has = this.hasModifier(g.items, this.itemMap);
            if (map) {
                map[g.id] = has;
            }
            return has;
        }
        else {
            return false;
        }
    }
    /**
     * @description: 判断 items 是否拥有 modifier
     * @param {Item} items
     * @param {any} itemMap
     * @param {boolean} checkRequired
     * @return {boolean}
     */
    hasModifier(items, itemMap, checkRequired = false) {
        let required = false;
        let isAvailableMod = false;
        for (let item of items) {
            let tmpItem = itemMap[item.id];
            if (tmpItem && tmpItem.mgroups && tmpItem.mgroups.length > 0) {
                for (let mgroup of tmpItem.mgroups) {
                    for (let mItem of mgroup.items) {
                        if (mItem && mItem.name) {
                            isAvailableMod = true;
                            break;
                        }
                    }
                }
                if (checkRequired) {
                    for (let mgroup of tmpItem.mgroups) {
                        if (mgroup.min && mgroup.min > 0) {
                            required = true;
                            break;
                        }
                    }
                }
                else {
                    required = true;
                    continue;
                }
            }
        }
        return required && isAvailableMod;
    }
    /**  hasModifier logic end **/
    /**  groupCompleted logic start(some logic copy form v3 and refactor) **/
    /**
     * @description: 判断 当前oiBuilder 是否配置完成可以加入购物车
     * @param {OrderItemBuilder} oiBuilder
     * @return {boolean}
     */
    isAllCompletedByOiBuilder(oiBuilder) {
        let allGroups = oiBuilder === null || oiBuilder === void 0 ? void 0 : oiBuilder.getOriginGroups();
        if (!allGroups || allGroups.length === 0)
            return true;
        for (let i = 0; i < allGroups.length; i++) {
            /*
            * Suppose now there are 5 groups and they are [A, B, C, D, E] and A is the main group,
            * this.groups is an array [B, C, D, E],
            * builder.groups is an array with groups which have selected itemGroupMap, says [A, B, C, (null), (null)]
            *
            * then we check this.groups one by one (except main group)
            * if this.groups[i] is not optional
            * builder.groups[i + 1] must has an selected item
            * if not, then it is incompleted
            */
            if (!oiBuilder.isGroupCompleted(allGroups[i])) {
                return false;
            }
            // check 配置里items 是否完成了mgroups 配置
            if (!this.isRequiredModifierSelect(oiBuilder, allGroups[i])) {
                return false;
            }
        }
        return true;
    }
    // // 判断 当前itemgroup 选了的 item 是否都配置完成（item.mgroups mitem选中时符合最低要求）
    // isRequiredModifier_CurrentGroupSelectItem(oiBuilder: OrderItemBuilder, currentGroup: ItemGroup): boolean {
    //     return this.isRequiredModifierSelect(oiBuilder, currentGroup);
    // }
    /**
     * @description: 当前groups 是否需要配置 modifier
     * @param {OrderItemBuilder} oiBuilder
     * @param {ItemGroup} currentGroup
     * @return {boolean}
     */
    isRequiredModifierSelect(oiBuilder, currentGroup) {
        const oi = oiBuilder.build();
        // let currentGroup = this.nonAutoPickupGroups[index];
        let tmpIndex = -1;
        currentGroup && oi.groups.map((el, idx) => {
            if (currentGroup.id === el.id)
                tmpIndex = idx;
        });
        const group = oi.groups[tmpIndex]; //
        if (group && this.hasModifier(group.items, this.itemMap, true)) {
            const builderItems = group.items;
            const selected = builderItems.every(item => {
                const builderMgroups = item.mgroups; // 选中的 mgroups, mgroups.items 只包含选中的item
                const mgroups = this.itemMap[item.id].mgroups; // 选中的 mgroups 对应的完整的mgroups信息, mgroups.items 包含所有的item
                let currentMgroupCompleted = true;
                if (mgroups) {
                    for (let i = 0; i < mgroups.length; i++) { // 完整mgroups信息下标跟选中的mgroups下标不一致
                        let builderMgroupIndex = -1;
                        builderMgroups && builderMgroups.map((el, idx) => {
                            if (mgroups[i].id === el.id)
                                builderMgroupIndex = idx;
                        });
                        if (builderMgroups && builderMgroups[builderMgroupIndex] && mgroups[i].min > 0) {
                            // 配置过,用配置的qua 与 完整mgroups数据的min比较
                            let quantity = 0;
                            for (const t of builderMgroups[builderMgroupIndex].items) {
                                quantity += 1 * t.quantity;
                            }
                            currentMgroupCompleted = (quantity >= mgroups[i].min);
                        }
                        else if ((!builderMgroups || !builderMgroups[builderMgroupIndex])) {
                            // 未配置过，看完整mgroups数据的min
                            currentMgroupCompleted = !(mgroups[i].min > 0);
                        }
                        if (!currentMgroupCompleted)
                            break; // 出现过false 就是有某一mgroups 没符合配置最低的数量要求
                    }
                }
                return currentMgroupCompleted;
            });
            return selected;
        }
        else {
            return true;
        }
    }
    /**
     * @description: 判断当前的 group 是否完成配置(items最低要求)
     * @param {OrderItemBuilder} oiBuilder
     * @param {ItemGroup} currentGroup
     * @return {boolean}
     */
    isCompletedGroupMinMax(oiBuilder, currentGroup) {
        return oiBuilder.isGroupCompleted(currentGroup);
    }
    /**
     * @description: 获取当前 itemGroup 选中了几个 GItem
     * @param {OrderItemBuilder} oiBuilder
     * @param {ItemGroup} currentGroup
     * @return {*}
     */
    getGItemCountCurrentGroup(oiBuilder, currentGroup) {
        return oiBuilder === null || oiBuilder === void 0 ? void 0 : oiBuilder.getItemGroupItemsQuantity(currentGroup);
    }
    /**  groupCompleted logic end **/
    getDeviceId() {
        let did = this.configService.getLocal('deviceId');
        if (!did) {
            did = (0,uuid__WEBPACK_IMPORTED_MODULE_7__["default"])();
            this.configService.setLocal('deviceId', did);
        }
        return did;
    }
    checkAddOrderItemInventory(oi) {
        const item = aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.getMainItem(oi);
        return this.orderManager.checkInventory(item, (this.orderManager.getQuantity(item) + 1));
    }
    // 调用 当前服务的this.dialogService.showAlert() 与在 checkoutPage 调用 this.dialogService.showAlert() 行为不一致
    setByodDialog(byodDialogService) {
        this.byodDialogService = byodDialogService;
    }
    canAddOrderItem(oi) {
        const item = aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.getMainItem(oi);
        return this.canAddItem(item);
    }
    canMinusOrderItem(oi) {
        const item = aigens_data__WEBPACK_IMPORTED_MODULE_3__.OrderItem.getMainItem(oi);
        return this.canMinusItem(item);
    }
    // 是否允许 add 某一个item
    canAddItem(item) {
        if (!this.settingManager.get('checkItemMax', false)) {
            return true;
        }
        // const currentQty = this.orderManager.getQuantity(item);
        return !this.orderManager.checkAddItemMax(item, 1);
    }
    canMinusItem(item) {
        var _a;
        if (!this.settingManager.get('checkItemMin', false)) {
            return true;
        }
        const currentQty = this.orderManager.getQuantity(item);
        return currentQty > ((_a = item === null || item === void 0 ? void 0 : item.min) !== null && _a !== void 0 ? _a : 0);
    }
    isGroupCombo() {
        return this.settingManager.get('groupCombo', false);
    }
    isHidePrice() {
        return this.settingManager.get('menu.hidePrice', false);
    }
    isHideTotal() {
        return this.settingManager.get('menu.hideTotal', false);
    }
}
BaseCartService.ɵfac = function BaseCartService_Factory(t) { return new (t || BaseCartService)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_8__.Injector)); };
BaseCartService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"]({ token: BaseCartService, factory: BaseCartService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 12919:
/*!***********************************************************!*\
  !*** ./projects/byod/src/app/common/base-menu.service.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BaseMenuService": () => (/* binding */ BaseMenuService)
/* harmony export */ });
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var lodash_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash-es */ 38163);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);





class BaseMenuService {
    constructor(injector) {
        this.userTypes = [];
        this.markers = [];
        this.menuManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MenuManager);
        this.context = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_1__.Context);
        this.orderManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderManager);
        this.inventoryManager = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_1__.InventoryManager);
        this.orderContext = injector.get(aigens_framework__WEBPACK_IMPORTED_MODULE_1__.OrderContext);
    }
    /**
     * @description:
     * @param {*} timeZone
     * @param {number} time_num
     * @return {*}
     */
    convertNowDateToStoreTimeZone(timeZone, time_num) {
        timeZone = timeZone ? timeZone : 'GMT+8';
        let timeZoneValue = timeZone.split('GMT')[1];
        let integerTimeZoneValue = parseInt(timeZoneValue) * 60;
        let now = this.menuManager.debugTime ? new Date(this.menuManager.debugTime) : new Date();
        if (time_num) {
            now = new Date(time_num);
        }
        let timeZoneOffset = now.getTimezoneOffset();
        let newTime = now.getTime() + (timeZoneOffset + integerTimeZoneValue) * 60000;
        now.setTime(newTime);
        return now;
    }
    processCats(store, mode, refTime = null) {
        var _a, _b, _c, _d;
        let availableCats = [];
        const time_num = (_a = refTime !== null && refTime !== void 0 ? refTime : this.menuManager.debugTime) !== null && _a !== void 0 ? _a : this.getUserSelectTime_number();
        let now = time_num;
        if ((_c = (_b = this.directoryContext) === null || _b === void 0 ? void 0 : _b.state) === null || _c === void 0 ? void 0 : _c.asap) {
            now = this.convertNowDateToStoreTimeZone(store.timezone, time_num ? time_num : null).getTime();
        }
        console.warn('processCats by time', now, new Date(now));
        this.initUsersTypes(); // init usersTypes first
        console.log('usersTypes', this.userTypes);
        // 坑：执行 getAvailableCategories后会改变 第一个参数store里的数据
        // let tempStore = Data.toData(Store, JSON.parse(JSON.stringify(store)));
        let tempStore = lodash_es__WEBPACK_IMPORTED_MODULE_2__["default"](store);
        availableCats = this.menuManager.getAvailableCategories(tempStore, now, mode === 'takeaway', mode);
        if (!availableCats) {
            return [];
        }
        // console.log('Available cats', availableCats);
        if (((_d = this.userTypes) === null || _d === void 0 ? void 0 : _d.length) > 0) {
            let canShowCats = this.categoriesFliterByUserTypes(availableCats, this.userTypes);
            return canShowCats;
        }
        else {
            return availableCats;
        }
        // console.log('canShowCats filter by usersType', canShowCats);
        // this.activeCats$.next(canShowCats);
        // return canShowCats;
    }
    setMarkers(markers) {
        if ((markers === null || markers === void 0 ? void 0 : markers.length) > 0) {
            this.markers = markers;
        }
    }
    initUsersTypes() {
        var _a, _b, _c, _d, _e;
        try {
            this.userTypes = [];
            if (((_a = this.context) === null || _a === void 0 ? void 0 : _a.member) && ((_b = this.context.member) === null || _b === void 0 ? void 0 : _b.method) !== 'device') { // 游客登陆不算会员
                !((_c = this.userTypes) === null || _c === void 0 ? void 0 : _c.includes('member')) && this.userTypes.push('member');
            }
            if (((_d = this.markers) === null || _d === void 0 ? void 0 : _d.length) > 0) {
                for (let marker of this.markers) {
                    !((_e = this.userTypes) === null || _e === void 0 ? void 0 : _e.includes(marker)) && this.userTypes.push(marker);
                }
            }
            this.menuManager.userTypes = this.userTypes;
        }
        catch (error) {
        }
    }
    isAllowed(cat, allowed, have) {
        if (!allowed || allowed.length == 0)
            return true;
        for (let type of allowed) {
            if (have.indexOf(type) >= 0) {
                console.log("cat allowed", cat.name, allowed, have);
                return true;
            }
        }
        console.log("cat not allowed", cat.name, allowed, have);
        return false;
    }
    categoriesFliterByUserTypes(cats, types = []) {
        var result = [];
        for (let cat of cats) {
            if (this.isAllowed(cat, cat.users, types)) {
                result.push(cat);
            }
        }
        return result;
    }
    /********** copy from v3 start **********/
    getDefaultImage(isCategory, brand, height) {
        if (!brand) {
            return null;
        }
        const theme = brand['themes']['byod'];
        if (theme) {
            if (isCategory && theme['category-fb'] && theme['category-fb'].length > 0) {
                const catImage = theme['category-fb'][0];
                return this.getImageUrl(catImage, height);
            }
            if (!isCategory && theme['item-fb'] && theme['item-fb'].length > 0) {
                const itemImage = theme['item-fb'][0];
                return this.getImageUrl(itemImage, height);
            }
        }
        return null;
    }
    getImageUrl(image, width) {
        const url = image.url;
        if (!url) {
            return null;
        }
        return aigens_data__WEBPACK_IMPORTED_MODULE_0__.Data.getImageUrl(image.url, width, false);
    }
}
BaseMenuService.ɵfac = function BaseMenuService_Factory(t) { return new (t || BaseMenuService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector)); };
BaseMenuService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: BaseMenuService, factory: BaseMenuService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 50697:
/*!***********************************************************************!*\
  !*** ./projects/core/src/app/framework/helpers/localeStringLookup.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "localeStringLookup": () => (/* binding */ localeStringLookup)
/* harmony export */ });
function localeStringLookup(content, lang, field) {
    let result = null;
    //var lang = window['aigens']?.context?.userLang;
    //console.log("i18n pipe", content, field,  lang);
    if (lang) {
        result = content[field + '_' + lang];
    }
    if (!result) {
        result = content[field];
    }
    return result;
}


/***/ }),

/***/ 67080:
/*!*******************************************************************!*\
  !*** ./projects/core/src/app/framework/services/share.service.ts ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ShareService": () => (/* binding */ ShareService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


class ShareService {
    constructor(injector) {
    }
    isAvailable() {
        return navigator === null || navigator === void 0 ? void 0 : navigator.canShare;
    }
    share(options) {
        return navigator.share(options);
    }
}
ShareService.ɵfac = function ShareService_Factory(t) { return new (t || ShareService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector)); };
ShareService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: ShareService, factory: ShareService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 50177:
/*!************************************************************!*\
  !*** ./projects/core/src/app/pure/services/pwa.service.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PwaService": () => (/* binding */ PwaService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _platform_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./platform.service */ 45485);



class PwaService {
    constructor(injector, platformService) {
        this.platformService = platformService;
        this.supported = false;
    }
    haveServiceWorker() {
        if (navigator.serviceWorker) {
            return true;
        }
        return false;
    }
    setWebManifest() {
        var _a;
        if (this.manifest || !this.haveServiceWorker())
            return;
        //Aliapp never use service worker
        if (this.platformService.isAliApp()) {
            return;
        }
        var manifest = (_a = window['aigens']) === null || _a === void 0 ? void 0 : _a.manifest;
        if (!manifest || !manifest.scope)
            return;
        //copy it
        manifest = Object.assign({}, manifest);
        //console.log("setting manifest", manifest);
        var loc = window.location;
        var host = loc.protocol + "//" + loc.host;
        manifest.scope = host + manifest.scope;
        manifest.start_url = host + manifest.start_url;
        console.log("setting patched manifest", manifest);
        const stringManifest = JSON.stringify(manifest);
        const blob = new Blob([stringManifest], { type: 'application/json' });
        const manifestURL = URL.createObjectURL(blob);
        var link = document.getElementById('dy-manifest');
        if (!link)
            return;
        console.log("manifest url", manifestURL);
        link.setAttribute('href', manifestURL);
        this.manifest = manifest;
        this.listen();
    }
    listen() {
        console.log("listening add to home");
        window.addEventListener('beforeinstallprompt', (e) => {
            this.supported = true;
            console.log("beforeinstallprompt", e);
            // Prevent Chrome 67 and earlier from automatically showing the prompt
            e.preventDefault();
            // Stash the event so it can be triggered later.
            this.deferredPrompt = e;
            // Update UI to notify the user they can add to home screen
            //addBtn.style.display = 'block';
        });
    }
    promptHome() {
        // hide our user interface that shows our A2HS button
        //addBtn.style.display = 'none';
        // Show the prompt
        this.deferredPrompt.prompt();
        // Wait for the user to respond to the prompt
        this.deferredPrompt.userChoice.then((choiceResult) => {
            if (choiceResult.outcome === 'accepted') {
                console.log('User accepted the A2HS prompt');
            }
            else {
                console.log('User dismissed the A2HS prompt');
            }
            this.deferredPrompt = null;
        });
    }
}
PwaService.ɵfac = function PwaService_Factory(t) { return new (t || PwaService)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵinject"](_platform_service__WEBPACK_IMPORTED_MODULE_0__.PlatformService)); };
PwaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: PwaService, factory: PwaService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 40181:
/*!********************************************************************!*\
  !*** ./projects/core/src/app/pure/services/route-guard.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RouteGuardService": () => (/* binding */ RouteGuardService)
/* harmony export */ });
/* harmony import */ var _common_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.service */ 43872);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _routing_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./routing.service */ 28759);





class RouteGuardService {
    constructor(router, routingService) {
        this.router = router;
        this.routingService = routingService;
        this.firstEntry = true;
        console.log("RouteGuardService constructor");
    }
    canActivate(route, state) {
        var data = route.data || {};
        console.log("route guard", state.url, data);
        if (data.auth) {
            var signed = _common_service__WEBPACK_IMPORTED_MODULE_0__.CommonService.getLocal("session");
            if (!signed) {
                //this.router.navigate(['login'],  { queryParams: { returnUrl: state.url });
                console.log("NEED LOGIN");
                return false;
            }
        }
        //if this is first entry, but route does not allow as entry, we need to go back to last checkpoint
        if (this.firstEntry && !data.entry) {
            this.goLastCheckpoint(state.url);
            return false;
        }
        if (this.firstEntry && this.isAux(state.url)) {
            var path = this.getPrimaryPath(state.url);
            console.log("redirect to non AUX path", path);
            this.router.navigateByUrl(path);
            return false;
        }
        //save the checkpoint if can activate and route is a checkpoint
        if (data.checkpoint) {
            this.saveCheckpoint(state.url);
        }
        if (data.home && this.firstEntry) {
            this.saveHome(state.url);
        }
        this.firstEntry = false;
        console.log("route allowed");
        return true;
    }
    isAux(url) {
        if (url.indexOf('(') > 0 && url.indexOf(')') > 0) {
            console.log("is aux", url);
            return true;
        }
        return false;
    }
    getPrimaryPath(url) {
        return url.replace(/ *\([^)]*\) */g, "");
    }
    goLastCheckpoint(url) {
        var path = this.getCheckPoint();
        if (path) {
            console.log("going back to checkpoint", path);
            //this.router.navigate([path]);
            this.router.navigateByUrl(path);
        }
        else {
            console.log('No checkpoint, go home instead');
            this.routingService.goHome(url);
        }
    }
    getCheckPoint() {
        var path = localStorage.getItem("lastCheckpoint");
        return path;
    }
    getHome() {
        var path = localStorage.getItem("lastHome");
        return path;
    }
    saveCheckpoint(path) {
        path = decodeURIComponent(path);
        //remove AUX route
        path = this.getPrimaryPath(path);
        console.log("saved checkpoint", path);
        localStorage.setItem("lastCheckpoint", path);
    }
    saveHome(path) {
        path = decodeURIComponent(path);
        //remove AUX route
        path = this.getPrimaryPath(path);
        console.log("saved home", path);
        localStorage.setItem("lastHome", path);
    }
    canDeactivate(component, route, state) {
        if (component.canDeactivate) {
            return component.canDeactivate();
        }
        else {
            return true;
        }
    }
}
RouteGuardService.ɵfac = function RouteGuardService_Factory(t) { return new (t || RouteGuardService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_router__WEBPACK_IMPORTED_MODULE_3__.Router), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_routing_service__WEBPACK_IMPORTED_MODULE_1__.RoutingService)); };
RouteGuardService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: RouteGuardService, factory: RouteGuardService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 11455:
/*!********************************************************************!*\
  !*** ./projects/core/src/app/pure/services/theme-token.service.ts ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ThemeTokenService": () => (/* binding */ ThemeTokenService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);


class ThemeTokenService {
    constructor(injector) {
        this.rawStyles = {};
    }
    setTokens(tokens) {
        this.tokens = tokens;
        var cssmap = this.tokens2CssMap(tokens);
        this.setCssVars(cssmap);
    }
    tokens2CssMap(tokens) {
        var cssmap = {};
        for (let token of tokens) {
            var key = token.name;
            var value = token.value;
            cssmap[key] = value;
        }
        return cssmap;
    }
    setCssVars(cssmap) {
        let root = document.documentElement;
        for (var key in cssmap) {
            var cssName = "--" + key;
            var value = cssmap[key];
            root.style.setProperty(cssName, value + "");
        }
    }
    addCss(clsName, cssStr) {
        var style = this.rawStyles[clsName];
        if (!style) {
            style = document.createElement('style');
            document.head.append(style);
            console.log("style ref", style);
        }
        //const style = document.createElement('style');
        style.textContent = cssStr;
    }
    listenTestCss() {
        console.log("listening test css!");
        window.addEventListener('message', e => {
            var data = e.data;
            console.log("child listen event", e, data);
            if (!data)
                return;
            if (data.cssmap) {
                this.setCssVars(data.cssmap);
            }
        }, false);
    }
}
ThemeTokenService.ɵfac = function ThemeTokenService_Factory(t) { return new (t || ThemeTokenService)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.Injector)); };
ThemeTokenService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: ThemeTokenService, factory: ThemeTokenService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 76667:
/*!*********************************************************************************!*\
  !*** ./projects/crm/src/app/crm/standard/framework/services/routing.service.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RoutingService": () => (/* binding */ RoutingService)
/* harmony export */ });
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/routing.service */ 28759);






class RoutingService {
    constructor(injector, configService, routingService) {
        this.configService = configService;
        this.routingService = routingService;
        this.history = [];
        this.baseUrl = 'crm';
        this.currentRouteState = {};
        console.log('new routing service');
        this.router = injector.get(_angular_router__WEBPACK_IMPORTED_MODULE_2__.Router);
        this.context = injector.get(_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.MemberContext);
        this.router.events.subscribe((event) => {
            // console.log(event);
            if (event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__.RoutesRecognized) {
                // console.log(event);
                const url = event.urlAfterRedirects;
                // console.log("go", url);
                this.pendingHistoryUrl = url;
            }
            if (event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_2__.ActivationEnd) {
                if (this.pendingHistoryUrl) {
                    //console.log('ActivationEnd', event);
                    const url = this.pendingHistoryUrl;
                    this.pendingHistoryUrl = null;
                    // fully inherited data
                    const fullData = event.snapshot.data || {};
                    // child data
                    const selfData = event.snapshot.routeConfig.data;
                    const data = selfData || fullData;
                    const entry = {
                        url,
                        data
                    };
                    this.currentRouteState = data;
                    // console.log("save history", entry);
                    console.log('save history', url);
                    const locUrl = window.location.href;
                    console.log('window', locUrl);
                    if (data.root) {
                        this.history = [entry];
                    }
                    else {
                        this.history.push(entry);
                    }
                    console.log('stack', this.history);
                }
            }
        });
    }
    setBaseUrl(url) {
        this.baseUrl = url;
    }
    back() {
        //this.routerLoc.back();
        this.routingService.back();
    }
    isRoot() {
        return this.history.length <= 1;
    }
    canBack() {
        return this.history.length >= 1;
    }
    hasMenu() {
        var _a;
        if (!this.isRoot()) {
            return false;
        }
        const entry = this.history[this.history.length - 1];
        const show = ((_a = entry === null || entry === void 0 ? void 0 : entry.data) === null || _a === void 0 ? void 0 : _a.menu) === true;
        return show;
    }
    goMembership(params = {}) {
        console.log('clicked goMembership');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/membership`;
            this.routingService.navigateModal(path, {}, { queryParams: params });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/membership`;
            this.routingService.navigateModal(path, {}, { queryParams: params });
        }
    }
    goEwallet(params = {}, queryParams = {}) {
        console.log('clicked goEwallet');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/ewallet/details`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/ewallet/details`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
    }
    goEwalletTopUpPage(params = {}, queryParams = {}) {
        console.log('clicked goEwalletTopUpPage');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/ewallet/top-up`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/ewallet/top-up`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
    }
    goEwalletCheckoutPage(params = {}, queryParams = {}) {
        console.log('clicked goEwalletTopUpPage');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/ewallet/top-up-checkout`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/ewallet/top-up-checkout`;
            this.routingService.navigateModal(path, params, { queryParams });
        }
    }
    goEwalletTopUpStatusPage(params = {}, queryParams = {}) {
        console.log('clicked goEwalletTopUpStatusPage');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/ewallet/top-up-status`;
            this.routingService.navigateModal(path, params, { queryParams, replaceUrl: true });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/ewallet/top-up-status`;
            this.routingService.navigateModal(path, params, { queryParams, replaceUrl: true });
        }
    }
    goEditProfile() {
        console.log('clicked goEditProfile');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/membership/edit`;
            this.routingService.navigateModal(path, {}, { queryParams: { back: true } });
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/membership/edit`;
            this.routingService.navigateModal(path, {}, { queryParams: { back: true } });
        }
    }
    goReset() {
        const path = `auth/login/brand/${this.context.brandId}/reset`;
        this.routingService.navigateModal(path);
    }
    goDeleteProfile() {
        console.log('clicked goEditProfile');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/membership/delete`;
            this.routingService.navigateModal(path, {}, {});
        }
        else if (this.context.groupId && this.context.brandId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/membership/delete`;
            this.routingService.navigateModal(path, {}, {});
        }
    }
    goHome() {
        console.log('clicked goHome');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/home`;
        this.routingService.navigate(path, { replaceUrl: true });
    }
    goFillProfile() {
        console.log('clicked goFillProfile');
        const brandId = this.context.brandId;
        const path = `auth/login/brand/${brandId}/fill`;
        this.routingService.navigateModal(path, { replaceUrl: true });
    }
    goRegister(email = null, countryCode = null, phone = null, showReferralCode = false, facebookId, googleId, appleId, autoFillGender = false, verifiedData = null, params = {}) {
        let path;
        if (this.context.brandId && this.context.groupId) {
            const brandId = this.context.brandId;
            path = `${this.baseUrl}/brand/${brandId}/login/register`;
        }
        else if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            path = `${this.baseUrl}/group/${groupId}/login/register`;
        }
        const state = {
            email,
            countryCode,
            phone,
            showReferralCode,
            facebookId,
            googleId,
            appleId,
            autoFillGender
        };
        // if verify member data is defined
        if (verifiedData === null || verifiedData === void 0 ? void 0 : verifiedData.member) {
            state.verifiedData = verifiedData;
        }
        console.log('state register ', state);
        this.routingService.navigateModal(path, Object.assign({}, params), { state });
    }
    goOrder() {
        console.log('clicked goOrder');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/ordering`;
        this.router.navigate([path], {});
    }
    extractProtocal(url) {
        if (url.indexOf('//') > -1) {
            return url.split(':')[0];
        }
        else {
            return null;
        }
    }
    extractDomain(url) {
        let hostname;
        if (url.indexOf('//') > -1) {
            hostname = url.split('/')[2];
        }
        else {
            hostname = url.split('/')[0];
        }
        if (hostname.indexOf('?') > -1) {
            hostname = hostname.split('?')[0];
        }
        const temp = hostname.split('.');
        const arrlen = temp.length;
        if (arrlen >= 2) {
            return temp[arrlen - 2] + '.' + temp[arrlen - 1];
        }
        else {
            return null;
        }
    }
    isValidQR(url) {
        url = url.toLowerCase();
        const protocal = this.extractProtocal(url);
        const domain = this.extractDomain(url);
        if (protocal !== 'https') {
            return false;
        }
        else {
            if (domain === 'aigens.cn') {
                return true;
            }
            if (domain === 'aigens.com') {
                return true;
            }
            if (domain === 'order.place') {
                return true;
            }
        }
        return false;
    }
    goOrderDinein() {
        console.log('clicked goOrderDinein', this.context);
        this.context.app.externalService.scanQR(data => {
            if (!data) {
                const brandId = this.context.brandId;
                const path = `${this.baseUrl}/brand/${brandId}/ordering/dinein`;
                this.router.navigate([path], {
                    state: {
                        showContent: true
                    }
                });
                return;
            }
            if (data.cancelled)
                return;
            var url = data.data || data.text;
            if (!url)
                return;
            if (this.isValidQR(url)) {
                var sessionId = this.configService.getSessionId();
                if (sessionId && this.context.membership.status === 'active') {
                    url += '&session=' + sessionId;
                }
                this.context.app.externalService.openExternalBrowser(url);
                this.goHome();
                return;
            }
            else {
                const brandId = this.context.brandId;
                const path = `${this.baseUrl}/brand/${brandId}/ordering/dinein`;
                this.router.navigate([path], {
                    state: {
                        invalidQr: true
                    }
                });
                return;
            }
        });
    }
    goReward(params = {}) {
        console.log('clicked goReward');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/reward`;
        this.routingService.navigateModal(path, {}, {
            queryParams: params,
            state: {
                width: "800px",
                height: "700px"
            }
        });
    }
    goOrderNow() {
        const brandId = this.context.brandId;
        const path = `directory/brand/${brandId}`;
        this.routingService.navigateModal(path, {}, {});
    }
    goDirectory(selectedMode = 'all') {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `directory/brand/${brandId}`;
        this.routingService.navigateModal(path, {}, {});
        // this.router.navigate([path], {
        //     state: {
        //         selectedMode
        //     }
        // });
    }
    goStoreList() {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/stores`;
        this.router.navigate([path], {});
    }
    goSettings() {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/settings`;
        this.router.navigate([path], {});
    }
    // params: {title: string, link: string}
    goWebview(params = {}) {
        console.log('clicked');
        if (!params)
            params = {};
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/webview`;
        this.router.navigate([path], {
            state: {
                params
            }
        });
    }
    goSettingsInfo(page) {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/settings/info/${page}`;
        this.router.navigate([path], {});
    }
    goContactUs() {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/settings/contact-us`;
        this.router.navigate([path], {});
    }
    goInbox(values) {
        if (!values)
            values = {};
        console.log('clicked goInbox');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/inbox`;
        this.router.navigate([path], {
            state: {
                width: "900px",
                height: "650px"
            }
        });
    }
    goInboxItem(msgId, type) {
        console.log('clicked goInboxItem');
        if (type === 'order') {
            this.goByodHistoryPage();
            return;
        }
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/inbox/${type}/${msgId}`;
        this.router.navigate([path], {});
    }
    goCrmWelcome() {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/home`;
        //const path = `${this.baseUrl}/brand/${brandId}/welcome`;
        this.routingService.navigate(path);
    }
    goLogin(allowGuest = false) {
        console.log('clicked goLogin');
        const brandId = this.context.brandId;
        const path = `auth/login/brand/${brandId}`;
        this.routingService.navigateModal(path);
        // this.router.navigate([path], {
        //     state: {
        //         allowSkip: allowGuest
        //     }
        // });
    }
    /**
     * @deprecated
     * @param type
     * @param input
     * @param isNewMembership
     * @param countryCode
     */
    goPhoneEmailLogin(type, input, isNewMembership, countryCode) {
        console.log('clicked goLogin');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/phone-email-login`;
        this.router.navigate([path], {
            state: {
                type,
                input,
                countryCode,
                isNewMembership
            }
        });
    }
    goNews(params = {}) {
        console.log('clicked goNews');
        if (this.context.groupId && !this.context.brandId) {
            const groupId = this.context.groupId;
            const path = `${this.baseUrl}/group/${groupId}/news`;
            this.routingService.navigateModal(path, {}, { queryParams: params });
        }
        else if (this.context.brandId && this.context.groupId) {
            const brandId = this.context.brandId;
            const path = `${this.baseUrl}/brand/${brandId}/news`;
            this.routingService.navigateModal(path, {}, { queryParams: params });
        }
    }
    goNewsWithPopup(news) {
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/news`;
        this.router.navigate([path], {
            state: {
                news
            }
        });
    }
    goStampPage(params = {}) {
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/stamp`;
        this.routingService.navigateModal(path, {}, {
            queryParams: params
        });
    }
    goPaymentResult(type) {
        const brandId = this.context.brandId;
        var path = "";
        if (type == 'success') {
            path = `${this.baseUrl}/brand/${brandId}/payment/status/success`;
        }
        else if (type == 'faild') {
            path = `${this.baseUrl}/brand/${brandId}/payment/status/failed`;
        }
        if (!path)
            return;
        this.navigate(path);
    }
    goByodOrderingPage() {
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/ordering/byod`;
        this.router.navigate([path], {});
    }
    goByodHistoryPage(params) {
        var _a, _b;
        const brandId = this.context.brandId;
        let path = `/brand/${brandId}/byod-summary`;
        var sessionId = this.configService.getSessionId();
        let queryParams = {
            locale: this.context.userLang,
            sessionToken: this.context.isSignedIn() ? sessionId : null,
            fromCrm: true,
            isIsolate: true
        };
        if (this.context.app.externalService && ((_a = this.context.app.externalService) === null || _a === void 0 ? void 0 : _a.isNative) && ((_b = this.context.app.externalService) === null || _b === void 0 ? void 0 : _b.isNative())) {
            path = `${this.baseUrl}/brand/${brandId}/ordering/history`;
            queryParams = {};
        }
        if (!params)
            params = {};
        this.router.navigate([path], {
            state: params,
            queryParams
        });
    }
    goPurchaseMembership() {
        console.log('clicked');
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/membership/purchase`;
        this.routingService.navigateModal(path, {}, {});
    }
    navigateAppLink(url) {
        const brandId = this.context.brandId;
        const path = `${this.baseUrl}/brand/${brandId}/${url}`;
        this.router.navigate([path], {});
    }
    navigate(path, extras) {
        //this.router.navigate([path], extras);
        this.routingService.navigate(path, extras);
    }
}
RoutingService.ɵfac = function RoutingService_Factory(t) { return new (t || RoutingService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.ConfigService), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aigens_core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_1__.RoutingService)); };
RoutingService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: RoutingService, factory: RoutingService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 7567:
/*!********************************************************************************************!*\
  !*** ./projects/directory/src/app/directory/services/directory-context-manager.service.ts ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DirectoryContextManager": () => (/* binding */ DirectoryContextManager)
/* harmony export */ });
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 10745);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 90833);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/src/app/framework/services/directory-context.service */ 19757);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _aigens_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/order-context-manager.service */ 4911);








class DirectoryContextManager {
    constructor(directoryContext, dataService, configService, location, locationService, dialogService, orderContextManager) {
        this.directoryContext = directoryContext;
        this.dataService = dataService;
        this.configService = configService;
        this.location = location;
        this.locationService = locationService;
        this.dialogService = dialogService;
        this.orderContextManager = orderContextManager;
    }
    searchStores(brandId, mode, channel = null, location = null, offset, keyword, postal, country, lang = null) {
        const url = '/api/v1/store/store.json';
        lang = lang || this.configService.getLocale();
        const params = { q: null, postal, country, brandId, locale: lang, limit: 10, offset };
        const tempKeyword = keyword ? keyword + ' ' : '';
        if (mode === 'queue') {
            params.q = tempKeyword + 'feature:queuing';
        }
        else {
            params.q = tempKeyword + 'modes:' + mode;
        }
        if (channel) {
            params.q = params.q + ' channels:' + channel;
        }
        if (location) {
            location['radius'] = 1000000;
            Object.assign(params, location);
        }
        return this.dataService.get(url, params, true).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.map)(ja => aigens_data__WEBPACK_IMPORTED_MODULE_0__.Data.toDataArray(aigens_data__WEBPACK_IMPORTED_MODULE_0__.Store, ja)));
    }
    searchCateringStore(brandId, location = null, offset, keyword, postal, country) {
        const url = '/api/v1/shop/slots.json';
        const params = { brandId, type: 'location', mode: 'catering', postal, country, limit: 10, offset, q: keyword };
        if (location) {
            location['radius'] = 1000000;
            Object.assign(params, location);
        }
        return this.dataService.get(url, params, true);
    }
    getPosition() {
        if (this.directoryContext.position) {
            console.log('getPosition() cached');
            return (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(this.directoryContext.position);
        }
        const obs = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Observable((observer) => {
            this.locationService.getGps((loc) => {
                if (loc) {
                    this.directoryContext.setPosition(loc);
                }
                observer.next(loc);
                observer.complete();
            });
        });
        return obs;
    }
    setSelectedMode(mode) {
        this.directoryContext.tempState.mode = mode;
    }
    setSelectedStoreId(store) {
        this.directoryContext.tempState.storeId = store === null || store === void 0 ? void 0 : store.id;
    }
    setSelectedStore(store) {
        let tempStore = {};
        let conditions = ['name', 'hint'];
        const keys = Object.keys(store);
        // keys.filter(f => f.includes('name') || f.includes('hint'))
        keys.filter((f) => conditions.some((el) => f.includes(el)))
            .map((o) => o)
            .forEach((o) => {
            tempStore[o] = store[o];
        });
        this.directoryContext.tempState.store = tempStore; // if state undefined
        if (this.directoryContext.state) {
            this.directoryContext.state.store = tempStore;
        }
    }
    setSelectedDeliveryAddress(address) {
        this.directoryContext.tempState.deliveryAddress = address;
    }
    setExpectedDeliveryTime(time) {
        this.directoryContext.tempState.expectedDeliveryTime = time;
        this.directoryContext.next("expectedDeliveryTime", time);
    }
    setSchedule(asap, scheduleDate, scheduleTime) {
        this.directoryContext.tempState.asap = asap;
        this.directoryContext.tempState.scheduleDate = scheduleDate;
        this.directoryContext.tempState.scheduleTime = scheduleTime;
        try {
            this.directoryContext.tempState.humanScheduleTime =
                scheduleDate.format(this.directoryContext.TIME_FORMAT) + ' ' + scheduleTime.startTime;
        }
        catch (_a) {
            this.directoryContext.tempState.humanScheduleTime = '';
        }
    }
    addNav(viewMode) {
        this.directoryContext.nav.push(viewMode);
    }
    goBackNav() {
        if (this.directoryContext.getLastNav() === this.directoryContext.VIEW_MODE_SELECT_STORE) {
            this.setSelectedStoreId(null);
        }
        else {
            this.dialogService.submitAuxDialog({});
        }
        if (this.directoryContext.nav.length > 0) {
            this.directoryContext.nav.splice(this.directoryContext.nav.length - 1, 1);
        }
    }
    setFinalState(selectFromDirFlag = true) {
        this.directoryContext.state = JSON.parse(JSON.stringify(this.directoryContext.tempState));
        // this will flag that user has already set it from directory
        if (selectFromDirFlag) {
            this.orderContextManager.setAllConfirmed();
        }
        if (this.directoryContext.state.mode !== this.directoryContext.DELIVERY) {
            this.directoryContext.state.deliveryAddress = null;
        }
        this.directoryContext.save();
        console.log(this.directoryContext.state);
    }
    updateLastSid() {
        this.directoryContext.lastSid = this.configService.getSessionId();
    }
    saveSearchState(searchState) {
        this.directoryContext.searchState = searchState;
    }
    clearSearchState() {
        this.directoryContext.searchState = null;
    }
}
DirectoryContextManager.ɵfac = function DirectoryContextManager_Factory(t) { return new (t || DirectoryContextManager)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_core_src_app_framework_services_directory_context_service__WEBPACK_IMPORTED_MODULE_1__.DirectoryContext), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_2__.DataService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_2__.ConfigService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_8__.Location), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_2__.LocationService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](aigens_framework__WEBPACK_IMPORTED_MODULE_2__.DialogService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_aigens_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_3__.OrderContextManager)); };
DirectoryContextManager.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"]({ token: DirectoryContextManager, factory: DirectoryContextManager.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 46112:
/*!******************************************************************************!*\
  !*** ./projects/miniapp/src/app/miniapp/standard/services/bridge.service.ts ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BridgeService": () => (/* binding */ BridgeService)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);

class BridgeService {
    constructor() {
        this.my = BridgeService.getMy();
    }
    static getMy() {
        var my = window['my'];
        if (!my)
            return null;
        if (!window['aigensMiniappBridgeListening']) {
            window['aigensMiniappBridgeListening'] = true;
            this.listenMessage(my);
        }
        return my;
    }
    isAvailable() {
        var my = BridgeService.getMy();
        if (my && my.postMessage)
            return true;
        return false;
    }
    static listenMessage(my) {
        const oldCallback = my.onMessage;
        console.log("listeningMessage Bridge service", oldCallback);
        my.onMessage = (res) => {
            console.log("received mini message", res);
            // this.lastResponse = res;
            //this.cd.detectChanges();
            var cid = res.callbackId;
            if (cid) {
                /*
                var callback = this.callbacks[cid];
                delete this.callbacks[cid];
                if (callback) {
                    callback(res.response);
                }
                */
                this.doCallbackStatic(cid, res.response);
            }
            else if (res === null || res === void 0 ? void 0 : res.serialId) {
                console.log("ali bridge format callback");
                oldCallback && oldCallback(res);
            }
        };
    }
    doCallback(callbackId, response) {
        var _a, _b;
        let callback = (_a = window === null || window === void 0 ? void 0 : window['aigensMiniCallbacks']) === null || _a === void 0 ? void 0 : _a[callbackId];
        (_b = window === null || window === void 0 ? void 0 : window['aigensMiniCallbacks']) === null || _b === void 0 ? true : delete _b[callbackId];
        if (callback) {
            callback(response);
        }
    }
    static doCallbackStatic(callbackId, response) {
        var _a, _b;
        let callback = (_a = window === null || window === void 0 ? void 0 : window['aigensMiniCallbacks']) === null || _a === void 0 ? void 0 : _a[callbackId];
        (_b = window === null || window === void 0 ? void 0 : window['aigensMiniCallbacks']) === null || _b === void 0 ? true : delete _b[callbackId];
        if (callback) {
            callback(response);
        }
    }
    //invoke Alipay framework method
    invokeMethod(method, params, callback, timeout = 0) {
        var callbackId = method + "_" + BridgeService.getRandomString(7);
        var message = {
            callbackId: callbackId,
            api: "alipay",
            method: method,
            params: params,
            url: window.location.href,
            response: null
        };
        this.lastRequest = message;
        console.log("sending mini app request message", message);
        var my = BridgeService.getMy();
        if (!(my && my.postMessage)) {
            console.log("MY object not found");
            this.doCallback(callbackId, null);
            return;
        }
        try {
            if (!window['aigensMiniCallbacks']) {
                window['aigensMiniCallbacks'] = {};
            }
            window['aigensMiniCallbacks'][callbackId] = callback;
            if (timeout > 2000) {
                console.log("setting timeout", timeout);
                setTimeout(() => {
                    console.log("timeout now", timeout);
                    this.doCallback(callbackId, null);
                }, timeout);
            }
            if (my)
                my.postMessage(message);
        }
        catch (e) {
            alert("error:" + e);
        }
        //this.my2.postMessage(message);
        //this.my2.postMessage("HELLO");
    }
    static invokeMethodStatic(method, params, callback) {
        var callbackId = method + "_" + BridgeService.getRandomString(7);
        var message = {
            callbackId: callbackId,
            api: "alipay",
            method: method,
            params: params,
            url: window.location.href,
            response: null
        };
        // this.lastRequest = message;
        console.log("sending mini app request message", message);
        var my = BridgeService.getMy();
        if (!(my && my.postMessage)) {
            console.log("MY object not found");
            this.doCallbackStatic(callbackId, null);
            return;
        }
        try {
            if (!window['aigensMiniCallbacks']) {
                window['aigensMiniCallbacks'] = {};
            }
            window['aigensMiniCallbacks'][callbackId] = callback;
            // if (timeout > 2000) {
            //     console.log("setting timeout", timeout);
            //     setTimeout(() => {
            //         console.log("timeout now", timeout);
            //         this.doCallbackStatic(callbackId, null);
            //     }, timeout);
            // }
            if (my)
                my.postMessage(message);
        }
        catch (e) {
            alert("error:" + e);
        }
    }
    static getRandomString(length, charSet = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789") {
        let randomString = "";
        for (let i = 0; i < length; i++) {
            let randomPoz = Math.floor(Math.random() * charSet.length);
            randomString += charSet.substring(randomPoz, randomPoz + 1);
        }
        // this.randomString = randomString;
        return randomString;
    }
}
BridgeService.ɵfac = function BridgeService_Factory(t) { return new (t || BridgeService)(); };
BridgeService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({ token: BridgeService, factory: BridgeService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 70396:
/*!*****************************************************************************!*\
  !*** ./projects/native/src/app/native/services/native-container.service.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NativeContainerService": () => (/* binding */ NativeContainerService)
/* harmony export */ });
/* harmony import */ var _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/aigens-sdk-core */ 2386);
/* harmony import */ var _capacitor_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @capacitor/browser */ 18313);
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @capacitor/core */ 26549);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../core/src/app/pure/services/platform.service */ 45485);






class NativeContainerService {
    constructor(injector, platformService) {
        //super(injector);
        this.platformService = platformService;
        console.log("NativeContainerService constructor");
    }
    init() {
        // init the native method first, Please Keep.
        if (!_capacitor_core__WEBPACK_IMPORTED_MODULE_2__.Capacitor.isNativePlatform())
            return;
        try {
            const key = _capacitor_core__WEBPACK_IMPORTED_MODULE_2__.Capacitor.getPlatform() === 'ios' ? 'hsbcpaymepay://' : 'hk.com.hsbc.paymefromhsbc';
            _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Core.isInstalledApp({
                key
            }).then(r => {
                console.log("hsbcpaymepay install:", r.install);
            });
        }
        catch (error) {
            console.log("isInstalledApp error:", error);
        }
    }
    echo(msg) {
        return _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Core.echo(msg);
    }
    getMember() {
        return _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Core.getMember({});
    }
    getDeeplink() {
        return _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Core.getDeeplink({});
    }
    openBrowser(options) {
        var url = options.url;
        if (!url)
            return null;
        console.log("is native??", this.platformService.isNative());
        if (!this.platformService.isNative()) {
            console.log("open browswer", url);
            return _capacitor_browser__WEBPACK_IMPORTED_MODULE_1__.Browser.open({ url: url });
        }
        else {
            console.log("open with sdk", url);
            return _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_0__.Core.openBrowser(options);
        }
    }
}
NativeContainerService.ɵfac = function NativeContainerService_Factory(t) { return new (t || NativeContainerService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_core_src_app_pure_services_platform_service__WEBPACK_IMPORTED_MODULE_3__.PlatformService)); };
NativeContainerService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: NativeContainerService, factory: NativeContainerService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 30874:
/*!***************************************************************************!*\
  !*** ./projects/native/src/app/native/services/native-routing.service.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NativeRoutingService": () => (/* binding */ NativeRoutingService)
/* harmony export */ });
/* harmony import */ var _capacitor_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/browser */ 18313);
/* harmony import */ var _capacitor_splash_screen__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @capacitor/splash-screen */ 82239);
/* harmony import */ var _core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../core/src/app/pure/services/routing.service */ 28759);
/* harmony import */ var _capacitor_app__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @capacitor/app */ 93253);
/* harmony import */ var _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aigens/aigens-sdk-core */ 2386);
/* harmony import */ var _capacitor_device__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @capacitor/device */ 4744);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);








class NativeRoutingService extends _core_src_app_pure_services_routing_service__WEBPACK_IMPORTED_MODULE_2__.RoutingService {
    constructor(injector) {
        console.log("NativeRoutingService constructor");
        super(injector);
        // Return an unique identifier for the device.
        _capacitor_device__WEBPACK_IMPORTED_MODULE_5__.Device.getId().then(r => {
            const d = r;
            this.deviceId = (d === null || d === void 0 ? void 0 : d.identifier) || (d === null || d === void 0 ? void 0 : d.uuid);
        });
    }
    /*
    openBrowser(options:any){

        var url = options.url;
        if(!url) return;

        Browser.open({ url: url});

    }*/
    openBrowser(options) {
        var url = options.url;
        if (!url)
            return null;
        if (!this.platformService.isNative()) {
            console.log("open browswer", url);
            return _capacitor_browser__WEBPACK_IMPORTED_MODULE_0__.Browser.open({ url: url });
        }
        else {
            let member = (options === null || options === void 0 ? void 0 : options.member) || {};
            if (!member["deviceId"]) {
                member["deviceId"] = this.deviceId || "";
                options.member = member;
            }
            console.log("open with sdk", url);
            return _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_4__.Core.openBrowser(options);
        }
    }
    dismissPreLoader() {
        super.dismissPreLoader();
        _capacitor_splash_screen__WEBPACK_IMPORTED_MODULE_1__.SplashScreen.hide();
    }
    back() {
        super.back();
    }
    exit() {
        _capacitor_app__WEBPACK_IMPORTED_MODULE_3__.App.exitApp();
    }
    /**
     *
     * @param closedData : Object
     */
    finish(closedData) {
        _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_4__.Core.finish({ closedData });
    }
    /**
     *
     * @param closedData : Object
     */
    dismiss(closedData) {
        _aigens_aigens_sdk_core__WEBPACK_IMPORTED_MODULE_4__.Core.dismiss({ closedData });
    }
}
NativeRoutingService.ɵfac = function NativeRoutingService_Factory(t) { return new (t || NativeRoutingService)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injector)); };
NativeRoutingService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({ token: NativeRoutingService, factory: NativeRoutingService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 93822:
/*!*************************************************************************!*\
  !*** ./projects/native/src/app/native/services/native-share.service.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "NativeShareService": () => (/* binding */ NativeShareService)
/* harmony export */ });
/* harmony import */ var _capacitor_share__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/share */ 58921);
/* harmony import */ var _core_src_app_framework_services_share_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../core/src/app/framework/services/share.service */ 67080);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




class NativeShareService extends _core_src_app_framework_services_share_service__WEBPACK_IMPORTED_MODULE_1__.ShareService {
    constructor(injector) {
        console.log("NativeShareService constructor");
        super(injector);
    }
    isAvailable() {
        return true;
    }
    //not yet implemented web version
    share(options) {
        return _capacitor_share__WEBPACK_IMPORTED_MODULE_0__.Share.share(options);
    }
}
NativeShareService.ɵfac = function NativeShareService_Factory(t) { return new (t || NativeShareService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
NativeShareService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: NativeShareService, factory: NativeShareService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 69607:
/*!***********************************************************************************!*\
  !*** ./projects/test/src/app/test/dialogs/alert-dialog/alert-dialog.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlertDialogComponent": () => (/* binding */ AlertDialogComponent)
/* harmony export */ });
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/dialog */ 95758);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 87317);




class AlertDialogComponent {
    constructor(input) {
        this.input = input;
    }
    ngOnInit() {
        this.message = this.input.message || "";
        this.title = this.input.title || "";
        this.ok = this.input.ok || "Ok";
        console.log("m", this.input.message, this.input.title);
    }
    okClicked() {
    }
}
AlertDialogComponent.ɵfac = function AlertDialogComponent_Factory(t) { return new (t || AlertDialogComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MAT_DIALOG_DATA)); };
AlertDialogComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: AlertDialogComponent, selectors: [["app-alert-dialog"]], decls: 8, vars: 3, consts: [["matDialogTitle", ""], ["align", "end"], ["mat-button", "", "matDialogClose", "confirm", "color", "primary", 3, "click"]], template: function AlertDialogComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h2", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "mat-dialog-content")(3, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mat-dialog-actions", 1)(6, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function AlertDialogComponent_Template_button_click_6_listener() { return ctx.okClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.message);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.ok);
    } }, dependencies: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogClose, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogTitle, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogContent, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogActions, _angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatButton], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbGVydC1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 31775:
/*!***************************************************************************************!*\
  !*** ./projects/test/src/app/test/dialogs/confirm-dialog/confirm-dialog.component.ts ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ConfirmDialogComponent": () => (/* binding */ ConfirmDialogComponent)
/* harmony export */ });
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/dialog */ 95758);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 87317);




class ConfirmDialogComponent {
    constructor(input) {
        this.input = input;
    }
    ngOnInit() {
        this.message = this.input.message || "";
        this.title = this.input.title || "";
        this.cancel = this.input.cancel || "Cancel";
        this.ok = this.input.ok || "Ok";
        console.log("m", this.message, this.title, this.cancel, this.ok);
    }
    cancelClicked() {
        if (this.input.callback) {
            this.input.callback(null);
        }
    }
    okClicked() {
        if (this.input.callback) {
            this.input.callback("OK");
        }
    }
}
ConfirmDialogComponent.ɵfac = function ConfirmDialogComponent_Factory(t) { return new (t || ConfirmDialogComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MAT_DIALOG_DATA)); };
ConfirmDialogComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ConfirmDialogComponent, selectors: [["app-confirm-dialog"]], decls: 10, vars: 4, consts: [["matDialogTitle", ""], ["align", "end"], ["mat-button", "", "matDialogClose", "cancel", "color", "dark", 3, "click"], ["mat-button", "", "matDialogClose", "confirm", "color", "primary", 3, "click"]], template: function ConfirmDialogComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "h2", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](2, "mat-dialog-content")(3, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "mat-dialog-actions", 1)(6, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ConfirmDialogComponent_Template_button_click_6_listener() { return ctx.cancelClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](8, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function ConfirmDialogComponent_Template_button_click_8_listener() { return ctx.okClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.title);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.message);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.cancel);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](ctx.ok);
    } }, dependencies: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogClose, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogTitle, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogContent, _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__.MatDialogActions, _angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatButton], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjb25maXJtLWRpYWxvZy5jb21wb25lbnQuc2NzcyJ9 */"] });


/***/ }),

/***/ 79996:
/*!*****************************************************************************************!*\
  !*** ./projects/test/src/app/test/dialogs/progress-dialog/progress-dialog.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ProgressDialogComponent": () => (/* binding */ ProgressDialogComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/progress-spinner */ 74742);


class ProgressDialogComponent {
    constructor() { }
    ngOnInit() {
    }
}
ProgressDialogComponent.ɵfac = function ProgressDialogComponent_Factory(t) { return new (t || ProgressDialogComponent)(); };
ProgressDialogComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: ProgressDialogComponent, selectors: [["app-progress-dialog"]], decls: 1, vars: 0, consts: [["diameter", "30"]], template: function ProgressDialogComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "mat-spinner", 0);
    } }, dependencies: [_angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_1__.MatProgressSpinner], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9ncmVzcy1kaWFsb2cuY29tcG9uZW50LnNjc3MifQ== */"] });


/***/ }),

/***/ 44097:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/abtest-page/abtest-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AbtestPageComponent": () => (/* binding */ AbtestPageComponent)
/* harmony export */ });
/* harmony import */ var _core_src_app_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/src/app/data */ 51707);
/* harmony import */ var _core_src_app_framework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/layouts/container-layout/container-layout.component */ 37073);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/button */ 87317);







function AbtestPageComponent_button_20_Template(rf, ctx) { if (rf & 1) {
    const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "button", 11);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AbtestPageComponent_button_20_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵrestoreView"](_r2); const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵresetView"](ctx_r1.startTest()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1, "START AB TEST");
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} }
const _c0 = function (a0) { return { "background-color": a0 }; };
class AbtestPageComponent extends _core_src_app_framework__WEBPACK_IMPORTED_MODULE_1__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.variant = 0;
        this.colors = ["pink", "purple", "green"];
        //this.loadScript();
        this.startTest();
        this.version = this.platformService.getVersion();
    }
    ngOnInit() {
    }
    trackClicked() {
        this.analyticsService.trackSelectMode("takeaway");
    }
    startTest() {
        this.listenAB();
        this.analyticsService.trackStartAB();
        this.trackClicked();
    }
    /*
    loadScript() {

        //<script src="https://www.googleoptimize.com/optimize.js?id=OPT-NW964XZ"></script>

        var url = "https://www.googleoptimize.com/optimize.js?id=OPT-NW964XZ";
        this.configService.loadScript(url);

        console.log("loaded script");
    }*/
    listenAB() {
        var gtag = window['gtag'];
        gtag('event', 'optimize.callback', {
            callback: (v, n, c) => {
                this.startExperiment(v, n, c);
            }
        });
    }
    startExperiment(value, name, container) {
        console.log("Experiment Values", value, name, container);
        this.variant = value;
        this.expName = name;
        if (value == '0') {
            // Provide code for visitors in the original.
        }
        else if (value == '1') {
            // Provide code for visitors in first variant.
        }
        else if (value == '2') {
            // Provide code for visitors in section variant.
        }
    }
    purchaseClicked() {
        var order = new _core_src_app_data__WEBPACK_IMPORTED_MODULE_0__.Order();
        order.total = 10;
        order.grandTotal = 10;
        order.discount = 0;
        order.business = "2022-03-14";
        this.analyticsService.trackPurchase(order);
    }
}
AbtestPageComponent.ɵfac = function AbtestPageComponent_Factory(t) { return new (t || AbtestPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector)); };
AbtestPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: AbtestPageComponent, selectors: [["app-abtest-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 30, vars: 7, consts: [["nav", "", 1, "bg-blue-400", "h-16", "flex"], ["over", "", 1, "bg-red-600", "h-full"], ["notice", "", 1, "bg-green-900", "h-4"], ["nav2", "", 1, "bg-blue-700", "h-12"], ["header", "", 1, "bg-red-400", "h-32"], ["center", "", 1, "tall", 3, "ngStyle"], ["class", "m-10", "mat-raised-button", "", "color", "primary", 3, "click", 4, "ngIf"], ["id", "purchase-test", "mat-raised-button", "", "color", "primary", 1, "m-10", 3, "click"], ["action", "", 1, "bg-indigo-500", "h-16", "desktop:hidden"], ["footer", "", 1, "bg-pink-300", "h-16", "hidden", "desktop:block"], ["status", "", 1, "bg-red-500", "h-4", "hidden", "mobile:block"], ["mat-raised-button", "", "color", "primary", 1, "m-10", 3, "click"]], template: function AbtestPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "app-container-layout");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3, " layout=over ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, " layout=notice ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](7, " layout=nav2 ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, " layout=header ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](10, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](12, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](14, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](15);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](16, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](17, " layout=center ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](18, "br")(19, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](20, AbtestPageComponent_button_20_Template, 2, 0, "button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](21, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](22, "button", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AbtestPageComponent_Template_button_click_22_listener() { return ctx.purchaseClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](23, "BUY NOW");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](24, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](25, " layout=action (DEFAULT MOBILE, TABLET ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](26, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](27, " layout=footer (DEFAULT DESKTOP ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](28, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](29, " layout=status (DEFAULT MOBILE ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" Version:", ctx.version, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" EXP VAR:", ctx.variant, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" EXP ID: ", ctx.expName, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngStyle", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](5, _c0, ctx.colors[ctx.variant]));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngIf", !ctx.analyticsService.startedABTest);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.NgIf, _angular_common__WEBPACK_IMPORTED_MODULE_4__.NgStyle, _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_2__.ContainerLayoutComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_5__.MatButton], styles: [".tall[_ngcontent-%COMP%] {\n  width: 100%;\n  height: 2000px;\n}\n\n.long[_ngcontent-%COMP%] {\n  width: 2000px;\n  height: 200px;\n  background-color: cadetblue;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFidGVzdC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGNBQUE7QUFDSjs7QUFFQTtFQUNJLGFBQUE7RUFDQSxhQUFBO0VBQ0EsMkJBQUE7QUFDSiIsImZpbGUiOiJhYnRlc3QtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi50YWxse1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDoyMDAwcHg7XG59XG5cbi5sb25ne1xuICAgIHdpZHRoOiAyMDAwcHg7XG4gICAgaGVpZ2h0OjIwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGNhZGV0Ymx1ZTtcbn1cbiJdfQ== */"] });


/***/ }),

/***/ 43074:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/access-page/access-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AccessPageComponent": () => (/* binding */ AccessPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ui/src/app/ui/components/img/img.component */ 29025);





function AccessPageComponent_div_4_app_img_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "app-img", 8);
} if (rf & 2) {
    const test_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate"]("src", test_r2.image);
} }
function AccessPageComponent_div_4_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r2.status, "");
} }
function AccessPageComponent_div_4_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r2.status, "");
} }
function AccessPageComponent_div_4_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r2.status, "");
} }
function AccessPageComponent_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 3)(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](3, AccessPageComponent_div_4_app_img_3_Template, 1, 1, "app-img", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](4, AccessPageComponent_div_4_div_4_Template, 2, 1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](5, AccessPageComponent_div_4_div_5_Template, 2, 1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](6, AccessPageComponent_div_4_div_6_Template, 2, 1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r2 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("TEST:", test_r2.name, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r2.image);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r2.status == "unknown");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r2.status == "success");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r2.status == "failed");
} }
function AccessPageComponent_div_7_app_img_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "app-img", 8);
} if (rf & 2) {
    const test_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate"]("src", test_r11.image);
} }
function AccessPageComponent_div_7_div_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r11.status, "");
} }
function AccessPageComponent_div_7_div_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r11.status, "");
} }
function AccessPageComponent_div_7_div_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("STATUS: ", test_r11.status, "");
} }
function AccessPageComponent_div_7_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 3)(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](3, AccessPageComponent_div_7_app_img_3_Template, 1, 1, "app-img", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](4, AccessPageComponent_div_7_div_4_Template, 2, 1, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](5, AccessPageComponent_div_7_div_5_Template, 2, 1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](6, AccessPageComponent_div_7_div_6_Template, 2, 1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const test_r11 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("TEST:", test_r11.name, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r11.image);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r11.status == "unknown");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r11.status == "success");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", test_r11.status == "failed");
} }
class AccessPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.failTestCases = [
            {
                name: "aigensstoretest.appspot.com",
                url: "https://authtest.aigens.com/api/v1/status.json",
                status: "unknown"
            },
            {
                name: "auth.aigens.com",
                url: "https://auth.aigens.com/api/v1/status.json",
                status: "unknown"
            },
            /*
            {
                name: "DIRECT GOOGLE IMG",
                image: "https://lh3.googleusercontent.com/BmCsr-tEXqCk5_uU-H3q75wrI_ASf70e2_esx4GjaghZMOWLoKikAKy0qVUMx2J_6qeWzk236uifv97WdzWOhMtj5HGtxhpGlvewMuXw6w4=w500-rw",
                status: "see img"
            }
            */
        ];
        this.testCases = [
            {
                name: "authtest.aigens.com",
                url: "https://authtest.aigens.com/api/v1/status.json",
                status: "unknown"
            },
            {
                name: "auth2.aigens.com",
                url: "https://auth2.aigens.com/api/v1/status.json",
                status: "unknown"
            },
            //https://lh3.googleusercontent.com/BmCsr-tEXqCk5_uU-H3q75wrI_ASf70e2_esx4GjaghZMOWLoKikAKy0qVUMx2J_6qeWzk236uifv97WdzWOhMtj5HGtxhpGlvewMuXw6w4=w500-rw
            {
                name: "PROXY GOOGLE IMG",
                image: "https://image.order.place/BmCsr-tEXqCk5_uU-H3q75wrI_ASf70e2_esx4GjaghZMOWLoKikAKy0qVUMx2J_6qeWzk236uifv97WdzWOhMtj5HGtxhpGlvewMuXw6w4=w500",
                status: "see img"
            }
        ];
        var api = window['aigens'].profile.api;
        var api2 = window['aigens'].profile.api2;
        this.failTestCases.push({
            name: "PROFILE API (" + api + ")",
            url: api + "/p/doNothing",
            status: "unknown"
        });
        this.testCases.push({
            name: "PROFILE API2 (" + api2 + ")",
            url: api2 + "/p/doNothing",
            status: "unknown"
        });
        this.network = this.platformService.network;
    }
    ngOnInit() {
        for (let c2 of this.testCases) {
            this.runTest(c2);
        }
        for (let c of this.failTestCases) {
            this.runTest(c);
        }
    }
    runTest(c) {
        if (!c.url) {
            return;
        }
        this.dataService.getRaw(c.url, {}).subscribe((data) => {
            console.log(c.name, data);
            if (data) {
                c.status = 'success';
            }
        });
    }
}
AccessPageComponent.ɵfac = function AccessPageComponent_Factory(t) { return new (t || AccessPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
AccessPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: AccessPageComponent, selectors: [["app-access-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 8, vars: 3, consts: [[1, "text-xl", "text-red-500"], ["class", "case", 4, "ngFor", "ngForOf"], [1, "text-xl", "text-green-500"], [1, "case"], ["class", "w-32", 3, "src", 4, "ngIf"], [4, "ngIf"], ["class", "text-green-500", 4, "ngIf"], ["class", "text-red-500", 4, "ngIf"], [1, "w-32", 3, "src"], [1, "text-green-500"], [1, "text-red-500"]], template: function AccessPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](3, " THESE CASES SHOULD FAIL\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](4, AccessPageComponent_div_4_Template, 7, 5, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](6, " THESE CASES SHOULD PASS\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](7, AccessPageComponent_div_7_Template, 7, 5, "div", 1);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" NETWORK: ", ctx.network, "\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.failTestCases);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.testCases);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_3__.NgIf, _ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_1__.ImgComponent], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.case[_ngcontent-%COMP%] {\n  margin: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY2Vzcy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGOztBQUdBO0VBQ0ksWUFBQTtBQUFKIiwiZmlsZSI6ImFjY2Vzcy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuXG4uY2FzZXtcbiAgICBtYXJnaW46IDIwcHg7XG59XG4iXX0= */"] });


/***/ }),

/***/ 2075:
/*!*************************************************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/animation-tabbar-test-page/animation-tabbar-test-page.component.ts ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimationTabbarTestPageComponent": () => (/* binding */ AnimationTabbarTestPageComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../ui/src/app/ui/components/img/img.component */ 29025);
/* harmony import */ var _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/layouts/container-layout/container-layout.component */ 37073);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ngx-lottie */ 23875);






const _c0 = function (a0) { return { selected: a0 }; };
// import { AnimationItem } from 'lottie-web';
// import { AnimationOptions } from 'ngx-lottie';
class AnimationTabbarTestPageComponent {
    constructor(ngZone) {
        this.ngZone = ngZone;
        this.animationMap = {};
        this.homeLottieOption = {
            path: 'assets/lottie/home.json',
            loop: false
        };
        this.memberLottieOption = {
            path: 'assets/lottie/member.json',
            loop: false
        };
        this.orderingLottieOption = {
            path: 'assets/lottie/ordering.json',
            loop: false
        };
        this.rewardLottieOption = {
            path: 'assets/lottie/reward.json',
            loop: false
        };
        this.selectedTab = 'home';
    }
    ngOnInit() {
    }
    animationCreated(animationItem, key) {
        this.animationMap[key] = animationItem;
    }
    tabClicked(key) {
        this.selectedTab = key;
        this.ngZone.runOutsideAngular(() => {
            this.animationMap[key].goToAndPlay(0);
        });
    }
    hasTabSelected(key) {
        return key === this.selectedTab;
    }
}
AnimationTabbarTestPageComponent.ɵfac = function AnimationTabbarTestPageComponent_Factory(t) { return new (t || AnimationTabbarTestPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.NgZone)); };
AnimationTabbarTestPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: AnimationTabbarTestPageComponent, selectors: [["app-animation-tabbar-test-page"]], decls: 25, vars: 28, consts: [["center", "", 1, "bg-yellow-400", "main-center"], ["action", "", 1, "h-16"], [1, "tabbar"], ["matRipple", "", 1, "tabbar-container", 3, "click"], ["src", "assets/images/test-home.svg", 1, "static-icon", 3, "ngClass"], [1, "icon", 3, "ngClass", "options", "animationCreated"], [1, "title"], ["src", "assets/images/test-member.svg", 1, "static-icon", 3, "ngClass"], ["src", "assets/images/test-ordering.svg", 1, "static-icon", 3, "ngClass"], ["src", "assets/images/test-reward.svg", 1, "static-icon", 3, "ngClass"]], template: function AnimationTabbarTestPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "app-container-layout")(1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2, " animation-tabbar-test-page works! ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](3, "div", 1)(4, "div", 2)(5, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AnimationTabbarTestPageComponent_Template_div_click_5_listener() { return ctx.tabClicked("home"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](6, "app-img", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "ng-lottie", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("animationCreated", function AnimationTabbarTestPageComponent_Template_ng_lottie_animationCreated_7_listener($event) { return ctx.animationCreated($event, "home"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, "Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AnimationTabbarTestPageComponent_Template_div_click_10_listener() { return ctx.tabClicked("member"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](11, "app-img", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](12, "ng-lottie", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("animationCreated", function AnimationTabbarTestPageComponent_Template_ng_lottie_animationCreated_12_listener($event) { return ctx.animationCreated($event, "member"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](13, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](14, "Member");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](15, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AnimationTabbarTestPageComponent_Template_div_click_15_listener() { return ctx.tabClicked("ordering"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](16, "app-img", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](17, "ng-lottie", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("animationCreated", function AnimationTabbarTestPageComponent_Template_ng_lottie_animationCreated_17_listener($event) { return ctx.animationCreated($event, "ordering"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](18, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](19, "Ordering");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](20, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function AnimationTabbarTestPageComponent_Template_div_click_20_listener() { return ctx.tabClicked("reward"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](21, "app-img", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](22, "ng-lottie", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("animationCreated", function AnimationTabbarTestPageComponent_Template_ng_lottie_animationCreated_22_listener($event) { return ctx.animationCreated($event, "reward"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](23, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](24, "Reward");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()()()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](12, _c0, ctx.hasTabSelected("home")));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](14, _c0, ctx.hasTabSelected("home")))("options", ctx.homeLottieOption);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](16, _c0, ctx.hasTabSelected("member")));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](18, _c0, ctx.hasTabSelected("member")))("options", ctx.memberLottieOption);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](20, _c0, ctx.hasTabSelected("ordering")));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](22, _c0, ctx.hasTabSelected("ordering")))("options", ctx.orderingLottieOption);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](24, _c0, ctx.hasTabSelected("reward")));
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpureFunction1"](26, _c0, ctx.hasTabSelected("reward")))("options", ctx.rewardLottieOption);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.NgClass, _ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_0__.ImgComponent, _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_1__.ContainerLayoutComponent, ngx_lottie__WEBPACK_IMPORTED_MODULE_2__.LottieComponent], styles: ["[_nghost-%COMP%] {\n  display: flex;\n  flex-direction: column;\n}\n\n.tabbar[_ngcontent-%COMP%] {\n  background-color: white;\n  display: grid;\n  grid-auto-flow: column;\n  grid-auto-columns: 1fr;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%] {\n  padding: 0 15px 10px;\n  display: flex;\n  flex-direction: column;\n  background-color: #FFF;\n  transition: background-color 100ms ease-in-out;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%] {\n  color: #666;\n  font-size: 0.8rem;\n  text-align: center;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]   .static-icon[_ngcontent-%COMP%] {\n  width: 60px;\n  padding: 10px;\n  font-size: 45px;\n  color: black;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]   .static-icon.selected[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]   .icon[_ngcontent-%COMP%] {\n  width: 60px;\n  padding: 10px;\n  display: none;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]   .icon.selected[_ngcontent-%COMP%] {\n  display: block;\n}\n\n.tabbar[_ngcontent-%COMP%]   .tabbar-container[_ngcontent-%COMP%]:active {\n  background-color: #EFEFEF;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbi10YWJiYXItdGVzdC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FBQ0Y7O0FBQ0E7RUFDSSx1QkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0FBRUo7O0FBREk7RUFDSSxvQkFBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtFQUNBLHNCQUFBO0VBQ0EsOENBQUE7QUFHUjs7QUFGUTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0FBSVo7O0FBRlE7RUFDSSxXQUFBO0VBQ0EsYUFBQTtFQUNBLGVBQUE7RUFDQSxZQUFBO0FBSVo7O0FBSFk7RUFDSSxhQUFBO0FBS2hCOztBQUZRO0VBQ0ksV0FBQTtFQUNBLGFBQUE7RUFDQSxhQUFBO0FBSVo7O0FBSFk7RUFDSSxjQUFBO0FBS2hCOztBQUZRO0VBQ0kseUJBQUE7QUFJWiIsImZpbGUiOiJhbmltYXRpb24tdGFiYmFyLXRlc3QtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cbi50YWJiYXJ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgZGlzcGxheTogZ3JpZDtcbiAgICBncmlkLWF1dG8tZmxvdzogY29sdW1uO1xuICAgIGdyaWQtYXV0by1jb2x1bW5zOiAxZnI7XG4gICAgLnRhYmJhci1jb250YWluZXJ7XG4gICAgICAgIHBhZGRpbmc6IDAgMTVweCAxMHB4O1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGO1xuICAgICAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDEwMG1zIGVhc2UtaW4tb3V0O1xuICAgICAgICAudGl0bGUge1xuICAgICAgICAgICAgY29sb3I6ICM2NjY7XG4gICAgICAgICAgICBmb250LXNpemU6IDAuOHJlbTtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgICAuc3RhdGljLWljb24ge1xuICAgICAgICAgICAgd2lkdGg6IDYwcHg7XG4gICAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgICAgZm9udC1zaXplOiA0NXB4O1xuICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xuICAgICAgICAgICAgJi5zZWxlY3RlZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAuaWNvbiB7XG4gICAgICAgICAgICB3aWR0aDogNjBweDtcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgJi5zZWxlY3RlZCB7XG4gICAgICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgJjphY3RpdmUge1xuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0VGRUZFRjtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ== */"] });


/***/ }),

/***/ 48001:
/*!***********************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/app-test-page/app-test-page.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppTestPageComponent": () => (/* binding */ AppTestPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/storage.service */ 24430);
/* harmony import */ var _aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/member-context-manager.service */ 67167);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../core/src/app/pure/services/pwa.service */ 50177);
/* harmony import */ var _aigens_native_src_app_native_services_native_location_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @aigens/native/src/app/native/services/native-location.service */ 85542);
/* harmony import */ var _miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../miniapp/src/app/miniapp/standard/services/bridge.service */ 46112);
/* harmony import */ var _native_src_app_native_services_native_platform_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../native/src/app/native/services/native-platform.service */ 83815);
/* harmony import */ var _aigens_native_src_app_native_services_native_share_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @aigens/native/src/app/native/services/native-share.service */ 93822);
/* harmony import */ var _native_src_app_native_services_native_routing_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../native/src/app/native/services/native-routing.service */ 30874);
/* harmony import */ var _native_src_app_native_services_native_container_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../../../../native/src/app/native/services/native-container.service */ 70396);
/* harmony import */ var _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/nav-bar/nav-bar.component */ 84904);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 36362);
















class AppTestPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, storageService, memberContextManager, sub, pwaService, locationService, bridgeService, cd, nativePlatformService, shareService, nativeRoutingService, nativeContainerService) {
        super(injector);
        this.injector = injector;
        this.storageService = storageService;
        this.memberContextManager = memberContextManager;
        this.sub = sub;
        this.pwaService = pwaService;
        this.locationService = locationService;
        this.bridgeService = bridgeService;
        this.cd = cd;
        this.nativePlatformService = nativePlatformService;
        this.shareService = shareService;
        this.nativeRoutingService = nativeRoutingService;
        this.nativeContainerService = nativeContainerService;
        this.navigator = navigator;
        this.haveServiceWorker = false;
        this.aliApp = false;
        this.localUrl = window.location.href + "";
        //this assume alipay lib is already loaded
        // this.my2 = window['my'];
        this.haveServiceWorker = this.pwaService.haveServiceWorker();
        this.aliApp = this.nativePlatformService.isAliApp();
        this.aigens = window['aigens'];
        this.channel = this.nativePlatformService.getChannel();
        this.native = this.nativePlatformService.isNative();
        this.nativePlatform = this.nativePlatformService.getNativePlatform();
        this.requestInfo();
    }
    ngOnInit() {
    }
    requestInfo() {
        this.nativePlatformService.getAppInfo().then((info) => {
            console.log("INFO RETURNED", JSON.stringify(info));
            this.appInfo = info;
        });
    }
    loadTestContext() {
        var storeId = 500;
        this.contextManager.loadContext(this.context.fields, { storeId: storeId }, true, (context) => {
        });
    }
    requestGps() {
        //this.invokeMethod("getLocation", []);
        this.locationService.getGps((pos) => {
            console.log("pos", pos);
            this.response = {
                latitude: pos.latitude,
                longitude: pos.longitude
            };
        });
    }
    requestQr() {
    }
    requestEcho() {
    }
    echo() {
        console.log("calling echo");
        var msg = {
            "HELLO": "WORLD",
            "value": "HELLOWORLD"
        };
        this.nativeContainerService.echo(msg).then((result) => {
            console.log("ECHO RESULT", result);
            this.response = result;
        });
    }
    goAppHome() {
        console.log("go app hoe");
        var url = "/app/home/brand/4806394001752064";
        this.router.navigate([url], { queryParams: {} });
    }
    testNetwork() {
        var url = "https://aigensstoretest.appspot.com/api/v1/status.json";
        this.dataService.getRaw(url, {}).subscribe((data) => {
            this.response = data;
        });
    }
    getSystemInfo() {
    }
    openBrowser() {
        /*
        var options = {
            url: "https://www.google.com"
        };
        this.routingService.openBrowser(options);
        */
        var options = {
            //url: "https://www.google.com"
            //url: "http://192.168.86.26:4200/app/test/app/store/500"
            //url: "https://test.order.place/merchant/test/app/store/500"
            //url: "https://manginasaldelivery.com.ph/home/store/993520021?mode=takeaway&onpremise=true"
            url: "https://scantest.aigens.com/scan?code=c3RvcmU9OTkzNTIwMDIxJm1vZGU9dGFrZWF3YXkmcGFnZT1ieW9k"
        };
        this.nativeContainerService.openBrowser(options);
    }
    trackAnalytics() {
        console.log("trackAnalytics");
        this.analyticsService.trackSelectMode("byod");
    }
    share() {
        var options = {
            title: 'See cool stuff',
            text: 'Really awesome thing you need to see right meow',
            url: 'http://ionicframework.com/',
            dialogTitle: 'Share with buddies',
        };
        this.shareService.share(options);
    }
    finishApp() {
        this.nativeRoutingService.finish();
    }
    dismissApp() {
        this.nativeRoutingService.dismiss();
    }
    exitApp() {
        this.nativeRoutingService.exit();
    }
    reload() {
        window.location.reload();
    }
    getMember() {
        this.nativeContainerService.getMember().then((member) => {
            console.log("member", member);
        });
    }
}
AppTestPageComponent.ɵfac = function AppTestPageComponent_Factory(t) { return new (t || AppTestPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__.StorageService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__.MemberContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__.PwaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_aigens_native_src_app_native_services_native_location_service__WEBPACK_IMPORTED_MODULE_5__.NativeLocationService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_6__.BridgeService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_native_src_app_native_services_native_platform_service__WEBPACK_IMPORTED_MODULE_7__.NativePlatformService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_aigens_native_src_app_native_services_native_share_service__WEBPACK_IMPORTED_MODULE_8__.NativeShareService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_native_src_app_native_services_native_routing_service__WEBPACK_IMPORTED_MODULE_9__.NativeRoutingService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_native_src_app_native_services_native_container_service__WEBPACK_IMPORTED_MODULE_10__.NativeContainerService)); };
AppTestPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: AppTestPageComponent, selectors: [["app-app-test-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]], decls: 50, vars: 19, consts: [[3, "title", "back", "language", "user", "fullWidth"], [1, "items"], ["mat-raised-button", "", "color", "primary", 3, "click"]], template: function AppTestPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](0, "app-nav-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1)(2, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, "APP Integration Test Page");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipe"](20, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](23, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipe"](25, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_26_listener() { return ctx.reload(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](27, "Reload");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](28, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_28_listener() { return ctx.echo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](29, "Echo");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](30, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_30_listener() { return ctx.getMember(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](31, "Get Member");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](32, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_32_listener() { return ctx.requestGps(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](33, "Request Gps");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](34, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_34_listener() { return ctx.requestInfo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](35, "Request App Info");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](36, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_36_listener() { return ctx.testNetwork(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](37, "Test Network");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](38, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_38_listener() { return ctx.openBrowser(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](39, "Open Browser");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](40, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_40_listener() { return ctx.share(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](41, "Share");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](42, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_42_listener() { return ctx.finishApp(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](43, "Finish Webview");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](44, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_44_listener() { return ctx.dismissApp(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](45, "Dismiss Webview");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](46, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_46_listener() { return ctx.exitApp(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](47, "Exit App");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](48, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function AppTestPageComponent_Template_button_click_48_listener() { return ctx.trackAnalytics(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](49, "Track Analytics");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("title", "HELLO")("back", true)("language", true)("user", true)("fullWidth", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("URL: ", ctx.localUrl, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Version: ", ctx.aigens.version, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Agent: ", ctx.navigator == null ? null : ctx.navigator.userAgent, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("HAVE SERVICE WORKER: ", ctx.haveServiceWorker, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Native: ", ctx.native, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Channel: ", ctx.channel, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Native Platform: ", ctx.nativePlatform, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("App Info 5: ", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipeBind1"](20, 15, ctx.appInfo), "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Current Lang: ", ctx.t.currentLang, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Response: ", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpipeBind1"](25, 17, ctx.response), "");
    } }, dependencies: [_ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_11__.NavBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_13__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_14__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n  background-color: peru;\n}\n\n.items[_ngcontent-%COMP%] {\n  display: block;\n}\n\n.items[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\n  margin: 10px;\n  padding: 10px;\n}\n\n.items[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n\n.items[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC10ZXN0LXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0VBQ0Esc0JBQUE7QUFDSjs7QUFFRTtFQUVJLGNBQUE7QUFBTjs7QUFHTTtFQUNJLFlBQUE7RUFDQSxhQUFBO0FBRFY7O0FBSU07RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFGVjs7QUFLTTtFQUNJLGNBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUhWIiwiZmlsZSI6ImFwcC10ZXN0LXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogcGVydTtcbn1cblxuICAuaXRlbXN7XG5cbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgLy9tYXJnaW46IDEwcHg7XG5cbiAgICAgIGRpdntcbiAgICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgIH1cblxuICAgICAgYnV0dG9ue1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbjogMTBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgfVxuXG4gICAgICBhe1xuICAgICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICAgIG1hcmdpbjogMTBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgfVxuXG4gIH1cbiJdfQ== */"] });


/***/ }),

/***/ 25666:
/*!***************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/aux1-page/aux1-page.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Aux1PageComponent": () => (/* binding */ Aux1PageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/sub-bar/sub-bar.component */ 61204);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);






class Aux1PageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.input = {};
        console.log("AUX1 construct");
    }
    getState() {
        return window.history.state;
    }
    ngOnInit() {
        console.log("history state", window.history.state);
        this.input['p1'] = this.navParams.get("p1");
        this.input['p2'] = this.navParams.get("p2");
    }
    goDialog() {
        var url = "test/dialog/aux2";
        this.dialogService.openAux(url, {}, {}, (result) => {
            this.dialogService.showToast(JSON.stringify(result));
        });
        ;
    }
    done() {
        this.dialogService.submitAuxDialog({ "HELLO": "WORLD" });
    }
    forward() {
        var options = {
            forwardUrl: "/order/store/500/mode/takeaway",
            extras: {
                queryParams: { back: true }
            }
        };
        this.routingService.navigateCloseModal(options);
    }
}
Aux1PageComponent.ɵfac = function Aux1PageComponent_Factory(t) { return new (t || Aux1PageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
Aux1PageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: Aux1PageComponent, selectors: [["app-aux1-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 13, vars: 6, consts: [["mat-raised-button", "", "color", "primary", 1, "m-4", 3, "click"]], template: function Aux1PageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "app-sub-bar");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](1, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](3, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](6, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function Aux1PageComponent_Template_button_click_7_listener() { return ctx.goDialog(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](8, "Go AUX2");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](9, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function Aux1PageComponent_Template_button_click_9_listener() { return ctx.done(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](10, "Finish Result");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](11, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function Aux1PageComponent_Template_button_click_11_listener() { return ctx.forward(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](12, "Close + Forward");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" State: ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](3, 2, ctx.getState()), "\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" Input: ", _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](6, 4, ctx.input), "\n");
    } }, dependencies: [_ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_1__.SubBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_3__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_4__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n  background-color: white;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1eDEtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUFDRiIsImZpbGUiOiJhdXgxLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuIl19 */"] });


/***/ }),

/***/ 61727:
/*!***************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/aux2-page/aux2-page.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Aux2PageComponent": () => (/* binding */ Aux2PageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _dialogs_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../dialogs/confirm-dialog/confirm-dialog.component */ 31775);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/sub-bar/sub-bar.component */ 61204);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);







class Aux2PageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
    }
    ngOnInit() {
        var routeData = this.route.snapshot.data;
        console.log("routeData", routeData);
    }
    getState() {
        return window.history.state;
    }
    goDialog() {
        var url = "test/dialog/aux1";
        this.dialogService.openAux(url);
    }
    goOrder() {
        console.log("go order");
        var path = "/order/store/500/mode/takeaway";
        //window.history.go(-2);
        //console.log("history state", window.history.state);
        this.routingService.navigate(path);
    }
    goPopup() {
        this.dialogService.openComponent(_dialogs_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_1__.ConfirmDialogComponent, {}, {}, (result) => {
            this.dialogService.showToast(JSON.stringify(result));
        });
        ;
    }
    done() {
        this.dialogService.submitAuxDialog({ "HELLO": "WORLD2" });
    }
}
Aux2PageComponent.ɵfac = function Aux2PageComponent_Factory(t) { return new (t || Aux2PageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector)); };
Aux2PageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: Aux2PageComponent, selectors: [["app-aux2-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 12, vars: 3, consts: [["mat-raised-button", "", "color", "primary", 1, "m-4", 3, "click"]], template: function Aux2PageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "app-sub-bar");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpipe"](3, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](4, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function Aux2PageComponent_Template_button_click_4_listener() { return ctx.goDialog(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](5, "Go AUX1");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](6, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function Aux2PageComponent_Template_button_click_6_listener() { return ctx.goOrder(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](7, "Direct Page Jump");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](8, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function Aux2PageComponent_Template_button_click_8_listener() { return ctx.done(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, "Finish Result");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](10, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function Aux2PageComponent_Template_button_click_10_listener() { return ctx.goPopup(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](11, "Popup");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" State: ", _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵpipeBind1"](3, 1, ctx.getState()), "\n");
    } }, dependencies: [_ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_2__.SubBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_4__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_5__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n  background-color: white;\n  height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1eDItcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7RUFDQSx1QkFBQTtFQUNBLFlBQUE7QUFDRiIsImZpbGUiOiJhdXgyLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuIl19 */"] });


/***/ }),

/***/ 37428:
/*!*****************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/blank-page/blank-page.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlankPageComponent": () => (/* binding */ BlankPageComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ 36362);


function BlankPageComponent_div_11_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtextInterpolate"](n_r1);
} }
class BlankPageComponent {
    constructor() {
        this.numbers = Array(250).fill(0).map((x, i) => i);
        console.log("BLANK PAGE CONSTRUCTOR");
    }
    ngOnInit() {
    }
}
BlankPageComponent.ɵfac = function BlankPageComponent_Factory(t) { return new (t || BlankPageComponent)(); };
BlankPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: BlankPageComponent, selectors: [["app-blank-page"]], decls: 17, vars: 1, consts: [[1, "nav"], [1, "header"], [1, "container"], [1, "sidebar"], [1, "sidebar__widget"], [1, "main"], [4, "ngFor", "ngForOf"], [1, "footer"]], template: function BlankPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "div")(1, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " NAV ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "header", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "header");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 2)(6, "aside", 3)(7, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, " widget ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, "Main ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtemplate"](11, BlankPageComponent_div_11_Template, 2, 1, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](12, "aside", 3)(13, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, " widget ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](15, "footer", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](16, "footer");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngForOf", ctx.numbers);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_1__.NgForOf], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.nav[_ngcontent-%COMP%] {\n  background-color: pink;\n  height: 40px;\n  position: sticky;\n  top: 0px;\n}\n\n.header[_ngcontent-%COMP%], .footer[_ngcontent-%COMP%] {\n  text-align: center;\n  height: 300px;\n  background: white;\n}\n\n.container[_ngcontent-%COMP%] {\n  display: flex;\n  width: 600px;\n  margin: 0 auto;\n  background: #fafafa;\n}\n\n.main[_ngcontent-%COMP%] {\n  flex: 0 0 66.6666%;\n}\n\n.sidebar[_ngcontent-%COMP%] {\n  flex: 0 0 33.3333%;\n  background: gray;\n}\n\n.sidebar__widget[_ngcontent-%COMP%] {\n  position: sticky;\n  top: 20px;\n  background: yellow;\n  height: 250px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJsYW5rLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FBQ0Y7O0FBRUE7RUFDSSxzQkFBQTtFQUNBLFlBQUE7RUFFQSxnQkFBQTtFQUNBLFFBQUE7QUFBSjs7QUFHQTs7RUFFRSxrQkFBQTtFQUNBLGFBQUE7RUFDQSxpQkFBQTtBQUFGOztBQUdBO0VBQ0UsYUFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0VBQ0EsbUJBQUE7QUFBRjs7QUFHQTtFQUNFLGtCQUFBO0FBQUY7O0FBSUE7RUFDRSxrQkFBQTtFQUNBLGdCQUFBO0FBREY7O0FBSUE7RUFDRSxnQkFBQTtFQUNBLFNBQUE7RUFDQSxrQkFBQTtFQUNBLGFBQUE7QUFERiIsImZpbGUiOiJibGFuay1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLm5hdntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBwaW5rO1xuICAgIGhlaWdodDogNDBweDtcblxuICAgIHBvc2l0aW9uOiBzdGlja3k7XG4gICAgdG9wOjBweDtcbn1cblxuLmhlYWRlcixcbi5mb290ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGhlaWdodDogMzAwcHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xufVxuXG4uY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDYwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcbn1cblxuLm1haW4ge1xuICBmbGV4OiAwIDAgNjYuNjY2NiU7XG4gIC8vaGVpZ2h0OiAxMDAwcHg7XG59XG5cbi5zaWRlYmFyIHtcbiAgZmxleDogMCAwIDMzLjMzMzMlO1xuICBiYWNrZ3JvdW5kOiBncmF5O1xufVxuXG4uc2lkZWJhcl9fd2lkZ2V0IHtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAyMHB4O1xuICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gIGhlaWdodDogMjUwcHg7XG59Il19 */"] });


/***/ }),

/***/ 52300:
/*!*********************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/context-page/context-page.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ContextPageComponent": () => (/* binding */ ContextPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 87317);




class ContextPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        console.log("CONTEXT", this.context);
    }
    ngOnInit() {
    }
    saveClicked() {
        var key = this.context.contextId;
        this.context.save();
    }
    restoreClicked() {
        this.context.restore((value) => {
            console.log("restored callback", value);
        });
    }
}
ContextPageComponent.ɵfac = function ContextPageComponent_Factory(t) { return new (t || ContextPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injector)); };
ContextPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: ContextPageComponent, selectors: [["app-context-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵInheritDefinitionFeature"]], decls: 5, vars: 0, consts: [["mat-raised-button", "", "color", "primary", 3, "click"]], template: function ContextPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](0, "CONEXT TEST ");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ContextPageComponent_Template_button_click_1_listener() { return ctx.saveClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](2, "Save");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](3, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵlistener"]("click", function ContextPageComponent_Template_button_click_3_listener() { return ctx.restoreClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵtext"](4, "Restore");
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
    } }, dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatButton], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\nbutton[_ngcontent-%COMP%] {\n  margin: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRleHQtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUNJLFlBQUE7QUFDSiIsImZpbGUiOiJjb250ZXh0LXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5idXR0b257XG4gICAgbWFyZ2luOiAxMHB4O1xufSJdfQ== */"] });


/***/ }),

/***/ 36883:
/*!***********************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/deeplink-page/deeplink-page.component.ts ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "DeeplinkPageComponent": () => (/* binding */ DeeplinkPageComponent)
/* harmony export */ });
/* harmony import */ var _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/src/app/pure/services/deep-link.service */ 13661);
/* harmony import */ var _byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../byod/src/app/byod/services/order-context-manager.service */ 4911);
/* harmony import */ var _aigens_byod_src_app_byod_services_deep_link_manager__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/byod/src/app/byod/services/deep-link-manager */ 14421);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ 87317);










function DeeplinkPageComponent_div_10_Template(rf, ctx) { if (rf & 1) {
    const _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 1)(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](2, "Pending Actions:");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](3, "pre");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](5, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](6, "br")(7, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](8, "div")(9, "input", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("ngModelChange", function DeeplinkPageComponent_div_10_Template_input_ngModelChange_9_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r4.target = $event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](10, "div")(11, "input", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("ngModelChange", function DeeplinkPageComponent_div_10_Template_input_ngModelChange_11_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r6.isAuto = $event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](12, "label", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](13, "Is Auto?");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](14, "br")(15, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](16, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r7.addPendingItem("500-ITEM12")); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](17, "ADD SALAD");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](18, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_18_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r8.addPendingItem("500-ITEM8")); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](19, "ADD COMBO MEAL");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](20, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_20_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r9.addOrderItem()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](21, "ADD HISTORY ORDER ITEM");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](22, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_22_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r10.addOrder()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](23, "ADD HISTORY ENTIRE ORDER");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](24, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_24_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r11.addPendingSearchItem()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](25, "ADD SEARCH ITEM");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](26, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_26_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r12.addPendingCrmOffer()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](27, "ADD CRM OFFER");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](28, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_div_10_Template_button_click_28_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r5); const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r13.addPendingItem("abc")); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](29, "ADD NO EXIST ITEM");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](5, 3, ctx_r0.deeplinkService.orderActions));
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngModel", ctx_r0.target);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngModel", ctx_r0.isAuto);
} }
function DeeplinkPageComponent_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, "MENU LOADED");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function DeeplinkPageComponent_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r15 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_button_13_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r15); const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵresetView"](ctx_r14.loadMenu()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, "Load Menu & New Order");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} }
function DeeplinkPageComponent_pre_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "pre");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipe"](2, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpipeBind1"](2, 1, ctx_r3.orderManager.order));
} }
class DeeplinkPageComponent extends _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, deeplinkService, orderContext, orderManager, orderContextManager, deepLinkManager) {
        super(injector);
        this.injector = injector;
        this.deeplinkService = deeplinkService;
        this.orderContext = orderContext;
        this.orderManager = orderManager;
        this.orderContextManager = orderContextManager;
        this.deepLinkManager = deepLinkManager;
        this.testLink = "/test/deeplink/store/500?addItemId=500-ITEM1,500-ITEM2&addDiscountCode=ABCD&addOfferId=MYOFFER1&sid=TESTTEST&p1=v1&p2=v2";
        this.storeId = "500";
        this.mode = "takeaway";
        this.orderLink = "/order/store/500/mode/takeaway";
        this.fakeOrder = {
            "orderNo": "27574",
            "callNo": "27574",
            "id": "e9b69a84-735b-4aef-8392-bbc8c3f4d509",
            "source": "mobile",
            "create": 1636791539859,
            "business": "2021-11-13",
            "timezone": "GMT+8",
            "update": 1636791544756,
            "points": 0,
            "usedPoints": 0,
            "usedPointsAmt": 0.0,
            "beforePoints": 0,
            "afterPoints": 0,
            "promoPoints": 0,
            "pointModifier": 0.0,
            "regularPoints": 0,
            "usedCashCouponAmt": 0.0,
            "status": "received",
            "statusUrl": "https://firestore.googleapis.com/v1/projects/aigens-realtime-test/databases/(default)/documents/Order/e9b69a84-735b-4aef-8392-bbc8c3f4d509",
            "total": 10.0,
            "discount": 0.0,
            "grandTotal": 10.0,
            "chargeAmount": 10.0,
            "totalToPoints": 0.0,
            "station": "mobile",
            "type": "byod",
            "spot": "5",
            "takeout": false,
            "delivery": false,
            "expire": 1636805939859,
            "submit": 1636791539859,
            "prepare": 1636791539859,
            "storeId": 500,
            "brandId": 500,
            "memberId": 1,
            "session": "500",
            "shipping": 0.0,
            "service": 0.0,
            "handling": 0.0,
            "paid": true,
            "tax": 0.0,
            "tips": 0.0,
            "deliveryCost": 0.0,
            "deliveryDistance": 0.0,
            "time": "16:18:59",
            "itemsCount": 1,
            "ended": false,
            "posSync": true,
            "crmSync": false,
            "financeSync": false,
            "deliverySync": false,
            "failCount": 0,
            "crmFailCount": 0,
            "orderitems": [
                {
                    "id": "310524c8-f17d-4ea9-bc2f-2bf087bc5018",
                    "total": 10.0,
                    "discount": 0.0,
                    "storeId": 500,
                    "quantity": 1,
                    "itemIds": [
                        "500-ITEM1"
                    ],
                    "groups": [
                        {
                            "id": "500-IG1",
                            "name": "Burgers",
                            "choices": 1,
                            "backendId": "500-IG1",
                            "min": 1,
                            "max": 1,
                            "modifier": false,
                            "optional": false,
                            "tags": [],
                            "items": [
                                {
                                    'id': '500-ITEM1',
                                    'name': 'Cheese Burger',
                                    'title': 'Cheese Burger (Product)',
                                    'price': 10.0,
                                    'price1': 10.0,
                                    'handling': 0.0,
                                    'discountable': true,
                                    'export': true,
                                    'featured': true,
                                    'images': {
                                        'default': {
                                            'width': 150,
                                            'source': 'https://via.placeholder.com/150',
                                            'url': 'https://via.placeholder.com/150',
                                            'height': 150
                                        }
                                    },
                                    'backendId': '500-ITEM1',
                                    'published': true,
                                    'baseQty': 0,
                                    'tags': [],
                                    'min': 0,
                                    'max': 0,
                                    'quantity': 1,
                                    'inventory': -1,
                                    'serviceChargeable': true
                                }
                            ]
                        }
                    ],
                    'categoryId': '500-CAT1',
                    'create': 1636791539859,
                    'recommended': true
                }
            ],
            'extra': {
                'sourceUrl': 'N/A'
            },
            'settings': {},
            'qrPickup': false,
            'qrcode': '{"language":"en","uuid":"e9b69a84-735b-4aef-8392-bbc8c3f4d509"}',
            'qrcodeUrl': 'https://aigensstoretest.appspot.com/barcode?message=%7B%22language%22%3A%22en%22%2C%22uuid%22%3A%22e9b69a84-735b-4aef-8392-bbc8c3f4d509%22%7D&type=qr&width=500',
            'cutlery': false,
            'contactless': false,
            'failed': false,
            'refunded': false,
            'attended': false,
            'language': 'en',
            'platformDiscount': 0.0,
            'merchantDiscount': 0.0,
            'deliverySelfPickup': false,
            'couponItems': [],
            'lotteryChances': 0,
            'tally': true,
            'deviceId': 'test'
        };
        this.fakeItem = {
            'class': 'Item',
            'published': true,
            'suspended': false,
            'inventory': -1,
            'quantity': 0,
            'points': 0,
            'groupIds': [],
            'mgroupIds': [],
            'groups': [],
            'mgroups': [],
            'modifier': false,
            'combo': false,
            'modifiable': false,
            'printers': [],
            'baseQty': 0,
            'soldQty': 1,
            'dinein': false,
            'handling': 0,
            'discount': 0,
            'discountCode': '',
            'isPrint': true,
            'prefix': '',
            'discounted': false,
            'discounts': [],
            'discountable': true,
            'featuredRating': 0,
            'addTime': 1672721135398.3413,
            'featured': false,
            'coupons': [],
            'igPos': 2,
            'setLayout': null,
            'id': '500-ITEM7',
            'name': 'BBQ Sauce',
            'name_zh': 'BBQ Sauce',
            'price0': 0,
            'price': 10,
            'price1': 10,
            'usingPriceMap': false,
            'weight': 0,
            'export': true,
            'popularity': 5,
            'images': {
                'default': {
                    'width': 150,
                    'name': 'default',
                    'source': 'https://via.placeholder.com/150',
                    'url': 'https://via.placeholder.com/150',
                    'height': 150
                }
            },
            'backendId': '500-ITEM7',
            'tags': [],
            'min': 0,
            'max': 0,
            'packing': 0,
            'serviceChargeable': true,
            'messageOptional': false,
            'variations': [],
            'minPrice': 0
        };
        this.fakeOffer = {
            'id': '505.956550009',
            'rewardId': 500,
            'start': 1672675200000,
            'update': 1672719529791,
            'create': 1672719529749,
            'used': false,
            'type': 'welcome',
            'enabled': true,
            'expire': 1674575999000,
            'qrcode': 'aigens:128524964184064:505.956550009',
            'qrcodeUrl': 'https://aigensstoretest.appspot.com/barcode?message=aigens%3A128524964184064%3A505.956550009&type=qr&width=500',
            'campaignId': 505,
            'reward': {
                'id': 500,
                'name': 'Free Item',
                'published': true,
                'cost': 0,
                'quota': 0,
                'chance': 0.0,
                'redemptions': 0,
                'create': 1672671626664,
                'inventory': -1,
                'spending': 0.0,
                'itemId': '500-ITEM1',
                'price': 0.0,
                'amount': 0.0,
                'images': {},
                'item': {
                    'id': '500-ITEM1',
                    'name': 'Cheese Burger',
                    'title': 'Cheese Burger (Product)',
                    'price0': 0.0,
                    'price': 10.0,
                    'points': 0,
                    'price1': 10.0,
                    'usingPriceMap': false,
                    'weight': 0.0,
                    'handling': 0.0,
                    'discountable': true,
                    'export': true,
                    'featured': true,
                    'images': {
                        'default': {
                            'width': 150,
                            'name': 'default',
                            'source': 'https://via.placeholder.com/150',
                            'url': 'https://via.placeholder.com/150',
                            'height': 150
                        }
                    },
                    'backendId': '500-ITEM1',
                    'published': true,
                    'baseQty': 0,
                    'tags': [],
                    'min': 0,
                    'max': 0,
                    'groupIds': ['500-IG3', '500-IG4'],
                    'mgroupIds': ['500-MIG3'],
                    'quantity': 0,
                    'inventory': -1,
                    'packing': 0.0,
                    'channels': ['grab', 'mobile'],
                    'serviceChargeable': true,
                    'messageOptional': false
                }
            },
            'cancelled': false
        };
        console.log('DeeplinkPageComponent construct');
        this.deeplinkService.processUrl();
    }
    ngOnInit() {
    }
    processParams(removeParams) {
        this.deeplinkService.processUrl(removeParams);
    }
    addPendingItem(itemId) {
        console.log("ADD PENDING", itemId);
        this.deeplinkService.addPendingItem(itemId, this.isAuto, false, this.target);
    }
    loadMenu() {
        this.orderContextManager.getMenu(this.storeId, this.mode).subscribe(store => {
            console.log('store menu', store);
            this.store = store;
            this.menu = store.menu;
            this.newOrder(store);
        }, err => {
            console.log("error", err);
        }, () => {
            // this.loadingMenu = false;
        });
    }
    newOrder(store) {
        var options = {};
        var order = this.orderManager.createOrder(store, this.mode, options);
        console.log('new order', order);
        // var actions = this.deeplinkService.popOrderActions();
        // this.orderManager.processActions(actions, null);
        //this.orderContext.checkRestoreOrder();
    }
    addOrder() {
        this.deeplinkService.addPendingOrder(this.fakeOrder, false);
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: {} });
    }
    addOrderItem() {
        this.deeplinkService.addPendingOrderItem(this.fakeOrder.orderitems[0], false);
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: {} });
    }
    addPendingSearchItem() {
        this.deeplinkService.addPendingSearchItem(this.fakeItem, false, this.target);
    }
    addPendingCrmOffer() {
        this.deeplinkService.addPendingCrmOffer(null, false, 'order', this.fakeOffer.id);
    }
    goOrder() {
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: {} });
    }
}
DeeplinkPageComponent.ɵfac = function DeeplinkPageComponent_Factory(t) { return new (t || DeeplinkPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_core_src_app_pure_services_deep_link_service__WEBPACK_IMPORTED_MODULE_1__.DeepLinkService), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.OrderContext), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.OrderManager), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_2__.OrderContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_aigens_byod_src_app_byod_services_deep_link_manager__WEBPACK_IMPORTED_MODULE_3__.DeepLinkManager)); };
DeeplinkPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({ type: DeeplinkPageComponent, selectors: [["app-deeplink-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"]], decls: 27, vars: 8, consts: [[1, ""], [1, "section"], ["mat-flat-button", "", 3, "href"], ["mat-flat-button", "", 3, "click"], ["class", "section", 4, "ngIf"], [4, "ngIf"], ["mat-flat-button", "", 3, "click", 4, "ngIf"], ["mat-flat-button", "", "_target", "blank", 3, "href"], ["type", "text", "placeholder", "Which Target?", 3, "ngModel", "ngModelChange"], ["id", "isAuto", "type", "checkbox", 3, "ngModel", "ngModelChange"], ["for", "isAuto"]], template: function DeeplinkPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "h1", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](1, "DEEP LINK Demo");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 1)(3, "a", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](4, "SET TEST LINK");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](5, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](7, "div", 1)(8, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_Template_button_click_8_listener() { return ctx.processParams(true); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](9, "Process & Clear Params");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](10, DeeplinkPageComponent_div_10_Template, 30, 5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](11, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](12, DeeplinkPageComponent_div_12_Template, 2, 0, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](13, DeeplinkPageComponent_button_13_Template, 2, 0, "button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](14, "div", 1)(15, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](16, "ORDER JSON:");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](17, DeeplinkPageComponent_pre_17_Template, 3, 3, "pre", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](18, "div", 1)(19, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](20);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](21, "a", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](22, "Visit Order Link ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](23, "br")(24, "br");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](25, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function DeeplinkPageComponent_Template_button_click_25_listener() { return ctx.goOrder(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtext"](26, "GO ORDER!");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpropertyInterpolate"]("href", ctx.testLink, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsanitizeUrl"]);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" Value: ", ctx.testLink, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.deeplinkService.orderActions);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.menu);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", !ctx.menu);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx.orderManager.order);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtextInterpolate1"](" ORDER LINK: ", ctx.orderLink, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵpropertyInterpolate"]("href", ctx.orderLink, _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsanitizeUrl"]);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgModel, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButton, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatAnchor, _angular_common__WEBPACK_IMPORTED_MODULE_5__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n  margin: 20px;\n}\n\n.section[_ngcontent-%COMP%] {\n  margin: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlZXBsaW5rLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUtBO0VBQ0ksWUFBQTtBQUZKIiwiZmlsZSI6ImRlZXBsaW5rLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW46IDIwcHg7XG5cblxufVxuXG5cbi5zZWN0aW9ue1xuICAgIG1hcmdpbjogMjBweDtcbn0iXX0= */"] });


/***/ }),

/***/ 88648:
/*!*****************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/embed-page/embed-page.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "EmbedPageComponent": () => (/* binding */ EmbedPageComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser */ 50318);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/button */ 87317);



class EmbedPageComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
    }
    ngOnInit() {
        var u = "https://aigens-data.metabaseapp.com/public/dashboard/c2cc3610-036c-4d91-ae4f-69c6e6917791";
        this.setUrl(u);
    }
    setUrl(newUrl) {
        var url = this.sanitizer.bypassSecurityTrustResourceUrl(newUrl);
        this.currentUrl = url;
    }
    switchClicked() {
        console.log("switching");
        var ele = document.getElementById('analytic-dashboard');
        console.log("iframe", ele);
        var newUrl = "https://aigens-data.metabaseapp.com/public/dashboard/99ec74f4-6ff5-42c4-a5bf-b65bf50c2ec0";
        var msg = { "metabase": { "type": "location", "location": newUrl } };
        //postMessage(msg);
        //ele.contentWindow.postMessage(msg);
        this.setUrl(newUrl);
    }
}
EmbedPageComponent.ɵfac = function EmbedPageComponent_Factory(t) { return new (t || EmbedPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_1__.DomSanitizer)); };
EmbedPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: EmbedPageComponent, selectors: [["app-embed-page"]], decls: 3, vars: 1, consts: [["mat-raised-button", "", 3, "click"], ["id", "analytic-dashboard", "frameborder", "0", "allowtransparency", "", "onload", "iFrameResize({}, this);", 1, "dashboard", 3, "src"]], template: function EmbedPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "button", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("click", function EmbedPageComponent_Template_button_click_0_listener() { return ctx.switchClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "SWITCH");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](2, "iframe", 1);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("src", ctx.currentUrl, _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsanitizeResourceUrl"]);
    } }, dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_2__.MatButton], styles: ["[_nghost-%COMP%] {\n  display: block;\n  height: 100%;\n}\n\n.dashboard[_ngcontent-%COMP%] {\n  width: 100%;\n  min-height: 100%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtYmVkLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0FBQ0oiLCJmaWxlIjoiZW1iZWQtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGhlaWdodDogMTAwJTtcbn1cblxuLmRhc2hib2FyZHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiAxMDAlO1xufVxuIl19 */"] });


/***/ }),

/***/ 66319:
/*!*****************************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/fingerprint-page/fingerprint-page.component.ts ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FingerprintPageComponent": () => (/* binding */ FingerprintPageComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _fingerprintjs_fingerprintjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @fingerprintjs/fingerprintjs */ 4889);
/* harmony import */ var device_uuid__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! device-uuid */ 58987);
/* harmony import */ var device_uuid__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(device_uuid__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);




class FingerprintPageComponent {
    constructor() {
        this.visitorId = '';
        this.deviceUUID = '';
    }
    ngOnInit() {
        const fpPromise = _fingerprintjs_fingerprintjs__WEBPACK_IMPORTED_MODULE_1__["default"].load({
            monitoring: false
        });
        (() => (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
            const fp = yield fpPromise;
            const result = yield fp.get();
            this.visitorId = result.visitorId;
        }))();
        this.deviceUUID = new device_uuid__WEBPACK_IMPORTED_MODULE_0__.DeviceUUID().get();
    }
}
FingerprintPageComponent.ɵfac = function FingerprintPageComponent_Factory(t) { return new (t || FingerprintPageComponent)(); };
FingerprintPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: FingerprintPageComponent, selectors: [["app-fingerprint-page"]], decls: 4, vars: 2, template: function FingerprintPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](2, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"]("Fingerprint(@fingerprintjs/fingerprintjs): ", ctx.visitorId, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"]("Device UUID(device-uuid): ", ctx.deviceUUID, "");
    } }, styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZpbmdlcnByaW50LXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoiZmluZ2VycHJpbnQtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */"] });


/***/ }),

/***/ 72331:
/*!***************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/font-page/font-page.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FontPageComponent": () => (/* binding */ FontPageComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/button */ 87317);


class FontPageComponent {
    constructor() { }
    ngOnInit() {
    }
}
FontPageComponent.ɵfac = function FontPageComponent_Factory(t) { return new (t || FontPageComponent)(); };
FontPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({ type: FontPageComponent, selectors: [["app-font-page"]], decls: 20, vars: 0, consts: [[1, "title"], [1, "code"], [1, "normal"], ["mat-raised-button", ""], [1, "cf1"], [1, "cf2"]], template: function FontPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "p", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](1, "CUSTOM FONT DEMO");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](2, " ------------- ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](3, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](4, "Global Default Font");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](6, "HELLO WORLD \u6F22\u8A9E \u6C49\u8BED");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](8, "HELLO WORLD \u6F22\u8A9E \u6C49\u8BED");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](9, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](10, " ------------- ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "font-family: var(--CF1);");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](13, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](14, "HELLO WORLD \u6F22\u8A9E \u6C49\u8BED");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](15, " ------------- ");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](16, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](17, "font-family: var(--CF2);");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](18, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](19, "HELLO WORLD \u6F22\u8A9E \u6C49\u8BED");
        _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
    } }, dependencies: [_angular_material_button__WEBPACK_IMPORTED_MODULE_1__.MatButton], styles: ["[_nghost-%COMP%] {\n  display: block;\n  margin: 20px;\n}\n\n.title[_ngcontent-%COMP%] {\n  font-size: 40px;\n}\n\n.code[_ngcontent-%COMP%] {\n  margin-top: 20px;\n}\n\n.normal[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 40px;\n}\n\n.cf1[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-family: var(--CF1);\n}\n\n.cf2[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-family: var(--CF2);\n}\n\n.cf3[_ngcontent-%COMP%] {\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 40px;\n  font-family: var(--CF3);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvbnQtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQUE7RUFDQSxZQUFBO0FBQ0o7O0FBRUE7RUFDSSxlQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKOztBQUVBO0VBQ0ksZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGVBQUE7QUFDSjs7QUFFQTtFQUNJLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBRUEsdUJBQUE7QUFBSjs7QUFHQTtFQUNJLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBRUEsdUJBQUE7QUFESjs7QUFJQTtFQUNJLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0VBRUEsdUJBQUE7QUFGSiIsImZpbGUiOiJmb250LXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luOiAyMHB4O1xufVxuXG4udGl0bGUge1xuICAgIGZvbnQtc2l6ZTogNDBweDtcbn1cblxuLmNvZGUge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG59XG5cbi5ub3JtYWwge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IDQwcHg7XG59XG5cbi5jZjEge1xuICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICBmb250LXNpemU6IDQwcHg7XG5cbiAgICBmb250LWZhbWlseTogdmFyKC0tQ0YxKTtcbn1cblxuLmNmMiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICAgIGZvbnQtc2l6ZTogNDBweDtcblxuICAgIGZvbnQtZmFtaWx5OiB2YXIoLS1DRjIpO1xufVxuXG4uY2YzIHtcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgZm9udC1zaXplOiA0MHB4O1xuXG4gICAgZm9udC1mYW1pbHk6IHZhcigtLUNGMyk7XG59XG5cblxuIl19 */"] });


/***/ }),

/***/ 62536:
/*!*****************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/image-page/image-page.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ImagePageComponent": () => (/* binding */ ImagePageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ui/src/app/ui/components/img/img.component */ 29025);




class ImagePageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.imgUrl = "https://imgk.timesnownews.com/story/natural_healthy_correct_food_nutrition_junk_food_fast_food.jpg?tr=w-560,h-292,fo-top";
        this.content = this.context.ads[0];
        this.content2 = this.context.ads[1];
        this.content2.images = null;
    }
    ngOnInit() {
    }
}
ImagePageComponent.ɵfac = function ImagePageComponent_Factory(t) { return new (t || ImagePageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
ImagePageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: ImagePageComponent, selectors: [["app-image-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 14, vars: 19, consts: [[1, "m-4"], [1, "w-32", 3, "content", "ratio", "icon", "animate", "background"], [1, "w-32", 3, "content", "ratio", "icon", "animate", "fallback", "background"], [1, "w-96", "h-64", 3, "src", "type"]], template: function ImagePageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1, " Image DEMO\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](3, " Nomral Image: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](4, "app-img", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](6, " Fallback with name: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](7, "app-img", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](8, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](9, " Fallback with first letter: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](10, "app-img", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](11, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](12, " Img BG: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](13, "app-img", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("content", ctx.content)("ratio", 16 / 9)("icon", "image")("animate", true)("background", "#e4e4e4");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("content", ctx.content2)("ratio", 16 / 9)("icon", "image")("animate", true)("fallback", "name")("background", "#e4e4e4");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("content", ctx.content2)("ratio", 16 / 9)("icon", "image")("animate", true)("fallback", "prefix")("background", "#e4e4e4");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("src", ctx.imgUrl)("type", "background");
    } }, dependencies: [_ui_src_app_ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_1__.ImgComponent], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltYWdlLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoiaW1hZ2UtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */"] });


/***/ }),

/***/ 55968:
/*!*****************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/kiosk-page/kiosk-page.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "KioskPageComponent": () => (/* binding */ KioskPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/storage.service */ 24430);
/* harmony import */ var _aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/member-context-manager.service */ 67167);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../core/src/app/pure/services/pwa.service */ 50177);
/* harmony import */ var _miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../miniapp/src/app/miniapp/standard/services/bridge.service */ 46112);
/* harmony import */ var _native_src_app_native_services_native_platform_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../native/src/app/native/services/native-platform.service */ 83815);
/* harmony import */ var _core_src_app_framework_services_share_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../core/src/app/framework/services/share.service */ 67080);
/* harmony import */ var _native_src_app_native_services_native_container_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../native/src/app/native/services/native-container.service */ 70396);
/* harmony import */ var _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/nav-bar/nav-bar.component */ 84904);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/common */ 36362);















class KioskPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, storageService, memberContextManager, sub, pwaService, locationService, bridgeService, cd, nativePlatformService, shareService, nativeContainerService) {
        super(injector);
        this.injector = injector;
        this.storageService = storageService;
        this.memberContextManager = memberContextManager;
        this.sub = sub;
        this.pwaService = pwaService;
        this.locationService = locationService;
        this.bridgeService = bridgeService;
        this.cd = cd;
        this.nativePlatformService = nativePlatformService;
        this.shareService = shareService;
        this.nativeContainerService = nativeContainerService;
        this.navigator = navigator;
        this.haveServiceWorker = false;
        this.localUrl = window.location.href + "";
        //this assume alipay lib is already loaded
        // this.my2 = window['my'];
        this.haveServiceWorker = this.pwaService.haveServiceWorker();
        this.aigens = window['aigens'];
        this.channel = this.nativePlatformService.getChannel();
        this.native = this.nativePlatformService.isNative();
        this.nativePlatform = this.nativePlatformService.getNativePlatform();
    }
    ngOnInit() {
    }
    loadTestContext() {
        var storeId = 500;
        this.contextManager.loadContext(this.context.fields, { storeId: storeId }, true, (context) => {
        });
    }
    requestGps() {
        //this.invokeMethod("getLocation", []);
        this.locationService.getGps((pos) => {
            console.log("pos", pos);
            this.response = {
                latitude: pos.latitude,
                longitude: pos.longitude
            };
        });
    }
    requestQr() {
    }
    requestEcho() {
    }
    echo() {
        console.log("calling echo");
        var msg = {
            "HELLO": "WORLD",
            "value": "HELLOWORLD"
        };
        this.nativeContainerService.echo(msg).then((result) => {
            console.log("ECHO RESULT", result);
            this.response = result;
        });
    }
    goAppHome() {
        console.log("go app hoe");
        var url = "/app/home/brand/4806394001752064";
        this.router.navigate([url], { queryParams: {} });
    }
    testNetwork() {
        var url = "https://aigensstoretest.appspot.com/api/v1/status.json";
        this.dataService.getRaw(url, {}).subscribe((data) => {
            this.response = data;
        });
    }
    getSystemInfo() {
    }
    trackAnalytics() {
        console.log("trackAnalytics");
        this.analyticsService.trackSelectMode("byod");
    }
    finishApp() {
        this.routingService.finish();
    }
    exitApp() {
        this.routingService.exit();
    }
}
KioskPageComponent.ɵfac = function KioskPageComponent_Factory(t) { return new (t || KioskPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__.StorageService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__.MemberContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__.PwaService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.LocationService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_5__.BridgeService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_10__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_native_src_app_native_services_native_platform_service__WEBPACK_IMPORTED_MODULE_6__.NativePlatformService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_core_src_app_framework_services_share_service__WEBPACK_IMPORTED_MODULE_7__.ShareService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdirectiveInject"](_native_src_app_native_services_native_container_service__WEBPACK_IMPORTED_MODULE_8__.NativeContainerService)); };
KioskPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineComponent"]({ type: KioskPageComponent, selectors: [["app-kiosk-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵInheritDefinitionFeature"]], decls: 23, vars: 15, consts: [[3, "title", "back", "language", "user", "fullWidth"], [1, "items"], ["mat-raised-button", "", "color", "primary", 3, "click"]], template: function KioskPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelement"](0, "app-nav-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](1, "div", 1)(2, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](3, "Kiosk Test Page");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](4, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](6, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](8, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](10, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](12, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](14, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](15);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](16, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](17);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](18, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpipe"](20, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementStart"](21, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵlistener"]("click", function KioskPageComponent_Template_button_click_21_listener() { return ctx.echo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtext"](22, "Echo");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵproperty"]("title", "HELLO")("back", true)("language", true)("user", true)("fullWidth", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("URL: ", ctx.localUrl, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Version: ", ctx.aigens.version, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Agent: ", ctx.navigator == null ? null : ctx.navigator.userAgent, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("HAVE SERVICE WORKER: ", ctx.haveServiceWorker, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Native: ", ctx.native, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Channel: ", ctx.channel, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Current Lang: ", ctx.t.currentLang, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵtextInterpolate1"]("Response: ", _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵpipeBind1"](20, 13, ctx.response), "");
    } }, dependencies: [_ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_9__.NavBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_11__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_12__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImtpb3NrLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFBO0FBQ0YiLCJmaWxlIjoia2lvc2stcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4iXX0= */"] });


/***/ }),

/***/ 22010:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/layout-page/layout-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LayoutPageComponent": () => (/* binding */ LayoutPageComponent)
/* harmony export */ });
/* harmony import */ var _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/layouts/container-layout/container-layout.component */ 37073);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/form-field */ 44770);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/select */ 91434);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/core */ 88133);
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/slide-toggle */ 6623);










function LayoutPageComponent_mat_option_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "mat-option", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r6 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("value", option_r6);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](option_r6);
} }
function LayoutPageComponent_mat_option_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "mat-option", 22);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const option_r7 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("value", option_r7);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](option_r7);
} }
function LayoutPageComponent_div_36_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r8 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](n_r8);
} }
function LayoutPageComponent_span_43_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r9 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"]("", n_r9, ".");
} }
function LayoutPageComponent_div_44_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r10 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](n_r10);
} }
function LayoutPageComponent_div_51_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r11 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](n_r11);
} }
class LayoutPageComponent extends _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.numbers = Array(250).fill(0).map((x, i) => i);
        this.smalls = Array(100).fill(0).map((x, i) => i);
        this.empty = false;
        this.loading = false;
        this.over = false;
        this.layout = "default";
        this.sub = "order-default";
        this.mainOptions = ["default", "sticky"];
        this.subOptions = ["order-default", "order-sidecat", "order-kiosk"];
        console.log("LAYOUT PAGE CONSTRUCTOR");
        var l = this.navParams.get("layout");
        if (l) {
            this.layout = l;
        }
    }
    ngOnInit() {
    }
}
LayoutPageComponent.ɵfac = function LayoutPageComponent_Factory(t) { return new (t || LayoutPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
LayoutPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: LayoutPageComponent, selectors: [["app-layout-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 62, vars: 16, consts: [[3, "empty", "loading", "layout", "over", "subLayout"], ["nav", "", 1, "bg-blue-400", "h-16", "flex"], [1, "hidden", "desktop:block"], [1, "hidden", "tablet:block"], [1, "hidden", "mobile:block"], [3, "ngModel", "ngModelChange"], ["appearance", "fill"], [3, "value", 4, "ngFor", "ngForOf"], ["over", "", 1, "bg-red-600", "h-full"], ["notice", "", 1, "bg-green-900", "h-4"], ["nav2", "", 1, "bg-blue-700", "h-12"], ["header", "", 1, "bg-red-400", "h-32"], ["left", "", 1, "bg-green-400", "tall", "w-64"], [4, "ngFor", "ngForOf"], ["center", "", 1, "bg-yellow-400", "tall"], [1, "long"], ["action", "", 1, "bg-indigo-500", "h-16", "desktop:hidden"], ["right", "", 1, "bg-purple-400", "tall", "w-48"], ["footer", "", 1, "bg-pink-300", "h-16", "hidden", "desktop:block"], ["status", "", 1, "bg-red-500", "h-4", "hidden", "mobile:block"], ["empty", "", 1, "bg-red-500"], ["loading", "", 1, "bg-red-500"], [3, "value"]], template: function LayoutPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "app-container-layout", 0)(1, "div", 1)(2, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](3, " layout=nav ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "span", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](5, "DESKTOP");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](6, "span", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](7, "TABLET");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](8, "span", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](9, "MOBILE");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "mat-slide-toggle", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngModelChange", function LayoutPageComponent_Template_mat_slide_toggle_ngModelChange_10_listener($event) { return ctx.over = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](11, "OVER ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](12, "mat-slide-toggle", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngModelChange", function LayoutPageComponent_Template_mat_slide_toggle_ngModelChange_12_listener($event) { return ctx.empty = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](13, "EMPTY ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](14, "mat-slide-toggle", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngModelChange", function LayoutPageComponent_Template_mat_slide_toggle_ngModelChange_14_listener($event) { return ctx.loading = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](15, "LOADING ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "mat-form-field", 6)(17, "mat-label");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](18, "Layout");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](19, "mat-select", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngModelChange", function LayoutPageComponent_Template_mat_select_ngModelChange_19_listener($event) { return ctx.layout = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](20, LayoutPageComponent_mat_option_20_Template, 2, 2, "mat-option", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](21, "mat-form-field", 6)(22, "mat-label");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](23, "Sub Layout");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](24, "mat-select", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("ngModelChange", function LayoutPageComponent_Template_mat_select_ngModelChange_24_listener($event) { return ctx.sub = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](25, LayoutPageComponent_mat_option_25_Template, 2, 2, "mat-option", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](26, "div", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](27, " layout=over ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](28, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](29, " layout=notice ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](30, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](31, " layout=nav2 ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](32, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](33, " layout=header ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](34, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](35, " layout=left (DEFAULT DESKTOP ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](36, LayoutPageComponent_div_36_Template, 2, 1, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](37, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](38, "END");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](39, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](40, " layout=center ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](41, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](42, "LONG CONTENT");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](43, LayoutPageComponent_span_43_Template, 2, 1, "span", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](44, LayoutPageComponent_div_44_Template, 2, 1, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](45, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](46, "END");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](47, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](48, " layout=action (DEFAULT MOBILE, TABLET ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](49, "div", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](50, " layout=right (DEFAULT DESKTOP ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](51, LayoutPageComponent_div_51_Template, 2, 1, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](52, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](53, "END");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](54, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](55, " layout=footer (DEFAULT DESKTOP ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](56, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](57, " layout=status (DEFAULT MOBILE ONLY) ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](58, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](59, " EMPTY ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](60, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](61, " LOADING ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("empty", ctx.empty)("loading", ctx.loading)("layout", ctx.layout)("over", ctx.over)("subLayout", ctx.sub);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngModel", ctx.over);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngModel", ctx.empty);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngModel", ctx.loading);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngModel", ctx.layout);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.mainOptions);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngModel", ctx.sub);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.subOptions);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.smalls);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.numbers);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.numbers);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.smalls);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgForOf, _ux_src_app_ux_layouts_container_layout_container_layout_component__WEBPACK_IMPORTED_MODULE_1__.ContainerLayoutComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_4__.NgModel, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_5__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_5__.MatLabel, _angular_material_select__WEBPACK_IMPORTED_MODULE_6__.MatSelect, _angular_material_core__WEBPACK_IMPORTED_MODULE_7__.MatOption, _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_8__.MatSlideToggle], styles: [".tall[_ngcontent-%COMP%] {\n  width: 100%;\n}\n\n.long[_ngcontent-%COMP%] {\n  width: 2000px;\n  height: 200px;\n  background-color: cadetblue;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxheW91dC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtFQUNBLGFBQUE7RUFDQSwyQkFBQTtBQUNKIiwiZmlsZSI6ImxheW91dC1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhbGx7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbi5sb25ne1xuICAgIHdpZHRoOiAyMDAwcHg7XG4gICAgaGVpZ2h0OjIwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IGNhZGV0Ymx1ZTtcbn1cbiJdfQ== */"] });


/***/ }),

/***/ 54113:
/*!*********************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/miniapp-page/miniapp-page.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MiniappPageComponent": () => (/* binding */ MiniappPageComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/storage.service */ 24430);
/* harmony import */ var _aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/member-context-manager.service */ 67167);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../core/src/app/pure/services/pwa.service */ 50177);
/* harmony import */ var _miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../miniapp/src/app/miniapp/standard/services/bridge.service */ 46112);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/nav-bar/nav-bar.component */ 84904);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/button */ 87317);













function MiniappPageComponent_div_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "LOADING (2 seconds) OR NO ALIPAY MY OBJECT");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function MiniappPageComponent_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "MY OBJECT LOADED");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function MiniappPageComponent_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipe"](2, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" Order Charge: ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipeBind1"](2, 1, ctx_r2.orderResponse), " ");
} }
class MiniappPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, storageService, memberContextManager, sub, pwaService, locationService, bridgeService, cd) {
        super(injector);
        this.injector = injector;
        this.storageService = storageService;
        this.memberContextManager = memberContextManager;
        this.sub = sub;
        this.pwaService = pwaService;
        this.locationService = locationService;
        this.bridgeService = bridgeService;
        this.cd = cd;
        this.navigator = navigator;
        this.haveServiceWorker = false;
        this.aliApp = false;
        this.sampleOrderHK = {
            "orderitems": [
                {
                    "groups": [
                        {
                            "id": "500-IG1",
                            "items": [
                                {
                                    "quantity": 1,
                                    "id": "500-ITEM1"
                                }
                            ]
                        }
                    ],
                    "quantity": 1,
                    "category": {
                        "id": "500-CAT1"
                    }
                }
            ],
            "charge": {
                "method": "alipay",
                "sub": "mini",
                "id": "500-alipaymini",
                "gateway": "alipay-hk",
                "subject": "FoodItem",
                "body": "FoodItem"
            },
            "storeId": 500,
            "type": "takeaway",
            "session": "500",
            "deviceId": "TEST"
        };
        this.sampleOrderGCash = {
            "orderitems": [
                {
                    "groups": [
                        {
                            "id": "500-IG1",
                            "items": [
                                {
                                    "quantity": 1,
                                    "id": "500-ITEM1"
                                }
                            ]
                        }
                    ],
                    "quantity": 1,
                    "category": {
                        "id": "500-CAT1"
                    }
                }
            ],
            "charge": {
                "method": "gcash",
                "sub": "mini",
                "id": "500-gcash",
                "gateway": "gcash",
                "subject": "FoodItem",
                "body": "FoodItem"
            },
            "storeId": 500,
            "type": "takeaway",
            "session": "500",
            "deviceId": "TEST"
        };
        this.localUrl = window.location.href + "";
        //this assume alipay lib is already loaded
        // this.my2 = window['my'];
        this.haveServiceWorker = this.pwaService.haveServiceWorker();
        this.aliApp = this.platformService.isAliApp();
        this.aigens = window['aigens'];
        if (!this.aigens.store) {
            this.loadTestContext();
        }
    }
    ngOnInit() {
        setTimeout(() => {
            this.my2 = window['my'];
        }, 2000);
    }
    checkMyObject() {
        var current = window['my'];
        var same = current === this.my2;
        alert("my object same:" + same);
    }
    testMy() {
        alert("alipay loaded:" + window['alipayScriptStatus']);
        console.log("testMy my", this.my2, window['my']);
        alert(this.my2 + "||" + JSON.stringify(this.my2));
        //alert(window['my'] + "||" + JSON.stringify(window['my']));
        function writeObj(obj) {
            var description = "";
            for (var i in obj) {
                var property = obj[i];
                description += i + " = " + property + "\n";
            }
            alert(description);
        }
        writeObj(this.my2);
        writeObj(window['my']);
    }
    loadTestContext() {
        var storeId = 500;
        this.contextManager.loadContext(this.context.fields, { storeId: storeId }, true, (context) => {
        });
    }
    subscribeAlipayCnNotify() {
        return new Promise((resolve, reject) => {
            let alipayCnTemplateIds;
            try {
                this.bridgeService.invokeMethod("getAuthCode", [{ scopes: "auth_base" }], (res) => {
                    this.response = res;
                    alert(JSON.stringify(res));
                    console.log("getAuthCode auth_base:", res);
                    let authCode = res.authCode;
                    // this.orderManager.alipayCnAuthCode = authCode;
                    let temp = [];
                    // res?._notifications is put by miniapp
                    if (res === null || res === void 0 ? void 0 : res._notifications) {
                        for (let key in res._notifications) {
                            temp.push(res._notifications[key]);
                        }
                    }
                    alipayCnTemplateIds = [...new Set(temp)];
                    console.log("alipayCnTemplateIds", alipayCnTemplateIds);
                    if (alipayCnTemplateIds.length <= 0) {
                        console.log("cannot get alipayCnTemplateIds from miniapp initjson, use hardcode fallback templateIds");
                        alipayCnTemplateIds = ['20220317111511880610000400188576', '20220317111511880610000800186916', '20220317111511880610003100185034', '20220317111511880610008800183417'];
                    }
                    alert(`authCode: ${authCode} | alipayCnTemplateIds: ${alipayCnTemplateIds} | appId: ${this.platformService.getAlipayAppId()}`);
                    // subscribe-msg-svelte dist js contains es2020 feature optional-chaining, comment out for now
                    /* const subscribeMsg = new SubscribeMsg({
                        target: document.body,
                        props: {
                            appId: this.platformService.getAlipayAppId(),
                            authCode: authCode,
                            templateIds: alipayCnTemplateIds,
                            callback: (res) => {
                                console.log("Alipay-cn miniapp subscribeMsg callback", res);
                                alert(JSON.stringify(res));
                                if (res && res.success == true && res.type == "AGREE") {
                                    console.log("Alipay-cn miniapp subscribeMsg OK");

                                    // this.orderManager.alipayCnNotify = true;

                                } else {
                                    resolve(res);
                                    // this.orderManager.alipayCnNotify = false;
                                }
                                // this.orderManager.alipayCnAuthCode = null;
                                resolve(res);
                            },
                        }
                    });
                    subscribeMsg.requestSubscribeMessage(); */
                }, 10000);
            }
            catch (error) {
                alert(JSON.stringify(error));
                resolve(null);
            }
        });
    }
    requestSubscribeMsg() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__awaiter)(this, void 0, void 0, function* () {
            let resu = yield this.subscribeAlipayCnNotify();
        });
    }
    requestGps() {
        //this.invokeMethod("getLocation", []);
        this.locationService.getGps((pos) => {
            console.log("pos", pos);
        });
    }
    requestQr() {
        this.invokeMethod("scanCode", []);
    }
    requestEcho() {
        var request = ["HELLO", "WORLD"];
        this.invokeMethod("echo", request);
    }
    goMinihome() {
        console.log("go miniapp");
        this.router.navigate(['/miniapp/home/brand/800001'], { queryParams: {} });
    }
    shareMiniMessage() {
        this.invokeMethod("share", [{
                title: 'title-share https://mobile.order.place/s/n4wGMg',
                desc: 'title-desc https://mobile.order.place/s/n4wGMg',
            }]);
    }
    shareMiniMessage2() {
        this.invokeMethod("share", [{
                title: 'title-title, this is title!',
                desc: 'desc, this is desc',
            }]);
    }
    getSystemInfo() {
        this.invokeMethod("getSystemInfo", []);
    }
    getMemberMini() {
        this.invokeMethod("getMember", []);
    }
    requestAuthCode() {
        this.invokeMethod("getAuthCode", []);
    }
    requestUserInfo() {
        this.invokeMethod("getOpenUserInfo", []);
    }
    requestTradePay() {
        //this.invokeMethod("tradePay", []);
        var url = "https://aigensstoretest.appspot.com/api/v1/menu/order.json";
        this.dataService.postWithBody(url, this.sampleOrderGCash).subscribe(res => {
            this.dialogService.superloading(false);
            console.log("res", res);
            this.orderResponse = res.charge;
            this.doPay(res);
        }, err => {
            this.dialogService.superloading(false);
            this.dialogService.showError(err);
        });
    }
    doPay(res) {
        var purl = res.charge.paymentUrl;
        var params = {
            //orderStr: purl
            paymentUrl: purl
        };
        this.invokeMethod("tradePay", [params]);
    }
    goOrder() {
        console.log("go order");
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: {} });
    }
    invokeMethod(method, params) {
        this.bridgeService.invokeMethod(method, params, (res) => {
            this.response = res;
            alert(JSON.stringify(res));
        }, 10000);
        /*
        var message = {
            api: "alipay",
            method: method,
            params: params,
            url: window.location.href,
            response: null
        };



        console.log("sending message", message);

        //console.log(this.my2);

        this.request = message;
        this.response = null;

        //do we need to Stringify this?

        var my = window['my'];


        try{

            my.postMessage(message);

        }catch(e){
            alert("error:" + e);
        }



        //this.my2.postMessage(message);

        //this.my2.postMessage("HELLO");
        */
    }
    invokeNative() {
        var my = window['my'];
        if (!my) {
            alert("NO MY");
            return;
        }
        console.log(my);
        alert("call my.getEnv next");
        try {
            my.getEnv(function (res) {
                alert(JSON.stringify(res));
                console.log(res.miniprogram); // true
            });
        }
        catch (e) {
            alert("error:" + e);
        }
        //alert("call my.getEnv done");
    }
}
MiniappPageComponent.ɵfac = function MiniappPageComponent_Factory(t) { return new (t || MiniappPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_1__.StorageService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_2__.MemberContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_3__.SubscribeService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_4__.PwaService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](aigens_framework__WEBPACK_IMPORTED_MODULE_0__.LocationService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_miniapp_src_app_miniapp_standard_services_bridge_service__WEBPACK_IMPORTED_MODULE_5__.BridgeService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__.ChangeDetectorRef)); };
MiniappPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: MiniappPageComponent, selectors: [["app-miniapp-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]], decls: 55, vars: 19, consts: [[3, "title", "back", "language", "user", "fullWidth"], [1, "items"], ["mat-raised-button", "", "color", "primary", 3, "click"], ["class", "text-red-500", 4, "ngIf"], ["class", "text-green-500", 4, "ngIf"], [4, "ngIf"], ["href", "https://appx/web-view.min.js", 1, "text-red-400"], [1, "text-red-500"], [1, "text-green-500"]], template: function MiniappPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](0, "app-nav-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 1)(2, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](3, "MINIAPP Integration Test Page3");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_4_listener() { return ctx.testMy(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](5, "check my object2");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](10, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](12, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](14, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](15);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](16, MiniappPageComponent_div_16_Template, 2, 0, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](17, MiniappPageComponent_div_17_Template, 2, 0, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](18, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipe"](20, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](21, MiniappPageComponent_div_21_Template, 3, 3, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](22, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipe"](24, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](25, "a", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](26, "Click to View APPX script");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](27, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_27_listener() { return ctx.requestSubscribeMsg(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](28, "SubscribeMsg AlipayCN");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](29, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_29_listener() { return ctx.requestEcho(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](30, "Do Echo");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](31, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_31_listener() { return ctx.requestGps(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](32, "Do GPS");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](33, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_33_listener() { return ctx.requestQr(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](34, "Do Scan QR");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](35, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_35_listener() { return ctx.checkMyObject(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](36, "CheckMyObject");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](37, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_37_listener() { return ctx.invokeNative(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](38, "Invoke Native");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](39, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_39_listener() { return ctx.requestAuthCode(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](40, "Do getAuthCode");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](41, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_41_listener() { return ctx.requestUserInfo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](42, "Do User Info");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](43, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_43_listener() { return ctx.requestTradePay(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](44, "Do Pay (GCASH)");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](45, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_45_listener() { return ctx.goMinihome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](46, "Go Mini App Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](47, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_47_listener() { return ctx.shareMiniMessage(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](48, "Share Miniapp message");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](49, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_49_listener() { return ctx.shareMiniMessage2(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](50, "Share Miniapp message without URL");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](51, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_51_listener() { return ctx.getSystemInfo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](52, "Get getSystemInfo");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](53, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MiniappPageComponent_Template_button_click_53_listener() { return ctx.getMemberMini(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](54, "Get Mini App Member");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("title", "HELLO")("back", true)("language", true)("user", true)("fullWidth", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("URL: ", ctx.localUrl, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("Version: ", ctx.aigens.version, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("Agent: ", ctx.navigator == null ? null : ctx.navigator.userAgent, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("HAVE SERVICE WORKER: ", ctx.haveServiceWorker, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("ALIAPP: ", ctx.aliApp, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", !ctx.my2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.my2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" Request: ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipeBind1"](20, 15, ctx.bridgeService.lastRequest), " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.orderResponse);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" Response: ", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpipeBind1"](24, 17, ctx.bridgeService.lastResponse), " ");
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_6__.NavBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_10__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_9__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.items[_ngcontent-%COMP%] {\n  display: block;\n}\n\n.items[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\n  margin: 10px;\n  padding: 10px;\n}\n\n.items[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n\n.items[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pbmlhcHAtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRjs7QUFFQTtFQUVJLGNBQUE7QUFBSjs7QUFHSTtFQUNJLFlBQUE7RUFDQSxhQUFBO0FBRFI7O0FBSUk7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFGUjs7QUFLSTtFQUNJLGNBQUE7RUFDQSxZQUFBO0VBQ0EsYUFBQTtBQUhSIiwiZmlsZSI6Im1pbmlhcHAtcGFnZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5pdGVtc3tcblxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC8vbWFyZ2luOiAxMHB4O1xuXG4gICAgZGl2e1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgfVxuXG4gICAgYnV0dG9ue1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAxMHB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgIH1cblxuICAgIGF7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgfVxuXG59Il19 */"] });


/***/ }),

/***/ 7694:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/module-page/module-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ModulePageComponent": () => (/* binding */ ModulePageComponent)
/* harmony export */ });
/* harmony import */ var aigens_data__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-data */ 51707);
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var angularx_qrcode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! angularx-qrcode */ 49876);
/* harmony import */ var _ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/sub-bar/sub-bar.component */ 61204);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/icon */ 65590);
/* harmony import */ var _ui_src_app_heavy_ui_animation_animation_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../ui/src/app/heavy-ui/animation/animation.component */ 19944);
/* harmony import */ var _auth_src_app_auth_oauth_components_accor_login_button_accor_login_button_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../auth/src/app/auth/oauth/components/accor-login-button/accor-login-button.component */ 90978);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @ngx-translate/core */ 33935);












class ModulePageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_1__.BasePage {
    //constructor(private router: Router, @Inject(APP_BASE_HREF) public baseHref:string) {
    constructor(injector, memberContext) {
        super(injector);
        this.injector = injector;
        this.memberContext = memberContext;
        this.demoUrl = "https://scantest.aigens.com/scan?code=c3RvcmU9NTY2OTEwODYyODU4NjQ5NiZtb2RlPXRha2Vhd2F5JnBhZ2U9YnlvZA==";
        this.contextFields = ["form", "config", "ads", "featuredItems"];
        this.selfUrl = window.location.href;
    }
    ngOnInit() {
        console.log("Module Test Loaded");
    }
    backed() {
        console.log("custom back clicked");
    }
    goOrderSplash() {
        console.log("go order splash");
        this.router.navigate(['/store/500/mode/takeaway'], { queryParams: {} });
    }
    goSearch() {
        var url = "/test/search/store/500";
        this.router.navigate([url], { queryParams: {} });
    }
    goABTest() {
        var url = "/test/abtest/store/500";
        this.router.navigate([url], { queryParams: {} });
    }
    goOrder() {
        console.log("go order");
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: { back: true } });
    }
    goOrder2() {
        console.log("go order");
        this.contextManager.loadContext(this.contextFields, { storeId: 5764191071764480 }, true, (context) => {
            this.router.navigate(['/order/store/5764191071764480/mode/takeaway'], { queryParams: { back: true } });
        });
    }
    goAccess() {
        console.log("go access");
        this.contextManager.loadContext(this.contextFields, { storeId: 5110904641290240 }, true, (context) => {
            this.router.navigate(['/test/access/store/5110904641290240'], { queryParams: { back: true, network: "cn" } });
        });
    }
    goDialog2() {
        //this.routingService.navigateModal('order/dialog/test');
        var agreement = new aigens_data__WEBPACK_IMPORTED_MODULE_0__.Agreement();
        agreement.title = "CONTENT NAME";
        this.routingService.navigateModal('directory/agreement', { agreement: agreement });
    }
    goDialog() {
        console.log("go dialog");
        var url = "test/dialog/aux1";
        var url2 = "test/dialog/aux2";
        var input = {
            p1: "V1",
            p2: "V2"
        };
        //optionally aux dialog size options in options.state
        var options = {
            autoClose: false,
            state: {
                minWidth: "700px",
                minHeight: "700px",
                height: "700px"
            }
        };
        this.dialogService.openAux(url, input, options, (result) => {
            this.dialogService.showToast(JSON.stringify(result));
            this.dialogService.openAux(url2, {}, {}, (r2) => {
                this.dialogService.showToast(JSON.stringify(r2));
            });
        });
    }
    goLayout() {
        console.log("go layout");
        this.router.navigate(['/test/layout'], { queryParams: {} });
    }
    goLayout2() {
        console.log("go layout2");
        this.router.navigate(['/test/layout2'], { queryParams: {} });
    }
    goSetting() {
        console.log("go setting");
        this.router.navigate(['/test/setting/store/5669108628586496'], { queryParams: {} });
    }
    goImage() {
        console.log("go image");
        this.router.navigate(['/test/image'], { queryParams: {} });
    }
    goTheme() {
        console.log("go theme");
        this.contextManager.loadContext(this.contextFields, { storeId: 500 }, true, (context) => {
            this.router.navigate(['/test/theme/store/500'], { queryParams: { back: true } });
        });
    }
    goFont() {
        console.log("go font");
        this.router.navigate(['/test/font/store/500'], { queryParams: {} });
    }
    goDeeplink() {
        this.router.navigate(['/test/deeplink/store/500'], { queryParams: {} });
    }
    goSwiper() {
        console.log("go swiper");
        this.router.navigate(['/test/swiper'], { queryParams: {} });
    }
    goKiosk() {
        console.log("go kiosk");
        this.router.navigate(['/kiosk/store/500/welcome'], { queryParams: { stationId: "500" } });
    }
    goMerchant() {
        console.log("go merchant");
        this.router.navigate(['/merchant/tables'], { queryParams: { stationId: "500" } });
    }
    goPwa1() {
        console.log("go pwa");
        this.router.navigate(['/test/pwa/brand/100058'], { queryParams: {} });
    }
    goPwa2() {
        console.log("go pwa");
        this.router.navigate(['/test/pwa/brand/100060'], { queryParams: {} });
    }
    goAppTest() {
        console.log("go app test");
        this.router.navigate(['/app/test/app/store/500'], { queryParams: {} });
    }
    goAppHome() {
        console.log("go app");
        window.open('/app/home/brand/800001', '_blank');
    }
    goMiniTest() {
        console.log("go miniapp");
        this.router.navigate(['/miniapp/test/miniapp/store/500'], { queryParams: {} });
    }
    goMiniHome() {
        console.log("go miniapp");
        /*
        this.contextManager.loadContext(this.context.fields, {brandId: 800001}, true, (context)=>{

            this.router.navigate(['/miniapp/home/brand/800001'], { queryParams: {} });
        });
        */
        window.open('/miniapp/home/brand/800001', '_blank');
    }
    goMiniPromo() {
        window.open('/miniapp/promotion/brand/500', '_blank');
    }
    //http://localhost:4200/home/store/5106140599812096?mode=web
    goGiftcard() {
        console.log("go giftcard");
        //RR
        var storeId = 5106140599812096;
        //Starbucks
        storeId = 5727234239234048;
        this.contextManager.loadContext(this.contextFields, { storeId: storeId }, true, (context) => {
            this.router.navigate(['/home/store/' + storeId], { queryParams: { mode: "web" } });
        });
    }
    goHome() {
        console.log("go home");
        this.router.navigate(['/home/brand/500'], { queryParams: {} });
    }
    goStoreHome() {
        console.log("go store home");
        this.router.navigate(['/home/store/500'], { queryParams: { mode: 'byod', spot: '12A', key: 'ABCD' } });
    }
    goGroupHome() {
        console.log("go group");
        this.router.navigate(['/home/group/500'], { queryParams: {} });
    }
    goCourt() {
        console.log("go court home");
        this.router.navigate(['/home/court/500'], { queryParams: {} });
    }
    goCourtOrder() {
        console.log("go court order");
        this.router.navigate(['/order/store/500/mode/takeaway'], { queryParams: { courtId: 500 } });
    }
    goDisplay() {
        console.log("go display");
        this.router.navigate(['/display/store/500/pickup'], { queryParams: {} });
    }
    goSignage() {
        console.log("go signage");
        this.router.navigate(['/display/store/500/signage/500/screen/500-0'], { queryParams: {} });
    }
    goDirectory() {
        console.log("go directory");
        //this.router.navigate(['/directory/brand/500'], { queryParams: {} });
        //this.router.navigate([{outlets: { modal: 'directory/dialog'}}]);
        this.routingService.navigateModal('directory/brand/500');
    }
    goSide() {
        console.log("go side");
        this.routingService.navigateSideMenu();
    }
    goQueue() {
        console.log("go queue");
        this.router.navigate(['/queue/store/500'], { queryParams: {} });
    }
    goCrm() {
        console.log("go crm");
        this.router.navigate(['/crm/brand/500/welcome'], { queryParams: {} });
        //http://localhost:8100/crm/brand/5767845736611840/home
    }
    goCrmLogin() {
        //this.router.navigate([{outlets: { modal: 'crm/brand/500/login'}}]);
        this.routingService.navigateModal('crm/brand/500/login');
    }
    goAccor() {
        //this.router.navigate(['/accor/home/group/843270012'], { queryParams: {} });
        this.contextManager.loadContext(this.contextFields, { groupId: 843270012 }, true, (context) => {
            this.router.navigate(['/accor/home/group/843270012'], { queryParams: {} });
        });
    }
    goChannels() {
        //this.router.navigate(['/assist/store/200004/channels'], { queryParams: {} });
        window.open('/assist/store/200004/channels', '_blank');
    }
    goFingerprint() {
        this.router.navigate(['/test/fingerprint/store/500'], { queryParams: {} });
    }
    goAnimatedTabbar() {
        this.router.navigate(['/test/animation-tabbar/store/500'], { queryParams: {} });
    }
    printContext() {
        console.log(this.context);
    }
    doTest() {
        var url = '/test/adhoc/store/500';
        console.log(url);
        this.router.navigate([url], { queryParams: {} });
    }
    /*openPaymentManualVerificationDialog() {
        console.log("go PaymentManualVerificationDialog");


        var url = "test/dialog/payment-manual-verification";

        var input = {
            p1: "V1",
            p2: "V2",
            alipayVerifyUrl: 'https://apitest.orderplace.cn/api/v1/pay/verify.json?payment=Payment-800001-adyen-express-adyen&chargeId=b6e72584-207e-470d-85d2-7a8113bc8a5c&shouldRedirect=false'

        };

        //optionally aux dialog size options in options.state
        var options = {
            autoClose: true,
            queryParams: {
                disableClose: true
            }
        };

        this.dialogService.openAux(url, input, options, (result) => {

            this.dialogService.showToast(JSON.stringify(result));

            if (result?.verify) {
                let order = null;
                this.goOrderDetails(order);
            }

        });

    }*/
    goOrderDetails(order) {
        // var path = `/order/store/${order.storeId}/order/${order.id}`;
        var path = `/order/store/80039/order/ed693686-8fe1-403a-8487-376f6dc536c2`;
        this.router.navigate([path], {
        // queryParams: { back: true },
        });
    }
    testGA() {
        this.analyticsService.trackSelectMode("abcd");
    }
    goQRScanner() {
        const path = 'directory/qr-code-scanner';
        this.dialogService.openAux(path, { submitRegex: /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,4}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g }, {}, (result) => {
            console.log(result);
            alert(result.result);
        });
    }
}
ModulePageComponent.ɵfac = function ModulePageComponent_Factory(t) { return new (t || ModulePageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](aigens_framework__WEBPACK_IMPORTED_MODULE_1__.MemberContext)); };
ModulePageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({ type: ModulePageComponent, selectors: [["app-module-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"]], decls: 106, vars: 14, consts: [[3, "backed"], [1, "theme"], [1, "items"], [1, "text"], [3, "qrdata", "width", "errorCorrectionLevel"], [1, "py-2", "px-4", "border", "border-transparent", "shadow-sm", "text-sm", "font-medium", "rounded-md", "text-white", "bg-red-400"], ["mat-button", ""], [1, "custom-font"], ["mat-raised-button", "", "color", "primary", 3, "click"], ["mat-raised-button", "", "color", "primary", "href", "https://stdv4test.order.place/test/module/store/500", "target", "_blank"], ["href", "https://test.order.place/test/module/store/500", "target", "_blank"], ["src", "assets/lottie/walk_bubbletea.json", "fallbackImgSrc", "assets/images/earn-pt-icon1.png", 3, "height", "width"]], template: function ModulePageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](0, "app-sub-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("backed", function ModulePageComponent_Template_app_sub_bar_backed_0_listener() { return ctx.backed(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](1, "div", 1)(2, "div", 2)(3, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](4, " This is a module test page to demo seamless page transition. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](5, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](6, " UAT QR: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](7, "qrcode", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](8, "div")(9, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](11, "translate");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](12, "button", 6)(13, "mat-icon");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](14, "language");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](15, " English ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](16, "mat-icon");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](17, "arrow_drop_down");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](18, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipe"](20, "translate");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](21, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_21_listener() { return ctx.goSearch(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](22, "Go Search");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](23, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_23_listener() { return ctx.goGroupHome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](24, "Go Dynamic Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](25, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_25_listener() { return ctx.goABTest(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](26, "Go ABTEST");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](27, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_27_listener() { return ctx.goLayout(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](28, "Go Layout");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](29, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_29_listener() { return ctx.goLayout2(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](30, "Go Layout2");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](31, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_31_listener() { return ctx.goImage(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](32, "Go Image");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](33, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_33_listener() { return ctx.goTheme(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](34, "Go Theme");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](35, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_35_listener() { return ctx.goFont(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](36, "Go Font");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](37, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_37_listener() { return ctx.goDeeplink(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](38, "Go DeepLink");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](39, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_39_listener() { return ctx.goAccess(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](40, "Go China Network Test");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](41, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_41_listener() { return ctx.testGA(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](42, "Test GA");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](43, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_43_listener() { return ctx.goOrder(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](44, "Go Order");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](45, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_45_listener() { return ctx.goOrder2(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](46, "Go Order 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](47, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_47_listener() { return ctx.goDialog(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](48, "Go AUX Dialog");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](49, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_49_listener() { return ctx.goAppHome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](50, "Go App Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](51, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_51_listener() { return ctx.goAppTest(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](52, "Go App Test");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](53, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_53_listener() { return ctx.goMiniHome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](54, "Go Mini App Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](55, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_55_listener() { return ctx.goMiniTest(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](56, "Go Mini App Test");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](57, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_57_listener() { return ctx.goMiniPromo(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](58, "Go Mini App Promotion");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](59, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_59_listener() { return ctx.goAccor(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](60, "Go Custom Accor");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](61, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_61_listener() { return ctx.goGiftcard(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](62, "Go Giftcard (Starbucks)");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](63, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_63_listener() { return ctx.goHome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](64, "Go Brand Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](65, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_65_listener() { return ctx.goStoreHome(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](66, "Go BYOD (Store) Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](67, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_67_listener() { return ctx.goCourt(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](68, "Go Court Home");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](69, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_69_listener() { return ctx.goCourtOrder(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](70, "Go Order Court");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](71, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_71_listener() { return ctx.goChannels(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](72, "Go Assist Channels");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](73, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_73_listener() { return ctx.goQueue(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](74, "Go Queue");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](75, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_75_listener() { return ctx.goSetting(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](76, "Settings Demo");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](77, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_77_listener() { return ctx.goCrm(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](78, "Go Crm");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](79, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_79_listener() { return ctx.goCrmLogin(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](80, "Go Crm Login Popup");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](81, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_81_listener() { return ctx.goPwa1(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](82, "PWA Test 1");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](83, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_83_listener() { return ctx.goPwa2(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](84, "PWA Test 2");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](85, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_85_listener() { return ctx.goQRScanner(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](86, "QR Scanner");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](87, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_87_listener() { return ctx.doTest(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](88, "Test Page");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](89, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_89_listener() { return ctx.goFingerprint(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](90, "Fingerprint Page");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](91, "button", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵlistener"]("click", function ModulePageComponent_Template_button_click_91_listener() { return ctx.goAnimatedTabbar(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](92, "Animated Tabbar Page");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](93, "a", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](94, "Go stdv4test.order.place");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](95, "div")(96, "a", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](97, "Go test.order.place");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](98, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](99, " Open Chrome Apps chrome://apps ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](100, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtext"](101, " Mobile QR: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](102, "qrcode", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementStart"](103, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](104, "app-animation", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelement"](105, "app-accor-login-button");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("qrdata", ctx.demoUrl)("width", 128)("errorCorrectionLevel", "M");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](11, 10, "buttons.ok"));
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵtextInterpolate1"](" Dynamic Translate: ", _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵpipeBind1"](20, 12, "pages.store-list.greetings"), " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](83);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("qrdata", ctx.selfUrl)("width", 128)("errorCorrectionLevel", "M");
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵproperty"]("height", 300)("width", 300);
    } }, dependencies: [angularx_qrcode__WEBPACK_IMPORTED_MODULE_6__.QRCodeComponent, _ux_src_app_ux_components_sub_bar_sub_bar_component__WEBPACK_IMPORTED_MODULE_2__.SubBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButton, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatAnchor, _angular_material_icon__WEBPACK_IMPORTED_MODULE_8__.MatIcon, _ui_src_app_heavy_ui_animation_animation_component__WEBPACK_IMPORTED_MODULE_3__.AnimationComponent, _auth_src_app_auth_oauth_components_accor_login_button_accor_login_button_component__WEBPACK_IMPORTED_MODULE_4__.AccorLoginButtonComponent, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__.TranslatePipe], styles: ["[_nghost-%COMP%] {\n  height: 100%;\n}\n\n.items[_ngcontent-%COMP%] {\n  display: block;\n}\n\n.items[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n\n.items[_ngcontent-%COMP%]   a[_ngcontent-%COMP%] {\n  display: block;\n  margin: 10px;\n  padding: 10px;\n}\n\n.custom-font[_ngcontent-%COMP%] {\n  color: red;\n  font-family: \"FlameSans\";\n}\n\n.theme[_ngcontent-%COMP%] {\n  height: 100%;\n}\n\n.text[_ngcontent-%COMP%] {\n  background-color: var(--P400);\n  color: var(--PC400);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtBQUNKOztBQUVBO0VBRUksY0FBQTtBQUFKOztBQUdJO0VBQ0ksY0FBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0FBRFI7O0FBSUk7RUFDSSxjQUFBO0VBQ0EsWUFBQTtFQUNBLGFBQUE7QUFGUjs7QUFPQTtFQUNJLFVBQUE7RUFDQSx3QkFBQTtBQUpKOztBQU9BO0VBR0ksWUFBQTtBQU5KOztBQVNBO0VBQ0ksNkJBQUE7RUFDQSxtQkFBQTtBQU5KOztBQVVBOzs7O0NBQUEiLCJmaWxlIjoibW9kdWxlLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdHtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5pdGVtc3tcblxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIC8vbWFyZ2luOiAxMHB4O1xuXG4gICAgYnV0dG9ue1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgbWFyZ2luOiAxMHB4O1xuICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgIH1cblxuICAgIGF7XG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgICBtYXJnaW46IDEwcHg7XG4gICAgICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgfVxuXG59XG5cbi5jdXN0b20tZm9udHtcbiAgICBjb2xvcjogcmVkO1xuICAgIGZvbnQtZmFtaWx5OiAnRmxhbWVTYW5zJztcbn1cblxuLnRoZW1le1xuXG5cbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi50ZXh0e1xuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLVA0MDApO1xuICAgIGNvbG9yOiB2YXIoLS1QQzQwMCk7XG5cbn1cblxuLypcbmJ1dHRvbntcbiAgICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcbn1cbiovXG4iXX0= */"] });


/***/ }),

/***/ 70803:
/*!*************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/pwa-page/pwa-page.component.ts ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "PwaPageComponent": () => (/* binding */ PwaPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/pwa.service */ 50177);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);





function PwaPageComponent_div_0_Template(rf, ctx) { if (rf & 1) {
    const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 1)(1, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](3, "img", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "button", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function PwaPageComponent_div_0_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵrestoreView"](_r2); const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"](); return _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵresetView"](ctx_r1.addHome()); });
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](5, "ADD HOME PAGE");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](ctx_r0.brand.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpropertyInterpolate"]("src", ctx_r0.brand.images.logo.url, _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsanitizeUrl"]);
} }
class PwaPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, pwaService) {
        super(injector);
        this.injector = injector;
        this.pwaService = pwaService;
        this.inited = false;
    }
    ngOnInit() {
        this.autoContext();
    }
    init() {
        this.inited = true;
        this.brand = this.context.brand;
        this.pwaService.setWebManifest();
    }
    addHome() {
        this.pwaService.promptHome();
    }
}
PwaPageComponent.ɵfac = function PwaPageComponent_Factory(t) { return new (t || PwaPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_pwa_service__WEBPACK_IMPORTED_MODULE_1__.PwaService)); };
PwaPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: PwaPageComponent, selectors: [["app-pwa-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 1, vars: 1, consts: [["class", "top", 4, "ngIf"], [1, "top"], [3, "src"], [3, "click"]], template: function PwaPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](0, PwaPageComponent_div_0_Template, 6, 2, "div", 0);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.inited);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgIf], styles: [".top[_ngcontent-%COMP%] {\n  height: 100%;\n  background-color: var(--P);\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB3YS1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBQTtFQUNBLDBCQUFBO0FBQ0oiLCJmaWxlIjoicHdhLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudG9we1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1QKTtcbn0iXX0= */"] });


/***/ }),

/***/ 95164:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/search-page/search-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SearchPageComponent": () => (/* binding */ SearchPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _meilisearch_instant_meilisearch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @meilisearch/instant-meilisearch */ 61824);
/* harmony import */ var _meilisearch_instant_meilisearch__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_meilisearch_instant_meilisearch__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




class SearchPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    //indexName: string = "steam-video-games";
    //ref: https://github.com/meilisearch/instant-meilisearch
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.searchClient = (0,_meilisearch_instant_meilisearch__WEBPACK_IMPORTED_MODULE_1__.instantMeiliSearch)('https://searchtest.aigens.com/', // Host
        '6764009646a9b7b9498369a19f208f801496d99241dce3908f91dabdcc98d397', // API key,
        {
            finitePagination: true
        });
        this.indexName = "brand";
    }
    ngOnInit() {
        /*
        var searchClient = instantMeiliSearch(
            "https://ms-adf78ae33284-106.lon.meilisearch.io/",
            "a63da4928426f12639e19d62886f621130f3fa9ff3c7534c5d179f0f51c4f303",
            {
                finitePagination: true
            }
        );*/
        const search = instantsearch({
            indexName: this.indexName,
            searchClient: this.searchClient
        });
        this.config = search;
        search.addWidgets([
            instantsearch.widgets.searchBox({
                container: "#searchbox"
            }),
            instantsearch.widgets.clearRefinements({
                container: "#clear-refinements"
            }),
            instantsearch.widgets.refinementList({
                container: "#published-list",
                attribute: "published"
            }),
            instantsearch.widgets.refinementList({
                container: "#features-list",
                attribute: "feature"
            }),
            instantsearch.widgets.refinementList({
                container: "#modes-list",
                attribute: "modes"
            }),
            instantsearch.widgets.refinementList({
                container: "#country-list",
                attribute: "country"
            }),
            /*
            instantsearch.widgets.refinementList({
                container: "#genres-list",
                attribute: "genres"
            }),
            instantsearch.widgets.refinementList({
                container: "#players-list",
                attribute: "players"
            }),
            instantsearch.widgets.refinementList({
                container: "#platforms-list",
                attribute: "platforms"
            }),
            */
            instantsearch.widgets.configure({
                hitsPerPage: 12,
                snippetEllipsisText: "...",
                attributesToSnippet: ["description:50"],
                filters: "published=true"
            }),
            /*
            instantsearch.widgets.refinementList({
                container: "#misc-list",
                attribute: "misc"
            }),
            */
            instantsearch.widgets.hits({
                container: "#hits",
                templates: {
                    item: `
                  <div>
                    <div class="hit-name">
                      name: {{name}}
                    </div>
                    <img src="{{image}}" align="left" />
                    <div class="hit-description">
                      {{#helpers.snippet}}{ "attribute": "description" }{{/helpers.snippet}}
                    </div>
                    <div class="hit-info">country: {{countryCode}}</div>
                    <div class="hit-info">features: {{feature}}</div>
                  </div>
                `
                }
            }),
            instantsearch.widgets.pagination({
                container: "#pagination"
            })
        ]);
        search.start();
    }
}
SearchPageComponent.ɵfac = function SearchPageComponent_Factory(t) { return new (t || SearchPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
SearchPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: SearchPageComponent, selectors: [["app-search-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 23, vars: 0, consts: [[1, "ais-InstantSearch"], [1, "left-panel"], ["id", "clear-refinements"], ["id", "published-list"], ["id", "features-list"], ["id", "modes-list"], ["id", "country-list"], [1, "right-panel"], ["id", "searchbox", 1, "ais-SearchBox"], ["id", "hits"], ["id", "pagination"]], template: function SearchPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0)(1, "h1");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2, "MeiliSearch + InstantSearch.js");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](4, " Demo to search Aigens content. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](6, "div", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "h2");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](8, "Published");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](9, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](10, "h2");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](11, "Features");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](12, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](13, "h2");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](14, "Modes");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](15, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "h2");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](17, "Country");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](18, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](19, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](20, "div", 8)(21, "div", 9)(22, "div", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
    } }, styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.ais-ClearRefinements[_ngcontent-%COMP%] {\n  margin: 1em 0;\n}\n\n.ais-SearchBox[_ngcontent-%COMP%] {\n  margin: 1em 0;\n}\n\n.ais-Pagination[_ngcontent-%COMP%] {\n  margin-top: 1em;\n}\n\n.left-panel[_ngcontent-%COMP%] {\n  float: left;\n  width: 200px;\n}\n\n.right-panel[_ngcontent-%COMP%] {\n  margin-left: 210px;\n}\n\n.ais-InstantSearch[_ngcontent-%COMP%] {\n  max-width: 960px;\n  overflow: hidden;\n  margin: 0 auto;\n}\n\n.ais-Hits-item[_ngcontent-%COMP%] {\n  margin-bottom: 1em;\n  width: calc(50% - 1rem);\n}\n\n.ais-Hits-item[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\n  margin-right: 1em;\n  width: 100%;\n  height: 100%;\n  margin-bottom: 0.5em;\n}\n\n.hit-name[_ngcontent-%COMP%] {\n  margin-bottom: 0.5em;\n}\n\n.hit-description[_ngcontent-%COMP%] {\n  font-size: 90%;\n  margin-bottom: 0.5em;\n  color: grey;\n}\n\n.hit-info[_ngcontent-%COMP%] {\n  font-size: 90%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBQTtBQUNKOztBQUtBO0VBQ0ksYUFBQTtBQUZKOztBQUtBO0VBQ0ksYUFBQTtBQUZKOztBQUtBO0VBQ0ksZUFBQTtBQUZKOztBQUtBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUFGSjs7QUFLQTtFQUNJLGtCQUFBO0FBRko7O0FBS0E7RUFDSSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EsY0FBQTtBQUZKOztBQUtBO0VBQ0ksa0JBQUE7RUFDQSx1QkFBQTtBQUZKOztBQUtBO0VBQ0ksaUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLG9CQUFBO0FBRko7O0FBS0E7RUFDSSxvQkFBQTtBQUZKOztBQUtBO0VBQ0ksY0FBQTtFQUNBLG9CQUFBO0VBQ0EsV0FBQTtBQUZKOztBQUtBO0VBQ0ksY0FBQTtBQUZKIiwiZmlsZSI6InNlYXJjaC1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG5cblxuXG4uYWlzLUNsZWFyUmVmaW5lbWVudHMge1xuICAgIG1hcmdpbjogMWVtIDA7XG59XG5cbi5haXMtU2VhcmNoQm94IHtcbiAgICBtYXJnaW46IDFlbSAwO1xufVxuXG4uYWlzLVBhZ2luYXRpb24ge1xuICAgIG1hcmdpbi10b3A6IDFlbTtcbn1cblxuLmxlZnQtcGFuZWwge1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIHdpZHRoOiAyMDBweDtcbn1cblxuLnJpZ2h0LXBhbmVsIHtcbiAgICBtYXJnaW4tbGVmdDogMjEwcHg7XG59XG5cbi5haXMtSW5zdGFudFNlYXJjaCB7XG4gICAgbWF4LXdpZHRoOiA5NjBweDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uYWlzLUhpdHMtaXRlbSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICAgIHdpZHRoOiBjYWxjKDUwJSAtIDFyZW0pO1xufVxuXG4uYWlzLUhpdHMtaXRlbSBpbWcge1xuICAgIG1hcmdpbi1yaWdodDogMWVtO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmhpdC1uYW1lIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwLjVlbTtcbn1cblxuLmhpdC1kZXNjcmlwdGlvbiB7XG4gICAgZm9udC1zaXplOiA5MCU7XG4gICAgbWFyZ2luLWJvdHRvbTogMC41ZW07XG4gICAgY29sb3I6IGdyZXk7XG59XG5cbi5oaXQtaW5mbyB7XG4gICAgZm9udC1zaXplOiA5MCU7XG59XG4iXX0= */"] });


/***/ }),

/***/ 89778:
/*!*********************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/setting-page/setting-page.component.ts ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SettingPageComponent": () => (/* binding */ SettingPageComponent)
/* harmony export */ });
/* harmony import */ var _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../byod/src/app/byod/services/order-context-manager.service */ 4911);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ 87317);






function SettingPageComponent_div_15_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 4)(1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](3, " : ");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](4, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](6, "json");
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
} if (rf & 2) {
    const row_r1 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](row_r1.path);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](6, 2, ctx_r0.getSetting(row_r1.path)));
} }
class SettingPageComponent extends _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, orderContextManager) {
        super(injector);
        this.injector = injector;
        this.orderContextManager = orderContextManager;
        this.entries = [
            {
                path: "brand.features"
            },
            {
                path: "basic.email"
            },
            {
                path: "basic.callNoFormat"
            },
            {
                path: "form.searchFields[0].input"
            },
            {
                path: "menu.catLayout"
            }
        ];
        this.storeId = this.navParams.get("storeId");
    }
    ngOnInit() {
    }
    menuClicked() {
        this.orderContextManager.getMenu(this.storeId, "takeaway").subscribe(store => {
            console.log("DONE FETCH MENU");
        }, err => {
        }, () => {
        });
    }
    testClicked() {
        console.log("test");
        var merged = this.settingManager.merged;
        console.log("merged setting", merged);
    }
}
SettingPageComponent.ɵfac = function SettingPageComponent_Factory(t) { return new (t || SettingPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_byod_src_app_byod_services_order_context_manager_service__WEBPACK_IMPORTED_MODULE_1__.OrderContextManager)); };
SettingPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: SettingPageComponent, selectors: [["app-setting-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 23, vars: 5, consts: [[1, "p-4"], ["mat-raised-button", "", "color", "primary", 3, "click"], ["mat-raised-button", "", "color", "primary", 1, "ml-4", 3, "click"], [1, "p-4", "font-bold", "text-red-500"], [1, "p-2"], ["class", "p-2", 4, "ngFor", "ngForOf"]], template: function SettingPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0)(1, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function SettingPageComponent_Template_button_click_1_listener() { return ctx.menuClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](3, "button", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("click", function SettingPageComponent_Template_button_click_3_listener() { return ctx.testClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](4, " DEBUG Merged Settings ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](5, "p", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](6, " Call getSetting(pathname, defaultValue (optional)) to get setting of any kind. Alternatively you can call SettingManager.get(). ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](7, "p", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](8, " Examples: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](9, "div", 4)(10, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](11, "PATH");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](12, " : ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](13, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](14, "VALUE");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](15, SettingPageComponent_div_15_Template, 7, 4, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](16, "div", 4)(17, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](18, "fake.path");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](19, " : ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](20, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](21);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipe"](22, "json");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" Get Menu ", ctx.storeId, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngForOf", ctx.entries);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate"](_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵpipeBind1"](22, 3, ctx.getSetting("fake.path", "defaultValueString")));
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgForOf, _angular_material_button__WEBPACK_IMPORTED_MODULE_4__.MatButton, _angular_common__WEBPACK_IMPORTED_MODULE_3__.JsonPipe], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNldHRpbmctcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsImZpbGUiOiJzZXR0aW5nLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */"] });


/***/ }),

/***/ 29550:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/swiper-page/swiper-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "SwiperPageComponent": () => (/* binding */ SwiperPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _ux_src_app_ux_components_swiper_swiper_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/swiper/swiper.component */ 68163);




function SwiperPageComponent_ng_template_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
} if (rf & 2) {
    const content_r1 = ctx.content;
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtextInterpolate1"](" ", content_r1.name, " ");
} }
class SwiperPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector) {
        super(injector);
        this.injector = injector;
        this.contents = [];
    }
    ngOnInit() {
        this.contents = this.context.ads;
    }
}
SwiperPageComponent.ɵfac = function SwiperPageComponent_Factory(t) { return new (t || SwiperPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector)); };
SwiperPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: SwiperPageComponent, selectors: [["app-swiper-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 4, vars: 1, consts: [["gap", "10", 1, "mx-6", 3, "contents"], [1, "bg-green-400", "h-40", "w-40"]], template: function SwiperPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1, " SWIPER DEMO\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "app-swiper", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](3, SwiperPageComponent_ng_template_3_Template, 2, 1, "ng-template");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("contents", ctx.contents);
    } }, dependencies: [_ux_src_app_ux_components_swiper_swiper_component__WEBPACK_IMPORTED_MODULE_1__.SwiperComponent], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3aXBlci1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InN3aXBlci1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */"] });


/***/ }),

/***/ 55609:
/*!***************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/test-page/test-page.component.ts ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TestPageComponent": () => (/* binding */ TestPageComponent)
/* harmony export */ });
/* harmony import */ var aigens_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aigens-framework */ 44651);
/* harmony import */ var _core_src_app_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../core/src/app/data */ 51707);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/storage.service */ 24430);
/* harmony import */ var _aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/core/src/app/framework/services/member-context-manager.service */ 67167);
/* harmony import */ var _aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/subscribe.service */ 47074);
/* harmony import */ var _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/nav-bar/nav-bar.component */ 84904);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ 87317);









class TestPageComponent extends aigens_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, storageService, memberContextManager, subscribeService) {
        super(injector);
        this.injector = injector;
        this.storageService = storageService;
        this.memberContextManager = memberContextManager;
        this.subscribeService = subscribeService;
        console.log("TestPageComponent construct");
    }
    ngOnInit() {
        this.storeId = this.navParams.get("storeId");
        this.param1 = this.navParams.get("param1");
        this.param2 = this.navParams.get("param2");
        this.history = window.history;
        this.markClicked();
    }
    testClicked() {
        console.log("test");
        //var merged = this.settingManager.merged;
        //console.log("merged setting", merged);
        //this.testAnalytics();
        var path = "/order/store/80039/order/cd1dc4c1-92e3-48f2-863f-c1e7282a43c2";
        this.routingService.navigateBackAndForward(2, path, {});
        this.routingService.navigateBackRootAndForward(path, {});
        //this.routingService.navigate(path, {});
    }
    testAnalytics() {
        var order = new _core_src_app_data__WEBPACK_IMPORTED_MODULE_1__.Order();
        order.id = "ABCD";
        //this.analyticsService.trackPaymentSuccess(order);
        /*
        for(var i = 0; i < 5; i++){
            this.analyticsService.checkSetDup("test", "ID" + i);
        }*/
        this.analyticsService.trackOrderSuccess(order);
    }
    getSetting(path, defValue = null) {
    }
    updateLanguage() {
        //this emit language change
        this.subscribeService.next("language", "en");
    }
    subscribeLanguage() {
        //this subscribe language change
        this.subscribeService.getObservable("language").subscribe((lang) => {
        });
    }
    forwardClicked() {
        var url = location.pathname;
        this.routingService.navigate(url, { queryParams: { ts: new Date().getTime() + "" } });
    }
    markClicked() {
        //Get the marker of current url/page, save it somewhere we will use
        //it go back back later
        this.marker = this.routingService.mark();
    }
    goClicked() {
        if (this.marker) {
            //go to marker will go back to page of marked
            //marker-1 will go back to page before marked, etc
            this.routingService.backTo(this.marker - 1);
        }
    }
}
TestPageComponent.ɵfac = function TestPageComponent_Factory(t) { return new (t || TestPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_storage_service__WEBPACK_IMPORTED_MODULE_2__.StorageService), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_aigens_core_src_app_framework_services_member_context_manager_service__WEBPACK_IMPORTED_MODULE_3__.MemberContextManager), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_subscribe_service__WEBPACK_IMPORTED_MODULE_4__.SubscribeService)); };
TestPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({ type: TestPageComponent, selectors: [["app-test-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"]], decls: 18, vars: 9, consts: [["nav", "", 3, "title", "menu", "language", "user", "fullWidth"], ["mat-raised-button", "", "color", "primary", 3, "click"]], template: function TestPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](0, "app-nav-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](1, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function TestPageComponent_Template_button_click_5_listener() { return ctx.testClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](6, " Test\n");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](7, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](9, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](11, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function TestPageComponent_Template_button_click_11_listener() { return ctx.markClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](12, " Mark ");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](13, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function TestPageComponent_Template_button_click_13_listener() { return ctx.forwardClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](14, " Forward ");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](15, "button", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function TestPageComponent_Template_button_click_15_listener() { return ctx.goClicked(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](16, " Back to page before marked ");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](17, "div");
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("title", "HELLO")("menu", true)("language", true)("user", true)("fullWidth", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("History length: ", ctx.history.length, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("Marker marker: ", ctx.marker, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("param1: ", ctx.param1, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtextInterpolate1"]("param2: ", ctx.param2, "");
    } }, dependencies: [_ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_5__.NavBarComponent, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButton], styles: ["button[_ngcontent-%COMP%] {\n  margin: 10px;\n}\n\n.big-font[_ngcontent-%COMP%] {\n  font-size: 600%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7QUFDSjs7QUFFQTtFQUNJLGVBQUE7QUFDSiIsImZpbGUiOiJ0ZXN0LXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XG4gICAgbWFyZ2luOiAxMHB4O1xufVxuXG4uYmlnLWZvbnR7XG4gICAgZm9udC1zaXplOiA2MDAlO1xufSJdfQ== */"] });


/***/ }),

/***/ 4759:
/*!*****************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/theme-page/theme-page.component.ts ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ThemePageComponent": () => (/* binding */ ThemePageComponent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../core/src/app/framework */ 44651);
/* harmony import */ var _aigens_core_src_app_pure_services_theme_token_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/theme-token.service */ 11455);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../ux/src/app/ux/components/nav-bar/nav-bar.component */ 84904);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/form-field */ 44770);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/select */ 91434);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/core */ 88133);












const _c0 = ["formComponent"];
function ThemePageComponent_mat_option_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](0, "mat-option", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
} if (rf & 2) {
    const theme_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("value", theme_r1.name);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtextInterpolate1"](" ", theme_r1.title, " ");
} }
//import { ThemeService } from '../../../../../../theme/src/app/theme/services/theme.service';
class ThemePageComponent extends _core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    //@ViewChild(ThemeableDirective, { static: true }) themableHost!: ThemeableDirective;
    constructor(injector, 
    //private themeService: ThemeService,
    themeTokenService) {
        super(injector);
        this.injector = injector;
        this.themeTokenService = themeTokenService;
        this.themes = [
            {
                title: "Standard",
                name: "standard"
            },
            {
                title: "Base",
                name: "base"
            },
            {
                title: "Flat",
                name: "flat"
            },
            {
                title: "Cute",
                name: "cute"
            },
            {
                title: "Luxury",
                name: "luxury"
            }
        ];
        this.activeTheme = "standard";
        this.buttonText = "HELLO WORLD";
        this.item = this.context.featuredItems[0];
        console.log("theme item", this.item);
    }
    ngOnInit() {
        //this.themeService.dynamic = true;
        //this.themeChanged(this.activeTheme);
    }
    themeChanged(event) {
        this.buttonText = "HELLO (" + this.activeTheme + ")";
        //this.loadComponent();
        //this.themeService.setTheme(this.activeTheme);
    }
    injectCss() {
        var cssmap = {
            "button-color": "#ee2222",
            "font-size": "20px"
        };
        this.themeTokenService.setCssVars(cssmap);
    }
    buttonClicked() {
        //this.dialogService.showToast("Clicked:" + this.themeService.theme);
    }
    loadForm() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            const { LazyFormModule, LazyFormComponent } = yield __webpack_require__.e(/*! import() */ "projects_test_src_app_test_lazy-form_component_ts").then(__webpack_require__.bind(__webpack_require__, /*! ../../lazy-form.component */ 19098));
            const moduleRef = (0,_angular_core__WEBPACK_IMPORTED_MODULE_3__.createNgModuleRef)(LazyFormModule, this.injector);
            this.formComponent.clear();
            const { instance } = this.formComponent.createComponent(LazyFormComponent, { ngModuleRef: moduleRef });
            instance.buttonTitle = "Contact Us";
        });
    }
    loadCard() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__awaiter)(this, void 0, void 0, function* () {
            /*
            const {FlatModule} = await import("../../../../../../theme/src/app/flat/flat.module");
            const moduleRef = createNgModuleRef(FlatModule, this.injector) as any;
            this.formComponent.clear();
    
            const comp = moduleRef.instance.getComponent('item-card');
    
            console.log("comp??", comp);
    
            const {instance} = this.formComponent.createComponent(comp, {ngModuleRef: moduleRef});
            instance['item'] = this.item;
            */
        });
    }
}
ThemePageComponent.ɵfac = function ThemePageComponent_Factory(t) { return new (t || ThemePageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_3__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_theme_token_service__WEBPACK_IMPORTED_MODULE_1__.ThemeTokenService)); };
ThemePageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineComponent"]({ type: ThemePageComponent, selectors: [["app-theme-page"]], viewQuery: function ThemePageComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵviewQuery"](_c0, 5, _angular_core__WEBPACK_IMPORTED_MODULE_3__.ViewContainerRef);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵloadQuery"]()) && (ctx.formComponent = _t.first);
    } }, features: [_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵInheritDefinitionFeature"]], decls: 10, vars: 5, consts: [["nav", "", 3, "title", "menu", "language"], [1, "px-3"], ["appearance", "fill"], [3, "ngModel", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], ["mat-raised-button", "", "color", "primary", 3, "click"], [3, "value"]], template: function ThemePageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelement"](0, "app-nav-bar", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](1, "div", 1)(2, "mat-form-field", 2)(3, "mat-label");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](4, "Theme");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](5, "mat-select", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("ngModelChange", function ThemePageComponent_Template_mat_select_ngModelChange_5_listener($event) { return ctx.activeTheme = $event; })("ngModelChange", function ThemePageComponent_Template_mat_select_ngModelChange_5_listener($event) { return ctx.themeChanged($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtemplate"](6, ThemePageComponent_mat_option_6_Template, 2, 2, "mat-option", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()();
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementStart"](7, "div")(8, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵlistener"]("click", function ThemePageComponent_Template_button_click_8_listener() { return ctx.injectCss(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵtext"](9, " Inject Dynamic CSS ");
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵelementEnd"]()()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("title", "THEME DEMO")("menu", false)("language", true);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngModel", ctx.activeTheme);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵproperty"]("ngForOf", ctx.themes);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.NgForOf, _ux_src_app_ux_components_nav_bar_nav_bar_component__WEBPACK_IMPORTED_MODULE_2__.NavBarComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_6__.NgModel, _angular_material_button__WEBPACK_IMPORTED_MODULE_7__.MatButton, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__.MatFormField, _angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__.MatLabel, _angular_material_select__WEBPACK_IMPORTED_MODULE_9__.MatSelect, _angular_material_core__WEBPACK_IMPORTED_MODULE_10__.MatOption], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n\n.ui-type[_ngcontent-%COMP%] {\n  margin-top: 20px;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRoZW1lLXBhZ2UuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFBO0FBQ0o7O0FBRUE7RUFDSSxnQkFBQTtBQUNKIiwiZmlsZSI6InRoZW1lLXBhZ2UuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gICAgZGlzcGxheTogYmxvY2s7XG59XG5cbi51aS10eXBle1xuICAgIG1hcmdpbi10b3A6IDIwcHg7ICAgXG59XG4iXX0= */"] });


/***/ }),

/***/ 36871:
/*!*******************************************************************************!*\
  !*** ./projects/test/src/app/test/pages/tokens-page/tokens-page.component.ts ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TokensPageComponent": () => (/* binding */ TokensPageComponent)
/* harmony export */ });
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_pure_services_theme_token_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/theme-token.service */ 11455);




class TokensPageComponent extends _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.BasePage {
    constructor(injector, tokenService) {
        super(injector);
        this.injector = injector;
        this.tokenService = tokenService;
    }
    ngOnInit() {
    }
    handleCssVars(map) {
        this.tokenService.setCssVars(map);
    }
}
TokensPageComponent.ɵfac = function TokensPageComponent_Factory(t) { return new (t || TokensPageComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_2__.Injector), _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdirectiveInject"](_aigens_core_src_app_pure_services_theme_token_service__WEBPACK_IMPORTED_MODULE_1__.ThemeTokenService)); };
TokensPageComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: TokensPageComponent, selectors: [["app-tokens-page"]], features: [_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵInheritDefinitionFeature"]], decls: 2, vars: 0, template: function TokensPageComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "p");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtext"](1, "tokens-page works!");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]();
    } }, styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRva2Vucy1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBQTtBQUNGIiwiZmlsZSI6InRva2Vucy1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbiJdfQ== */"] });


/***/ }),

/***/ 20414:
/*!***********************************************************!*\
  !*** ./projects/test/src/app/test/root/root.component.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "RootComponent": () => (/* binding */ RootComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/core/src/app/framework */ 44651);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/dialog */ 95758);
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/snack-bar */ 32528);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/router */ 52816);





class RootComponent {
    constructor(dialogService, matDialog, snack, route) {
        this.dialogService = dialogService;
        this.matDialog = matDialog;
        this.snack = snack;
        this.route = route;
        console.log("Test Root Component constructor");
        this.dialogService.dismissPreLoader();
        this.dialogService.setDialogController(matDialog);
        this.dialogService.setSnackBar(snack);
    }
    ngOnInit() {
    }
    ngAfterViewInit() {
    }
}
RootComponent.ɵfac = function RootComponent_Factory(t) { return new (t || RootComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_aigens_core_src_app_framework__WEBPACK_IMPORTED_MODULE_0__.DialogService), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_2__.MatDialog), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_3__.MatSnackBar), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_4__.ActivatedRoute)); };
RootComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({ type: RootComponent, selectors: [["app-root"]], decls: 1, vars: 0, template: function RootComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "router-outlet");
    } }, dependencies: [_angular_router__WEBPACK_IMPORTED_MODULE_4__.RouterOutlet], styles: ["\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb290LmNvbXBvbmVudC5zY3NzIn0= */"] });


/***/ }),

/***/ 14210:
/*!***************************************************!*\
  !*** ./projects/test/src/app/test/test.module.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "TestModule": () => (/* binding */ TestModule),
/* harmony export */   "playerFactory": () => (/* binding */ playerFactory)
/* harmony export */ });
/* harmony import */ var _aigens_auth_src_app_auth_oauth_oauth_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/auth/src/app/auth/oauth/oauth.module */ 29530);
/* harmony import */ var _aigens_core_src_app_pure_base_page_params__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @aigens/core/src/app/pure/base/page-params */ 8744);
/* harmony import */ var _aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @aigens/core/src/app/pure/services/route-guard.service */ 40181);
/* harmony import */ var _aigens_ui_src_app_heavy_ui_heavy_ui_module__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @aigens/ui/src/app/heavy-ui/heavy-ui.module */ 61569);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @angular/material/button */ 87317);
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @angular/material/dialog */ 95758);
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! @angular/material/icon */ 65590);
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @angular/material/input */ 43365);
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! @angular/material/progress-spinner */ 74742);
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @angular/material/select */ 91434);
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! @angular/material/slide-toggle */ 6623);
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! @angular/material/snack-bar */ 32528);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @angular/router */ 52816);
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @ngx-translate/core */ 33935);
/* harmony import */ var angularx_qrcode__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! angularx-qrcode */ 49876);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-lottie */ 23875);
/* harmony import */ var _ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../ui/src/app/ui/ui.module */ 39420);
/* harmony import */ var _ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../ux/src/app/ux/ux.module */ 79420);
/* harmony import */ var _dialogs_alert_dialog_alert_dialog_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./dialogs/alert-dialog/alert-dialog.component */ 69607);
/* harmony import */ var _dialogs_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dialogs/confirm-dialog/confirm-dialog.component */ 31775);
/* harmony import */ var _dialogs_progress_dialog_progress_dialog_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dialogs/progress-dialog/progress-dialog.component */ 79996);
/* harmony import */ var _pages_abtest_page_abtest_page_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./pages/abtest-page/abtest-page.component */ 44097);
/* harmony import */ var _pages_access_page_access_page_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./pages/access-page/access-page.component */ 43074);
/* harmony import */ var _pages_animation_tabbar_test_page_animation_tabbar_test_page_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./pages/animation-tabbar-test-page/animation-tabbar-test-page.component */ 2075);
/* harmony import */ var _pages_app_test_page_app_test_page_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pages/app-test-page/app-test-page.component */ 48001);
/* harmony import */ var _pages_aux1_page_aux1_page_component__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./pages/aux1-page/aux1-page.component */ 25666);
/* harmony import */ var _pages_aux2_page_aux2_page_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./pages/aux2-page/aux2-page.component */ 61727);
/* harmony import */ var _pages_blank_page_blank_page_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./pages/blank-page/blank-page.component */ 37428);
/* harmony import */ var _pages_context_page_context_page_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./pages/context-page/context-page.component */ 52300);
/* harmony import */ var _pages_deeplink_page_deeplink_page_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./pages/deeplink-page/deeplink-page.component */ 36883);
/* harmony import */ var _pages_embed_page_embed_page_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./pages/embed-page/embed-page.component */ 88648);
/* harmony import */ var _pages_fingerprint_page_fingerprint_page_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./pages/fingerprint-page/fingerprint-page.component */ 66319);
/* harmony import */ var _pages_font_page_font_page_component__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./pages/font-page/font-page.component */ 72331);
/* harmony import */ var _pages_image_page_image_page_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./pages/image-page/image-page.component */ 62536);
/* harmony import */ var _pages_kiosk_page_kiosk_page_component__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./pages/kiosk-page/kiosk-page.component */ 55968);
/* harmony import */ var _pages_layout_page_layout_page_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pages/layout-page/layout-page.component */ 22010);
/* harmony import */ var _pages_miniapp_page_miniapp_page_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./pages/miniapp-page/miniapp-page.component */ 54113);
/* harmony import */ var _pages_module_page_module_page_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./pages/module-page/module-page.component */ 7694);
/* harmony import */ var _pages_pwa_page_pwa_page_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./pages/pwa-page/pwa-page.component */ 70803);
/* harmony import */ var _pages_setting_page_setting_page_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./pages/setting-page/setting-page.component */ 89778);
/* harmony import */ var _pages_swiper_page_swiper_page_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./pages/swiper-page/swiper-page.component */ 29550);
/* harmony import */ var _pages_test_page_test_page_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./pages/test-page/test-page.component */ 55609);
/* harmony import */ var _pages_theme_page_theme_page_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./pages/theme-page/theme-page.component */ 4759);
/* harmony import */ var _root_root_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./root/root.component */ 20414);
/* harmony import */ var _pages_tokens_page_tokens_page_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./pages/tokens-page/tokens-page.component */ 36871);
/* harmony import */ var _pages_search_page_search_page_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./pages/search-page/search-page.component */ 95164);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @angular/core */ 3184);


















//import { ThemeModule } from '../../../../theme/src/app/theme/theme.module';

































const routes = [
    {
        path: '',
        component: _root_root_component__WEBPACK_IMPORTED_MODULE_32__.RootComponent,
        children: [
            {
                path: 'module/store/:storeId',
                component: _pages_module_page_module_page_component__WEBPACK_IMPORTED_MODULE_26__.ModulePageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true,
                    screen: "ModuleTest"
                }
            },
            {
                path: 'adhoc/store/:storeId',
                component: _pages_test_page_test_page_component__WEBPACK_IMPORTED_MODULE_30__.TestPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'abtest/store/:storeId',
                component: _pages_abtest_page_abtest_page_component__WEBPACK_IMPORTED_MODULE_10__.AbtestPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'access/store/:storeId',
                component: _pages_access_page_access_page_component__WEBPACK_IMPORTED_MODULE_11__.AccessPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'embed/store/:storeId',
                component: _pages_embed_page_embed_page_component__WEBPACK_IMPORTED_MODULE_19__.EmbedPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            /*
            {
                path: 'layout',
                component: BlankPageComponent,
                canActivate: [RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },*/
            {
                path: 'layout',
                component: _pages_layout_page_layout_page_component__WEBPACK_IMPORTED_MODULE_24__.LayoutPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'blank',
                component: _pages_blank_page_blank_page_component__WEBPACK_IMPORTED_MODULE_16__.BlankPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'setting/store/:storeId',
                component: _pages_setting_page_setting_page_component__WEBPACK_IMPORTED_MODULE_28__.SettingPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'font/store/:storeId',
                component: _pages_font_page_font_page_component__WEBPACK_IMPORTED_MODULE_21__.FontPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'theme/store/:storeId',
                component: _pages_theme_page_theme_page_component__WEBPACK_IMPORTED_MODULE_31__.ThemePageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'tokens/store/:storeId',
                component: _pages_tokens_page_tokens_page_component__WEBPACK_IMPORTED_MODULE_33__.TokensPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'deeplink/store/:storeId',
                component: _pages_deeplink_page_deeplink_page_component__WEBPACK_IMPORTED_MODULE_18__.DeeplinkPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'image',
                component: _pages_image_page_image_page_component__WEBPACK_IMPORTED_MODULE_22__.ImagePageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'swiper',
                component: _pages_swiper_page_swiper_page_component__WEBPACK_IMPORTED_MODULE_29__.SwiperPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'pwa/brand/:brandId',
                component: _pages_pwa_page_pwa_page_component__WEBPACK_IMPORTED_MODULE_27__.PwaPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'context/store/:storeId',
                component: _pages_context_page_context_page_component__WEBPACK_IMPORTED_MODULE_17__.ContextPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: false
                }
            },
            {
                path: 'search/store/:storeId',
                component: _pages_search_page_search_page_component__WEBPACK_IMPORTED_MODULE_34__.SearchPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: false
                }
            },
            {
                path: 'kiosk/store/:storeId',
                component: _pages_kiosk_page_kiosk_page_component__WEBPACK_IMPORTED_MODULE_23__.KioskPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true,
                    screen: "KioskTest"
                }
            },
            {
                path: 'app/store/:storeId',
                component: _pages_app_test_page_app_test_page_component__WEBPACK_IMPORTED_MODULE_13__.AppTestPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true,
                    screen: "AppTest"
                }
            },
            {
                path: 'miniapp/store/:storeId',
                component: _pages_miniapp_page_miniapp_page_component__WEBPACK_IMPORTED_MODULE_25__.MiniappPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true,
                    screen: "MiniAppTest"
                }
            },
            {
                path: 'dialog/aux1',
                component: _pages_aux1_page_aux1_page_component__WEBPACK_IMPORTED_MODULE_14__.Aux1PageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: true,
                    auth: false,
                    entry: false,
                    checkpoint: false
                }
            },
            {
                path: 'dialog/aux2',
                component: _pages_aux2_page_aux2_page_component__WEBPACK_IMPORTED_MODULE_15__.Aux2PageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: true,
                    auth: false,
                    entry: false,
                    checkpoint: false
                }
            },
            {
                path: 'fingerprint/store/:storeId',
                component: _pages_fingerprint_page_fingerprint_page_component__WEBPACK_IMPORTED_MODULE_20__.FingerprintPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            {
                path: 'animation-tabbar/store/:storeId',
                component: _pages_animation_tabbar_test_page_animation_tabbar_test_page_component__WEBPACK_IMPORTED_MODULE_12__.AnimationTabbarTestPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            },
            // {
            //     path: 'dialog/payment-manual-verification',
            //     component: PaymentManualVerificationDialogComponent,
            //     canActivate: [RouteGuardService],
            //     data: {
            //         reuse: true,
            //         auth: false,
            //         entry: false,
            //         checkpoint: false
            //     }
            // },
        ]
    },
    {
        path: 'adhoc2/store/:storeId',
        component: _root_root_component__WEBPACK_IMPORTED_MODULE_32__.RootComponent,
        children: [
            {
                path: 'test',
                component: _pages_test_page_test_page_component__WEBPACK_IMPORTED_MODULE_30__.TestPageComponent,
                canActivate: [_aigens_core_src_app_pure_services_route_guard_service__WEBPACK_IMPORTED_MODULE_2__.RouteGuardService],
                data: {
                    reuse: false,
                    auth: false,
                    entry: true,
                    checkpoint: true
                }
            }
        ]
    }
];
function playerFactory() {
    return __webpack_require__.e(/*! import() | lottie-web */ "lottie-web").then(__webpack_require__.t.bind(__webpack_require__, /*! lottie-web/build/player/lottie_light */ 40477, 23));
}
class TestModule {
}
TestModule.ɵfac = function TestModule_Factory(t) { return new (t || TestModule)(); };
TestModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_35__["ɵɵdefineNgModule"]({ type: TestModule });
TestModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_35__["ɵɵdefineInjector"]({ providers: [
        _aigens_core_src_app_pure_base_page_params__WEBPACK_IMPORTED_MODULE_1__.PageParams,
    ], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_36__.CommonModule,
        _angular_router__WEBPACK_IMPORTED_MODULE_37__.RouterModule.forChild(routes),
        _ngx_translate_core__WEBPACK_IMPORTED_MODULE_38__.TranslateModule,
        angularx_qrcode__WEBPACK_IMPORTED_MODULE_39__.QRCodeModule,
        _ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_5__.UiModule,
        _ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_6__.UxModule,
        // ThemeModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_40__.FormsModule,
        _angular_material_dialog__WEBPACK_IMPORTED_MODULE_41__.MatDialogModule,
        _angular_material_button__WEBPACK_IMPORTED_MODULE_42__.MatButtonModule,
        _angular_material_select__WEBPACK_IMPORTED_MODULE_43__.MatSelectModule,
        _angular_material_icon__WEBPACK_IMPORTED_MODULE_44__.MatIconModule,
        _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_45__.MatSnackBarModule,
        _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_46__.MatProgressSpinnerModule,
        _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_47__.MatSlideToggleModule,
        _angular_material_input__WEBPACK_IMPORTED_MODULE_48__.MatInputModule,
        ngx_lottie__WEBPACK_IMPORTED_MODULE_4__.LottieModule.forRoot({ player: playerFactory }),
        _aigens_ui_src_app_heavy_ui_heavy_ui_module__WEBPACK_IMPORTED_MODULE_3__.HeavyUiModule,
        _aigens_auth_src_app_auth_oauth_oauth_module__WEBPACK_IMPORTED_MODULE_0__.OauthModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_35__["ɵɵsetNgModuleScope"](TestModule, { declarations: [_root_root_component__WEBPACK_IMPORTED_MODULE_32__.RootComponent,
        _pages_module_page_module_page_component__WEBPACK_IMPORTED_MODULE_26__.ModulePageComponent,
        _pages_pwa_page_pwa_page_component__WEBPACK_IMPORTED_MODULE_27__.PwaPageComponent,
        _pages_test_page_test_page_component__WEBPACK_IMPORTED_MODULE_30__.TestPageComponent,
        _pages_layout_page_layout_page_component__WEBPACK_IMPORTED_MODULE_24__.LayoutPageComponent,
        _pages_context_page_context_page_component__WEBPACK_IMPORTED_MODULE_17__.ContextPageComponent,
        _pages_aux1_page_aux1_page_component__WEBPACK_IMPORTED_MODULE_14__.Aux1PageComponent,
        _pages_aux2_page_aux2_page_component__WEBPACK_IMPORTED_MODULE_15__.Aux2PageComponent,
        _dialogs_alert_dialog_alert_dialog_component__WEBPACK_IMPORTED_MODULE_7__.AlertDialogComponent,
        _dialogs_confirm_dialog_confirm_dialog_component__WEBPACK_IMPORTED_MODULE_8__.ConfirmDialogComponent,
        _dialogs_progress_dialog_progress_dialog_component__WEBPACK_IMPORTED_MODULE_9__.ProgressDialogComponent,
        _pages_image_page_image_page_component__WEBPACK_IMPORTED_MODULE_22__.ImagePageComponent,
        _pages_swiper_page_swiper_page_component__WEBPACK_IMPORTED_MODULE_29__.SwiperPageComponent,
        _pages_setting_page_setting_page_component__WEBPACK_IMPORTED_MODULE_28__.SettingPageComponent,
        _pages_miniapp_page_miniapp_page_component__WEBPACK_IMPORTED_MODULE_25__.MiniappPageComponent,
        _pages_theme_page_theme_page_component__WEBPACK_IMPORTED_MODULE_31__.ThemePageComponent,
        _pages_font_page_font_page_component__WEBPACK_IMPORTED_MODULE_21__.FontPageComponent,
        _pages_deeplink_page_deeplink_page_component__WEBPACK_IMPORTED_MODULE_18__.DeeplinkPageComponent,
        _pages_blank_page_blank_page_component__WEBPACK_IMPORTED_MODULE_16__.BlankPageComponent,
        _pages_access_page_access_page_component__WEBPACK_IMPORTED_MODULE_11__.AccessPageComponent,
        _pages_fingerprint_page_fingerprint_page_component__WEBPACK_IMPORTED_MODULE_20__.FingerprintPageComponent,
        _pages_animation_tabbar_test_page_animation_tabbar_test_page_component__WEBPACK_IMPORTED_MODULE_12__.AnimationTabbarTestPageComponent,
        _pages_app_test_page_app_test_page_component__WEBPACK_IMPORTED_MODULE_13__.AppTestPageComponent,
        _pages_abtest_page_abtest_page_component__WEBPACK_IMPORTED_MODULE_10__.AbtestPageComponent,
        _pages_kiosk_page_kiosk_page_component__WEBPACK_IMPORTED_MODULE_23__.KioskPageComponent,
        _pages_embed_page_embed_page_component__WEBPACK_IMPORTED_MODULE_19__.EmbedPageComponent,
        _pages_tokens_page_tokens_page_component__WEBPACK_IMPORTED_MODULE_33__.TokensPageComponent,
        _pages_search_page_search_page_component__WEBPACK_IMPORTED_MODULE_34__.SearchPageComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_36__.CommonModule, _angular_router__WEBPACK_IMPORTED_MODULE_37__.RouterModule, _ngx_translate_core__WEBPACK_IMPORTED_MODULE_38__.TranslateModule,
        angularx_qrcode__WEBPACK_IMPORTED_MODULE_39__.QRCodeModule,
        _ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_5__.UiModule,
        _ux_src_app_ux_ux_module__WEBPACK_IMPORTED_MODULE_6__.UxModule,
        // ThemeModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_40__.FormsModule,
        _angular_material_dialog__WEBPACK_IMPORTED_MODULE_41__.MatDialogModule,
        _angular_material_button__WEBPACK_IMPORTED_MODULE_42__.MatButtonModule,
        _angular_material_select__WEBPACK_IMPORTED_MODULE_43__.MatSelectModule,
        _angular_material_icon__WEBPACK_IMPORTED_MODULE_44__.MatIconModule,
        _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_45__.MatSnackBarModule,
        _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_46__.MatProgressSpinnerModule,
        _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_47__.MatSlideToggleModule,
        _angular_material_input__WEBPACK_IMPORTED_MODULE_48__.MatInputModule, ngx_lottie__WEBPACK_IMPORTED_MODULE_4__.LottieModule, _aigens_ui_src_app_heavy_ui_heavy_ui_module__WEBPACK_IMPORTED_MODULE_3__.HeavyUiModule,
        _aigens_auth_src_app_auth_oauth_oauth_module__WEBPACK_IMPORTED_MODULE_0__.OauthModule] }); })();


/***/ }),

/***/ 19944:
/*!***********************************************************************!*\
  !*** ./projects/ui/src/app/heavy-ui/animation/animation.component.ts ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimationComponent": () => (/* binding */ AnimationComponent)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var _ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../ui/components/img/img.component */ 29025);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-lottie */ 23875);





function AnimationComponent_app_img_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelement"](0, "app-img", 3);
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("src", ctx_r0.fallbackImgSrc)("ratio", ctx_r0.height / ctx_r0.width);
} }
class AnimationComponent {
    constructor() {
        this._options = {};
        this._src = '';
        this.loaded = false;
        this.fallbackImgSrc = '';
        this.height = 500;
        this.width = 500;
        this.animationCreated = new _angular_core__WEBPACK_IMPORTED_MODULE_2__.EventEmitter();
    }
    set src(src) {
        this._options = Object.assign(Object.assign({}, this._options), { path: src });
        this._src = src;
    }
    set animationData(data) {
        this._options = Object.assign(Object.assign({}, this._options), { animationData: data });
        this._animationData = data;
    }
    set options(options) {
        this._options = Object.assign(Object.assign({}, options), { path: this._src, animationData: this._animationData });
    }
    ngOnInit() {
    }
    onError(error) {
        console.log('ERROR', error);
    }
    onCreated(animation) {
        this.animationCreated.emit(animation);
    }
    onReady() {
        this.loaded = true;
    }
}
AnimationComponent.ɵfac = function AnimationComponent_Factory(t) { return new (t || AnimationComponent)(); };
AnimationComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({ type: AnimationComponent, selectors: [["app-animation"]], inputs: { src: "src", animationData: "animationData", fallbackImgSrc: "fallbackImgSrc", options: "options", height: "height", width: "width" }, outputs: { animationCreated: "animationCreated" }, decls: 3, vars: 8, consts: [[1, "animation-container"], [3, "src", "ratio", 4, "ngIf"], [1, "icon", 3, "options", "error", "animationCreated", "dataReady"], [3, "src", "ratio"]], template: function AnimationComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵtemplate"](1, AnimationComponent_app_img_1_Template, 1, 2, "app-img", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementStart"](2, "ng-lottie", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵlistener"]("error", function AnimationComponent_Template_ng_lottie_error_2_listener($event) { return ctx.onError($event); })("animationCreated", function AnimationComponent_Template_ng_lottie_animationCreated_2_listener($event) { return ctx.onCreated($event); })("dataReady", function AnimationComponent_Template_ng_lottie_dataReady_2_listener() { return ctx.onReady(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵelementEnd"]()();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵstyleProp"]("height", ctx.height + "px")("width", ctx.width + "px");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("ngIf", ctx.fallbackImgSrc && !ctx.loaded);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵstyleProp"]("display", ctx.loaded ? "block" : "none");
        _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵproperty"]("options", ctx._options);
    } }, dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_3__.NgIf, _ui_components_img_img_component__WEBPACK_IMPORTED_MODULE_0__.ImgComponent, ngx_lottie__WEBPACK_IMPORTED_MODULE_1__.LottieComponent], styles: ["[_nghost-%COMP%] {\n  display: block;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFuaW1hdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQUE7QUFDRiIsImZpbGUiOiJhbmltYXRpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuIl19 */"] });


/***/ }),

/***/ 61569:
/*!*********************************************************!*\
  !*** ./projects/ui/src/app/heavy-ui/heavy-ui.module.ts ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HeavyUiModule": () => (/* binding */ HeavyUiModule),
/* harmony export */   "playerFactory": () => (/* binding */ playerFactory)
/* harmony export */ });
/* harmony import */ var _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @aigens/ui/src/app/ui/ui.module */ 39420);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var ngx_lottie__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ngx-lottie */ 23875);
/* harmony import */ var _animation_animation_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./animation/animation.component */ 19944);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);






function playerFactory() {
    return __webpack_require__.e(/*! import() | lottie-web */ "lottie-web").then(__webpack_require__.t.bind(__webpack_require__, /*! lottie-web/build/player/lottie_light */ 40477, 23));
}
const COMPONENTS = [_animation_animation_component__WEBPACK_IMPORTED_MODULE_2__.AnimationComponent];
class HeavyUiModule {
}
HeavyUiModule.ɵfac = function HeavyUiModule_Factory(t) { return new (t || HeavyUiModule)(); };
HeavyUiModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({ type: HeavyUiModule });
HeavyUiModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({ imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule,
        _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_0__.UiModule,
        ngx_lottie__WEBPACK_IMPORTED_MODULE_1__.LottieModule.forRoot({ player: playerFactory }),
        ngx_lottie__WEBPACK_IMPORTED_MODULE_1__.LottieCacheModule.forRoot()] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](HeavyUiModule, { declarations: [_animation_animation_component__WEBPACK_IMPORTED_MODULE_2__.AnimationComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule,
        _aigens_ui_src_app_ui_ui_module__WEBPACK_IMPORTED_MODULE_0__.UiModule, ngx_lottie__WEBPACK_IMPORTED_MODULE_1__.LottieModule, ngx_lottie__WEBPACK_IMPORTED_MODULE_1__.LottieCacheModule], exports: [_animation_animation_component__WEBPACK_IMPORTED_MODULE_2__.AnimationComponent] }); })();


/***/ }),

/***/ 29654:
/*!**********************************************************************!*\
  !*** ./node_modules/@aigens/aigens-sdk-core/dist/esm/definitions.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ 2386:
/*!****************************************************************!*\
  !*** ./node_modules/@aigens/aigens-sdk-core/dist/esm/index.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Core": () => (/* binding */ Core)
/* harmony export */ });
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ 26549);
/* harmony import */ var _definitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions */ 29654);

const Core = (0,_capacitor_core__WEBPACK_IMPORTED_MODULE_0__.registerPlugin)('Core', {
  web: () => __webpack_require__.e(/*! import() */ "node_modules_aigens_aigens-sdk-core_dist_esm_web_js").then(__webpack_require__.bind(__webpack_require__, /*! ./web */ 92126)).then(m => new m.CoreWeb())
});



/***/ }),

/***/ 48470:
/*!***************************************************************!*\
  !*** ./node_modules/@capacitor/share/dist/esm/definitions.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);


/***/ }),

/***/ 58921:
/*!*********************************************************!*\
  !*** ./node_modules/@capacitor/share/dist/esm/index.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Share": () => (/* binding */ Share)
/* harmony export */ });
/* harmony import */ var _capacitor_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @capacitor/core */ 26549);
/* harmony import */ var _definitions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./definitions */ 48470);

const Share = (0,_capacitor_core__WEBPACK_IMPORTED_MODULE_0__.registerPlugin)('Share', {
  web: () => __webpack_require__.e(/*! import() */ "node_modules_capacitor_share_dist_esm_web_js").then(__webpack_require__.bind(__webpack_require__, /*! ./web */ 83656)).then(m => new m.ShareWeb())
});



/***/ }),

/***/ 28426:
/*!*****************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/browser.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const canPromise = __webpack_require__(/*! ./can-promise */ 40811);

const QRCode = __webpack_require__(/*! ./core/qrcode */ 9052);

const CanvasRenderer = __webpack_require__(/*! ./renderer/canvas */ 25582);

const SvgRenderer = __webpack_require__(/*! ./renderer/svg-tag.js */ 73068);

function renderCanvas(renderFunc, canvas, text, opts, cb) {
  const args = [].slice.call(arguments, 1);
  const argsNum = args.length;
  const isLastArgCb = typeof args[argsNum - 1] === 'function';

  if (!isLastArgCb && !canPromise()) {
    throw new Error('Callback required as last argument');
  }

  if (isLastArgCb) {
    if (argsNum < 2) {
      throw new Error('Too few arguments provided');
    }

    if (argsNum === 2) {
      cb = text;
      text = canvas;
      canvas = opts = undefined;
    } else if (argsNum === 3) {
      if (canvas.getContext && typeof cb === 'undefined') {
        cb = opts;
        opts = undefined;
      } else {
        cb = opts;
        opts = text;
        text = canvas;
        canvas = undefined;
      }
    }
  } else {
    if (argsNum < 1) {
      throw new Error('Too few arguments provided');
    }

    if (argsNum === 1) {
      text = canvas;
      canvas = opts = undefined;
    } else if (argsNum === 2 && !canvas.getContext) {
      opts = text;
      text = canvas;
      canvas = undefined;
    }

    return new Promise(function (resolve, reject) {
      try {
        const data = QRCode.create(text, opts);
        resolve(renderFunc(data, canvas, opts));
      } catch (e) {
        reject(e);
      }
    });
  }

  try {
    const data = QRCode.create(text, opts);
    cb(null, renderFunc(data, canvas, opts));
  } catch (e) {
    cb(e);
  }
}

exports.create = QRCode.create;
exports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render);
exports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL); // only svg for now.

exports.toString = renderCanvas.bind(null, function (data, _, opts) {
  return SvgRenderer.render(data, opts);
});

/***/ }),

/***/ 40811:
/*!*********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/can-promise.js ***!
  \*********************************************************/
/***/ ((module) => {

// can-promise has a crash in some versions of react native that dont have
// standard global objects
// https://github.com/soldair/node-qrcode/issues/157
module.exports = function () {
  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then;
};

/***/ }),

/***/ 78285:
/*!********************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/alignment-pattern.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

/**
 * Alignment pattern are fixed reference pattern in defined positions
 * in a matrix symbology, which enables the decode software to re-synchronise
 * the coordinate mapping of the image modules in the event of moderate amounts
 * of distortion of the image.
 *
 * Alignment patterns are present only in QR Code symbols of version 2 or larger
 * and their number depends on the symbol version.
 */
const getSymbolSize = (__webpack_require__(/*! ./utils */ 46832).getSymbolSize);
/**
 * Calculate the row/column coordinates of the center module of each alignment pattern
 * for the specified QR Code version.
 *
 * The alignment patterns are positioned symmetrically on either side of the diagonal
 * running from the top left corner of the symbol to the bottom right corner.
 *
 * Since positions are simmetrical only half of the coordinates are returned.
 * Each item of the array will represent in turn the x and y coordinate.
 * @see {@link getPositions}
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinate
 */


exports.getRowColCoords = function getRowColCoords(version) {
  if (version === 1) return [];
  const posCount = Math.floor(version / 7) + 2;
  const size = getSymbolSize(version);
  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2;
  const positions = [size - 7]; // Last coord is always (size - 7)

  for (let i = 1; i < posCount - 1; i++) {
    positions[i] = positions[i - 1] - intervals;
  }

  positions.push(6); // First coord is always 6

  return positions.reverse();
};
/**
 * Returns an array containing the positions of each alignment pattern.
 * Each array's element represent the center point of the pattern as (x, y) coordinates
 *
 * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}
 * and filtering out the items that overlaps with finder pattern
 *
 * @example
 * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.
 * The alignment patterns, therefore, are to be centered on (row, column)
 * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).
 * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns
 * and are not therefore used for alignment patterns.
 *
 * let pos = getPositions(7)
 * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinates
 */


exports.getPositions = function getPositions(version) {
  const coords = [];
  const pos = exports.getRowColCoords(version);
  const posLength = pos.length;

  for (let i = 0; i < posLength; i++) {
    for (let j = 0; j < posLength; j++) {
      // Skip if position is occupied by finder patterns
      if (i === 0 && j === 0 || // top-left
      i === 0 && j === posLength - 1 || // bottom-left
      i === posLength - 1 && j === 0) {
        // top-right
        continue;
      }

      coords.push([pos[i], pos[j]]);
    }
  }

  return coords;
};

/***/ }),

/***/ 6:
/*!********************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/alphanumeric-data.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Mode = __webpack_require__(/*! ./mode */ 85382);
/**
 * Array of characters available in alphanumeric mode
 *
 * As per QR Code specification, to each character
 * is assigned a value from 0 to 44 which in this case coincides
 * with the array index
 *
 * @type {Array}
 */


const ALPHA_NUM_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', ' ', '$', '%', '*', '+', '-', '.', '/', ':'];

function AlphanumericData(data) {
  this.mode = Mode.ALPHANUMERIC;
  this.data = data;
}

AlphanumericData.getBitsLength = function getBitsLength(length) {
  return 11 * Math.floor(length / 2) + 6 * (length % 2);
};

AlphanumericData.prototype.getLength = function getLength() {
  return this.data.length;
};

AlphanumericData.prototype.getBitsLength = function getBitsLength() {
  return AlphanumericData.getBitsLength(this.data.length);
};

AlphanumericData.prototype.write = function write(bitBuffer) {
  let i; // Input data characters are divided into groups of two characters
  // and encoded as 11-bit binary codes.

  for (i = 0; i + 2 <= this.data.length; i += 2) {
    // The character value of the first character is multiplied by 45
    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45; // The character value of the second digit is added to the product

    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1]); // The sum is then stored as 11-bit binary number

    bitBuffer.put(value, 11);
  } // If the number of input data characters is not a multiple of two,
  // the character value of the final character is encoded as a 6-bit binary number.


  if (this.data.length % 2) {
    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6);
  }
};

module.exports = AlphanumericData;

/***/ }),

/***/ 10011:
/*!*************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/bit-buffer.js ***!
  \*************************************************************/
/***/ ((module) => {

function BitBuffer() {
  this.buffer = [];
  this.length = 0;
}

BitBuffer.prototype = {
  get: function (index) {
    const bufIndex = Math.floor(index / 8);
    return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) === 1;
  },
  put: function (num, length) {
    for (let i = 0; i < length; i++) {
      this.putBit((num >>> length - i - 1 & 1) === 1);
    }
  },
  getLengthInBits: function () {
    return this.length;
  },
  putBit: function (bit) {
    const bufIndex = Math.floor(this.length / 8);

    if (this.buffer.length <= bufIndex) {
      this.buffer.push(0);
    }

    if (bit) {
      this.buffer[bufIndex] |= 0x80 >>> this.length % 8;
    }

    this.length++;
  }
};
module.exports = BitBuffer;

/***/ }),

/***/ 43037:
/*!*************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/bit-matrix.js ***!
  \*************************************************************/
/***/ ((module) => {

/**
 * Helper class to handle QR Code symbol modules
 *
 * @param {Number} size Symbol size
 */
function BitMatrix(size) {
  if (!size || size < 1) {
    throw new Error('BitMatrix size must be defined and greater than 0');
  }

  this.size = size;
  this.data = new Uint8Array(size * size);
  this.reservedBit = new Uint8Array(size * size);
}
/**
 * Set bit value at specified location
 * If reserved flag is set, this bit will be ignored during masking process
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 * @param {Boolean} reserved
 */


BitMatrix.prototype.set = function (row, col, value, reserved) {
  const index = row * this.size + col;
  this.data[index] = value;
  if (reserved) this.reservedBit[index] = true;
};
/**
 * Returns bit value at specified location
 *
 * @param  {Number}  row
 * @param  {Number}  col
 * @return {Boolean}
 */


BitMatrix.prototype.get = function (row, col) {
  return this.data[row * this.size + col];
};
/**
 * Applies xor operator at specified location
 * (used during masking process)
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 */


BitMatrix.prototype.xor = function (row, col, value) {
  this.data[row * this.size + col] ^= value;
};
/**
 * Check if bit at specified location is reserved
 *
 * @param {Number}   row
 * @param {Number}   col
 * @return {Boolean}
 */


BitMatrix.prototype.isReserved = function (row, col) {
  return this.reservedBit[row * this.size + col];
};

module.exports = BitMatrix;

/***/ }),

/***/ 95578:
/*!************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/byte-data.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const encodeUtf8 = __webpack_require__(/*! encode-utf8 */ 76236);

const Mode = __webpack_require__(/*! ./mode */ 85382);

function ByteData(data) {
  this.mode = Mode.BYTE;
  this.data = new Uint8Array(encodeUtf8(data));
}

ByteData.getBitsLength = function getBitsLength(length) {
  return length * 8;
};

ByteData.prototype.getLength = function getLength() {
  return this.data.length;
};

ByteData.prototype.getBitsLength = function getBitsLength() {
  return ByteData.getBitsLength(this.data.length);
};

ByteData.prototype.write = function (bitBuffer) {
  for (let i = 0, l = this.data.length; i < l; i++) {
    bitBuffer.put(this.data[i], 8);
  }
};

module.exports = ByteData;

/***/ }),

/***/ 70080:
/*!************************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/error-correction-code.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const ECLevel = __webpack_require__(/*! ./error-correction-level */ 91402);

const EC_BLOCKS_TABLE = [// L  M  Q  H
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 4, 1, 2, 4, 4, 2, 4, 4, 4, 2, 4, 6, 5, 2, 4, 6, 6, 2, 5, 8, 8, 4, 5, 8, 8, 4, 5, 8, 11, 4, 8, 10, 11, 4, 9, 12, 16, 4, 9, 16, 16, 6, 10, 12, 18, 6, 10, 17, 16, 6, 11, 16, 19, 6, 13, 18, 21, 7, 14, 21, 25, 8, 16, 20, 25, 8, 17, 23, 25, 9, 17, 23, 34, 9, 18, 25, 30, 10, 20, 27, 32, 12, 21, 29, 35, 12, 23, 34, 37, 12, 25, 34, 40, 13, 26, 35, 42, 14, 28, 38, 45, 15, 29, 40, 48, 16, 31, 43, 51, 17, 33, 45, 54, 18, 35, 48, 57, 19, 37, 51, 60, 19, 38, 53, 63, 20, 40, 56, 66, 21, 43, 59, 70, 22, 45, 62, 74, 24, 47, 65, 77, 25, 49, 68, 81];
const EC_CODEWORDS_TABLE = [// L  M  Q  H
7, 10, 13, 17, 10, 16, 22, 28, 15, 26, 36, 44, 20, 36, 52, 64, 26, 48, 72, 88, 36, 64, 96, 112, 40, 72, 108, 130, 48, 88, 132, 156, 60, 110, 160, 192, 72, 130, 192, 224, 80, 150, 224, 264, 96, 176, 260, 308, 104, 198, 288, 352, 120, 216, 320, 384, 132, 240, 360, 432, 144, 280, 408, 480, 168, 308, 448, 532, 180, 338, 504, 588, 196, 364, 546, 650, 224, 416, 600, 700, 224, 442, 644, 750, 252, 476, 690, 816, 270, 504, 750, 900, 300, 560, 810, 960, 312, 588, 870, 1050, 336, 644, 952, 1110, 360, 700, 1020, 1200, 390, 728, 1050, 1260, 420, 784, 1140, 1350, 450, 812, 1200, 1440, 480, 868, 1290, 1530, 510, 924, 1350, 1620, 540, 980, 1440, 1710, 570, 1036, 1530, 1800, 570, 1064, 1590, 1890, 600, 1120, 1680, 1980, 630, 1204, 1770, 2100, 660, 1260, 1860, 2220, 720, 1316, 1950, 2310, 750, 1372, 2040, 2430];
/**
 * Returns the number of error correction block that the QR Code should contain
 * for the specified version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction blocks
 */

exports.getBlocksCount = function getBlocksCount(version, errorCorrectionLevel) {
  switch (errorCorrectionLevel) {
    case ECLevel.L:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0];

    case ECLevel.M:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1];

    case ECLevel.Q:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2];

    case ECLevel.H:
      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3];

    default:
      return undefined;
  }
};
/**
 * Returns the number of error correction codewords to use for the specified
 * version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction codewords
 */


exports.getTotalCodewordsCount = function getTotalCodewordsCount(version, errorCorrectionLevel) {
  switch (errorCorrectionLevel) {
    case ECLevel.L:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0];

    case ECLevel.M:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1];

    case ECLevel.Q:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2];

    case ECLevel.H:
      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3];

    default:
      return undefined;
  }
};

/***/ }),

/***/ 91402:
/*!*************************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/error-correction-level.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

exports.L = {
  bit: 1
};
exports.M = {
  bit: 0
};
exports.Q = {
  bit: 3
};
exports.H = {
  bit: 2
};

function fromString(string) {
  if (typeof string !== 'string') {
    throw new Error('Param is not a string');
  }

  const lcStr = string.toLowerCase();

  switch (lcStr) {
    case 'l':
    case 'low':
      return exports.L;

    case 'm':
    case 'medium':
      return exports.M;

    case 'q':
    case 'quartile':
      return exports.Q;

    case 'h':
    case 'high':
      return exports.H;

    default:
      throw new Error('Unknown EC Level: ' + string);
  }
}

exports.isValid = function isValid(level) {
  return level && typeof level.bit !== 'undefined' && level.bit >= 0 && level.bit < 4;
};

exports.from = function from(value, defaultValue) {
  if (exports.isValid(value)) {
    return value;
  }

  try {
    return fromString(value);
  } catch (e) {
    return defaultValue;
  }
};

/***/ }),

/***/ 99159:
/*!*****************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/finder-pattern.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const getSymbolSize = (__webpack_require__(/*! ./utils */ 46832).getSymbolSize);

const FINDER_PATTERN_SIZE = 7;
/**
 * Returns an array containing the positions of each finder pattern.
 * Each array's element represent the top-left point of the pattern as (x, y) coordinates
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinates
 */

exports.getPositions = function getPositions(version) {
  const size = getSymbolSize(version);
  return [// top-left
  [0, 0], // top-right
  [size - FINDER_PATTERN_SIZE, 0], // bottom-left
  [0, size - FINDER_PATTERN_SIZE]];
};

/***/ }),

/***/ 74214:
/*!**************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/format-info.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Utils = __webpack_require__(/*! ./utils */ 46832);

const G15 = 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0;
const G15_MASK = 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1;
const G15_BCH = Utils.getBCHDigit(G15);
/**
 * Returns format information with relative error correction bits
 *
 * The format information is a 15-bit sequence containing 5 data bits,
 * with 10 error correction bits calculated using the (15, 5) BCH code.
 *
 * @param  {Number} errorCorrectionLevel Error correction level
 * @param  {Number} mask                 Mask pattern
 * @return {Number}                      Encoded format information bits
 */

exports.getEncodedBits = function getEncodedBits(errorCorrectionLevel, mask) {
  const data = errorCorrectionLevel.bit << 3 | mask;
  let d = data << 10;

  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {
    d ^= G15 << Utils.getBCHDigit(d) - G15_BCH;
  } // xor final data with mask pattern in order to ensure that
  // no combination of Error Correction Level and data mask pattern
  // will result in an all-zero data string


  return (data << 10 | d) ^ G15_MASK;
};

/***/ }),

/***/ 33366:
/*!***************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/galois-field.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

const EXP_TABLE = new Uint8Array(512);
const LOG_TABLE = new Uint8Array(256)
/**
 * Precompute the log and anti-log tables for faster computation later
 *
 * For each possible value in the galois field 2^8, we will pre-compute
 * the logarithm and anti-logarithm (exponential) of this value
 *
 * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}
 */
;

(function initTables() {
  let x = 1;

  for (let i = 0; i < 255; i++) {
    EXP_TABLE[i] = x;
    LOG_TABLE[x] = i;
    x <<= 1; // multiply by 2
    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.
    // This means that when a number is 256 or larger, it should be XORed with 0x11D.

    if (x & 0x100) {
      // similar to x >= 256, but a lot faster (because 0x100 == 256)
      x ^= 0x11D;
    }
  } // Optimization: double the size of the anti-log table so that we don't need to mod 255 to
  // stay inside the bounds (because we will mainly use this table for the multiplication of
  // two GF numbers, no more).
  // @see {@link mul}


  for (let i = 255; i < 512; i++) {
    EXP_TABLE[i] = EXP_TABLE[i - 255];
  }
})();
/**
 * Returns log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */


exports.log = function log(n) {
  if (n < 1) throw new Error('log(' + n + ')');
  return LOG_TABLE[n];
};
/**
 * Returns anti-log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */


exports.exp = function exp(n) {
  return EXP_TABLE[n];
};
/**
 * Multiplies two number inside Galois Field
 *
 * @param  {Number} x
 * @param  {Number} y
 * @return {Number}
 */


exports.mul = function mul(x, y) {
  if (x === 0 || y === 0) return 0; // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized
  // @see {@link initTables}

  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]];
};

/***/ }),

/***/ 95601:
/*!*************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/kanji-data.js ***!
  \*************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Mode = __webpack_require__(/*! ./mode */ 85382);

const Utils = __webpack_require__(/*! ./utils */ 46832);

function KanjiData(data) {
  this.mode = Mode.KANJI;
  this.data = data;
}

KanjiData.getBitsLength = function getBitsLength(length) {
  return length * 13;
};

KanjiData.prototype.getLength = function getLength() {
  return this.data.length;
};

KanjiData.prototype.getBitsLength = function getBitsLength() {
  return KanjiData.getBitsLength(this.data.length);
};

KanjiData.prototype.write = function (bitBuffer) {
  let i; // In the Shift JIS system, Kanji characters are represented by a two byte combination.
  // These byte values are shifted from the JIS X 0208 values.
  // JIS X 0208 gives details of the shift coded representation.

  for (i = 0; i < this.data.length; i++) {
    let value = Utils.toSJIS(this.data[i]); // For characters with Shift JIS values from 0x8140 to 0x9FFC:

    if (value >= 0x8140 && value <= 0x9FFC) {
      // Subtract 0x8140 from Shift JIS value
      value -= 0x8140; // For characters with Shift JIS values from 0xE040 to 0xEBBF
    } else if (value >= 0xE040 && value <= 0xEBBF) {
      // Subtract 0xC140 from Shift JIS value
      value -= 0xC140;
    } else {
      throw new Error('Invalid SJIS character: ' + this.data[i] + '\n' + 'Make sure your charset is UTF-8');
    } // Multiply most significant byte of result by 0xC0
    // and add least significant byte to product


    value = (value >>> 8 & 0xff) * 0xC0 + (value & 0xff); // Convert result to a 13-bit binary string

    bitBuffer.put(value, 13);
  }
};

module.exports = KanjiData;

/***/ }),

/***/ 45481:
/*!***************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/mask-pattern.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/**
 * Data mask pattern reference
 * @type {Object}
 */
exports.Patterns = {
  PATTERN000: 0,
  PATTERN001: 1,
  PATTERN010: 2,
  PATTERN011: 3,
  PATTERN100: 4,
  PATTERN101: 5,
  PATTERN110: 6,
  PATTERN111: 7
};
/**
 * Weighted penalty scores for the undesirable features
 * @type {Object}
 */

const PenaltyScores = {
  N1: 3,
  N2: 3,
  N3: 40,
  N4: 10
};
/**
 * Check if mask pattern value is valid
 *
 * @param  {Number}  mask    Mask pattern
 * @return {Boolean}         true if valid, false otherwise
 */

exports.isValid = function isValid(mask) {
  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7;
};
/**
 * Returns mask pattern from a value.
 * If value is not valid, returns undefined
 *
 * @param  {Number|String} value        Mask pattern value
 * @return {Number}                     Valid mask pattern or undefined
 */


exports.from = function from(value) {
  return exports.isValid(value) ? parseInt(value, 10) : undefined;
};
/**
* Find adjacent modules in row/column with the same color
* and assign a penalty value.
*
* Points: N1 + i
* i is the amount by which the number of adjacent modules of the same color exceeds 5
*/


exports.getPenaltyN1 = function getPenaltyN1(data) {
  const size = data.size;
  let points = 0;
  let sameCountCol = 0;
  let sameCountRow = 0;
  let lastCol = null;
  let lastRow = null;

  for (let row = 0; row < size; row++) {
    sameCountCol = sameCountRow = 0;
    lastCol = lastRow = null;

    for (let col = 0; col < size; col++) {
      let module = data.get(row, col);

      if (module === lastCol) {
        sameCountCol++;
      } else {
        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
        lastCol = module;
        sameCountCol = 1;
      }

      module = data.get(col, row);

      if (module === lastRow) {
        sameCountRow++;
      } else {
        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
        lastRow = module;
        sameCountRow = 1;
      }
    }

    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5);
    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5);
  }

  return points;
};
/**
 * Find 2x2 blocks with the same color and assign a penalty value
 *
 * Points: N2 * (m - 1) * (n - 1)
 */


exports.getPenaltyN2 = function getPenaltyN2(data) {
  const size = data.size;
  let points = 0;

  for (let row = 0; row < size - 1; row++) {
    for (let col = 0; col < size - 1; col++) {
      const last = data.get(row, col) + data.get(row, col + 1) + data.get(row + 1, col) + data.get(row + 1, col + 1);
      if (last === 4 || last === 0) points++;
    }
  }

  return points * PenaltyScores.N2;
};
/**
 * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,
 * preceded or followed by light area 4 modules wide
 *
 * Points: N3 * number of pattern found
 */


exports.getPenaltyN3 = function getPenaltyN3(data) {
  const size = data.size;
  let points = 0;
  let bitsCol = 0;
  let bitsRow = 0;

  for (let row = 0; row < size; row++) {
    bitsCol = bitsRow = 0;

    for (let col = 0; col < size; col++) {
      bitsCol = bitsCol << 1 & 0x7FF | data.get(row, col);
      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++;
      bitsRow = bitsRow << 1 & 0x7FF | data.get(col, row);
      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++;
    }
  }

  return points * PenaltyScores.N3;
};
/**
 * Calculate proportion of dark modules in entire symbol
 *
 * Points: N4 * k
 *
 * k is the rating of the deviation of the proportion of dark modules
 * in the symbol from 50% in steps of 5%
 */


exports.getPenaltyN4 = function getPenaltyN4(data) {
  let darkCount = 0;
  const modulesCount = data.data.length;

  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i];

  const k = Math.abs(Math.ceil(darkCount * 100 / modulesCount / 5) - 10);
  return k * PenaltyScores.N4;
};
/**
 * Return mask value at given position
 *
 * @param  {Number} maskPattern Pattern reference value
 * @param  {Number} i           Row
 * @param  {Number} j           Column
 * @return {Boolean}            Mask value
 */


function getMaskAt(maskPattern, i, j) {
  switch (maskPattern) {
    case exports.Patterns.PATTERN000:
      return (i + j) % 2 === 0;

    case exports.Patterns.PATTERN001:
      return i % 2 === 0;

    case exports.Patterns.PATTERN010:
      return j % 3 === 0;

    case exports.Patterns.PATTERN011:
      return (i + j) % 3 === 0;

    case exports.Patterns.PATTERN100:
      return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0;

    case exports.Patterns.PATTERN101:
      return i * j % 2 + i * j % 3 === 0;

    case exports.Patterns.PATTERN110:
      return (i * j % 2 + i * j % 3) % 2 === 0;

    case exports.Patterns.PATTERN111:
      return (i * j % 3 + (i + j) % 2) % 2 === 0;

    default:
      throw new Error('bad maskPattern:' + maskPattern);
  }
}
/**
 * Apply a mask pattern to a BitMatrix
 *
 * @param  {Number}    pattern Pattern reference number
 * @param  {BitMatrix} data    BitMatrix data
 */


exports.applyMask = function applyMask(pattern, data) {
  const size = data.size;

  for (let col = 0; col < size; col++) {
    for (let row = 0; row < size; row++) {
      if (data.isReserved(row, col)) continue;
      data.xor(row, col, getMaskAt(pattern, row, col));
    }
  }
};
/**
 * Returns the best mask pattern for data
 *
 * @param  {BitMatrix} data
 * @return {Number} Mask pattern reference number
 */


exports.getBestMask = function getBestMask(data, setupFormatFunc) {
  const numPatterns = Object.keys(exports.Patterns).length;
  let bestPattern = 0;
  let lowerPenalty = Infinity;

  for (let p = 0; p < numPatterns; p++) {
    setupFormatFunc(p);
    exports.applyMask(p, data); // Calculate penalty

    const penalty = exports.getPenaltyN1(data) + exports.getPenaltyN2(data) + exports.getPenaltyN3(data) + exports.getPenaltyN4(data); // Undo previously applied mask

    exports.applyMask(p, data);

    if (penalty < lowerPenalty) {
      lowerPenalty = penalty;
      bestPattern = p;
    }
  }

  return bestPattern;
};

/***/ }),

/***/ 85382:
/*!*******************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/mode.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const VersionCheck = __webpack_require__(/*! ./version-check */ 33127);

const Regex = __webpack_require__(/*! ./regex */ 64217);
/**
 * Numeric mode encodes data from the decimal digit set (0 - 9)
 * (byte values 30HEX to 39HEX).
 * Normally, 3 data characters are represented by 10 bits.
 *
 * @type {Object}
 */


exports.NUMERIC = {
  id: 'Numeric',
  bit: 1 << 0,
  ccBits: [10, 12, 14]
};
/**
 * Alphanumeric mode encodes data from a set of 45 characters,
 * i.e. 10 numeric digits (0 - 9),
 *      26 alphabetic characters (A - Z),
 *   and 9 symbols (SP, $, %, *, +, -, ., /, :).
 * Normally, two input characters are represented by 11 bits.
 *
 * @type {Object}
 */

exports.ALPHANUMERIC = {
  id: 'Alphanumeric',
  bit: 1 << 1,
  ccBits: [9, 11, 13]
};
/**
 * In byte mode, data is encoded at 8 bits per character.
 *
 * @type {Object}
 */

exports.BYTE = {
  id: 'Byte',
  bit: 1 << 2,
  ccBits: [8, 16, 16]
};
/**
 * The Kanji mode efficiently encodes Kanji characters in accordance with
 * the Shift JIS system based on JIS X 0208.
 * The Shift JIS values are shifted from the JIS X 0208 values.
 * JIS X 0208 gives details of the shift coded representation.
 * Each two-byte character value is compacted to a 13-bit binary codeword.
 *
 * @type {Object}
 */

exports.KANJI = {
  id: 'Kanji',
  bit: 1 << 3,
  ccBits: [8, 10, 12]
};
/**
 * Mixed mode will contain a sequences of data in a combination of any of
 * the modes described above
 *
 * @type {Object}
 */

exports.MIXED = {
  bit: -1
};
/**
 * Returns the number of bits needed to store the data length
 * according to QR Code specifications.
 *
 * @param  {Mode}   mode    Data mode
 * @param  {Number} version QR Code version
 * @return {Number}         Number of bits
 */

exports.getCharCountIndicator = function getCharCountIndicator(mode, version) {
  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode);

  if (!VersionCheck.isValid(version)) {
    throw new Error('Invalid version: ' + version);
  }

  if (version >= 1 && version < 10) return mode.ccBits[0];else if (version < 27) return mode.ccBits[1];
  return mode.ccBits[2];
};
/**
 * Returns the most efficient mode to store the specified data
 *
 * @param  {String} dataStr Input data string
 * @return {Mode}           Best mode
 */


exports.getBestModeForData = function getBestModeForData(dataStr) {
  if (Regex.testNumeric(dataStr)) return exports.NUMERIC;else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC;else if (Regex.testKanji(dataStr)) return exports.KANJI;else return exports.BYTE;
};
/**
 * Return mode name as string
 *
 * @param {Mode} mode Mode object
 * @returns {String}  Mode name
 */


exports.toString = function toString(mode) {
  if (mode && mode.id) return mode.id;
  throw new Error('Invalid mode');
};
/**
 * Check if input param is a valid mode object
 *
 * @param   {Mode}    mode Mode object
 * @returns {Boolean} True if valid mode, false otherwise
 */


exports.isValid = function isValid(mode) {
  return mode && mode.bit && mode.ccBits;
};
/**
 * Get mode object from its name
 *
 * @param   {String} string Mode name
 * @returns {Mode}          Mode object
 */


function fromString(string) {
  if (typeof string !== 'string') {
    throw new Error('Param is not a string');
  }

  const lcStr = string.toLowerCase();

  switch (lcStr) {
    case 'numeric':
      return exports.NUMERIC;

    case 'alphanumeric':
      return exports.ALPHANUMERIC;

    case 'kanji':
      return exports.KANJI;

    case 'byte':
      return exports.BYTE;

    default:
      throw new Error('Unknown mode: ' + string);
  }
}
/**
 * Returns mode from a value.
 * If value is not a valid mode, returns defaultValue
 *
 * @param  {Mode|String} value        Encoding mode
 * @param  {Mode}        defaultValue Fallback value
 * @return {Mode}                     Encoding mode
 */


exports.from = function from(value, defaultValue) {
  if (exports.isValid(value)) {
    return value;
  }

  try {
    return fromString(value);
  } catch (e) {
    return defaultValue;
  }
};

/***/ }),

/***/ 25587:
/*!***************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/numeric-data.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Mode = __webpack_require__(/*! ./mode */ 85382);

function NumericData(data) {
  this.mode = Mode.NUMERIC;
  this.data = data.toString();
}

NumericData.getBitsLength = function getBitsLength(length) {
  return 10 * Math.floor(length / 3) + (length % 3 ? length % 3 * 3 + 1 : 0);
};

NumericData.prototype.getLength = function getLength() {
  return this.data.length;
};

NumericData.prototype.getBitsLength = function getBitsLength() {
  return NumericData.getBitsLength(this.data.length);
};

NumericData.prototype.write = function write(bitBuffer) {
  let i, group, value; // The input data string is divided into groups of three digits,
  // and each group is converted to its 10-bit binary equivalent.

  for (i = 0; i + 3 <= this.data.length; i += 3) {
    group = this.data.substr(i, 3);
    value = parseInt(group, 10);
    bitBuffer.put(value, 10);
  } // If the number of input digits is not an exact multiple of three,
  // the final one or two digits are converted to 4 or 7 bits respectively.


  const remainingNum = this.data.length - i;

  if (remainingNum > 0) {
    group = this.data.substr(i);
    value = parseInt(group, 10);
    bitBuffer.put(value, remainingNum * 3 + 1);
  }
};

module.exports = NumericData;

/***/ }),

/***/ 38913:
/*!*************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/polynomial.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const GF = __webpack_require__(/*! ./galois-field */ 33366);
/**
 * Multiplies two polynomials inside Galois Field
 *
 * @param  {Uint8Array} p1 Polynomial
 * @param  {Uint8Array} p2 Polynomial
 * @return {Uint8Array}    Product of p1 and p2
 */


exports.mul = function mul(p1, p2) {
  const coeff = new Uint8Array(p1.length + p2.length - 1);

  for (let i = 0; i < p1.length; i++) {
    for (let j = 0; j < p2.length; j++) {
      coeff[i + j] ^= GF.mul(p1[i], p2[j]);
    }
  }

  return coeff;
};
/**
 * Calculate the remainder of polynomials division
 *
 * @param  {Uint8Array} divident Polynomial
 * @param  {Uint8Array} divisor  Polynomial
 * @return {Uint8Array}          Remainder
 */


exports.mod = function mod(divident, divisor) {
  let result = new Uint8Array(divident);

  while (result.length - divisor.length >= 0) {
    const coeff = result[0];

    for (let i = 0; i < divisor.length; i++) {
      result[i] ^= GF.mul(divisor[i], coeff);
    } // remove all zeros from buffer head


    let offset = 0;

    while (offset < result.length && result[offset] === 0) offset++;

    result = result.slice(offset);
  }

  return result;
};
/**
 * Generate an irreducible generator polynomial of specified degree
 * (used by Reed-Solomon encoder)
 *
 * @param  {Number} degree Degree of the generator polynomial
 * @return {Uint8Array}    Buffer containing polynomial coefficients
 */


exports.generateECPolynomial = function generateECPolynomial(degree) {
  let poly = new Uint8Array([1]);

  for (let i = 0; i < degree; i++) {
    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]));
  }

  return poly;
};

/***/ }),

/***/ 9052:
/*!*********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/qrcode.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Utils = __webpack_require__(/*! ./utils */ 46832);

const ECLevel = __webpack_require__(/*! ./error-correction-level */ 91402);

const BitBuffer = __webpack_require__(/*! ./bit-buffer */ 10011);

const BitMatrix = __webpack_require__(/*! ./bit-matrix */ 43037);

const AlignmentPattern = __webpack_require__(/*! ./alignment-pattern */ 78285);

const FinderPattern = __webpack_require__(/*! ./finder-pattern */ 99159);

const MaskPattern = __webpack_require__(/*! ./mask-pattern */ 45481);

const ECCode = __webpack_require__(/*! ./error-correction-code */ 70080);

const ReedSolomonEncoder = __webpack_require__(/*! ./reed-solomon-encoder */ 22354);

const Version = __webpack_require__(/*! ./version */ 94624);

const FormatInfo = __webpack_require__(/*! ./format-info */ 74214);

const Mode = __webpack_require__(/*! ./mode */ 85382);

const Segments = __webpack_require__(/*! ./segments */ 3809);
/**
 * QRCode for JavaScript
 *
 * modified by Ryan Day for nodejs support
 * Copyright (c) 2011 Ryan Day
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
//---------------------------------------------------------------------
// QRCode for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//   http://www.opensource.org/licenses/mit-license.php
//
// The word "QR Code" is registered trademark of
// DENSO WAVE INCORPORATED
//   http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
*/

/**
 * Add finder patterns bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */


function setupFinderPattern(matrix, version) {
  const size = matrix.size;
  const pos = FinderPattern.getPositions(version);

  for (let i = 0; i < pos.length; i++) {
    const row = pos[i][0];
    const col = pos[i][1];

    for (let r = -1; r <= 7; r++) {
      if (row + r <= -1 || size <= row + r) continue;

      for (let c = -1; c <= 7; c++) {
        if (col + c <= -1 || size <= col + c) continue;

        if (r >= 0 && r <= 6 && (c === 0 || c === 6) || c >= 0 && c <= 6 && (r === 0 || r === 6) || r >= 2 && r <= 4 && c >= 2 && c <= 4) {
          matrix.set(row + r, col + c, true, true);
        } else {
          matrix.set(row + r, col + c, false, true);
        }
      }
    }
  }
}
/**
 * Add timing pattern bits to matrix
 *
 * Note: this function must be called before {@link setupAlignmentPattern}
 *
 * @param  {BitMatrix} matrix Modules matrix
 */


function setupTimingPattern(matrix) {
  const size = matrix.size;

  for (let r = 8; r < size - 8; r++) {
    const value = r % 2 === 0;
    matrix.set(r, 6, value, true);
    matrix.set(6, r, value, true);
  }
}
/**
 * Add alignment patterns bits to matrix
 *
 * Note: this function must be called after {@link setupTimingPattern}
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */


function setupAlignmentPattern(matrix, version) {
  const pos = AlignmentPattern.getPositions(version);

  for (let i = 0; i < pos.length; i++) {
    const row = pos[i][0];
    const col = pos[i][1];

    for (let r = -2; r <= 2; r++) {
      for (let c = -2; c <= 2; c++) {
        if (r === -2 || r === 2 || c === -2 || c === 2 || r === 0 && c === 0) {
          matrix.set(row + r, col + c, true, true);
        } else {
          matrix.set(row + r, col + c, false, true);
        }
      }
    }
  }
}
/**
 * Add version info bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */


function setupVersionInfo(matrix, version) {
  const size = matrix.size;
  const bits = Version.getEncodedBits(version);
  let row, col, mod;

  for (let i = 0; i < 18; i++) {
    row = Math.floor(i / 3);
    col = i % 3 + size - 8 - 3;
    mod = (bits >> i & 1) === 1;
    matrix.set(row, col, mod, true);
    matrix.set(col, row, mod, true);
  }
}
/**
 * Add format info bits to matrix
 *
 * @param  {BitMatrix} matrix               Modules matrix
 * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level
 * @param  {Number}    maskPattern          Mask pattern reference value
 */


function setupFormatInfo(matrix, errorCorrectionLevel, maskPattern) {
  const size = matrix.size;
  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern);
  let i, mod;

  for (i = 0; i < 15; i++) {
    mod = (bits >> i & 1) === 1; // vertical

    if (i < 6) {
      matrix.set(i, 8, mod, true);
    } else if (i < 8) {
      matrix.set(i + 1, 8, mod, true);
    } else {
      matrix.set(size - 15 + i, 8, mod, true);
    } // horizontal


    if (i < 8) {
      matrix.set(8, size - i - 1, mod, true);
    } else if (i < 9) {
      matrix.set(8, 15 - i - 1 + 1, mod, true);
    } else {
      matrix.set(8, 15 - i - 1, mod, true);
    }
  } // fixed module


  matrix.set(size - 8, 8, 1, true);
}
/**
 * Add encoded data bits to matrix
 *
 * @param  {BitMatrix}  matrix Modules matrix
 * @param  {Uint8Array} data   Data codewords
 */


function setupData(matrix, data) {
  const size = matrix.size;
  let inc = -1;
  let row = size - 1;
  let bitIndex = 7;
  let byteIndex = 0;

  for (let col = size - 1; col > 0; col -= 2) {
    if (col === 6) col--;

    while (true) {
      for (let c = 0; c < 2; c++) {
        if (!matrix.isReserved(row, col - c)) {
          let dark = false;

          if (byteIndex < data.length) {
            dark = (data[byteIndex] >>> bitIndex & 1) === 1;
          }

          matrix.set(row, col - c, dark);
          bitIndex--;

          if (bitIndex === -1) {
            byteIndex++;
            bitIndex = 7;
          }
        }
      }

      row += inc;

      if (row < 0 || size <= row) {
        row -= inc;
        inc = -inc;
        break;
      }
    }
  }
}
/**
 * Create encoded codewords from data input
 *
 * @param  {Number}   version              QR Code version
 * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level
 * @param  {ByteData} data                 Data input
 * @return {Uint8Array}                    Buffer containing encoded codewords
 */


function createData(version, errorCorrectionLevel, segments) {
  // Prepare data buffer
  const buffer = new BitBuffer();
  segments.forEach(function (data) {
    // prefix data with mode indicator (4 bits)
    buffer.put(data.mode.bit, 4); // Prefix data with character count indicator.
    // The character count indicator is a string of bits that represents the
    // number of characters that are being encoded.
    // The character count indicator must be placed after the mode indicator
    // and must be a certain number of bits long, depending on the QR version
    // and data mode
    // @see {@link Mode.getCharCountIndicator}.

    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version)); // add binary data sequence to buffer

    data.write(buffer);
  }); // Calculate required number of bits

  const totalCodewords = Utils.getSymbolTotalCodewords(version);
  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel);
  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8; // Add a terminator.
  // If the bit string is shorter than the total number of required bits,
  // a terminator of up to four 0s must be added to the right side of the string.
  // If the bit string is more than four bits shorter than the required number of bits,
  // add four 0s to the end.

  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {
    buffer.put(0, 4);
  } // If the bit string is fewer than four bits shorter, add only the number of 0s that
  // are needed to reach the required number of bits.
  // After adding the terminator, if the number of bits in the string is not a multiple of 8,
  // pad the string on the right with 0s to make the string's length a multiple of 8.


  while (buffer.getLengthInBits() % 8 !== 0) {
    buffer.putBit(0);
  } // Add pad bytes if the string is still shorter than the total number of required bits.
  // Extend the buffer to fill the data capacity of the symbol corresponding to
  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)
  // and 00010001 (0x11) alternately.


  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8;

  for (let i = 0; i < remainingByte; i++) {
    buffer.put(i % 2 ? 0x11 : 0xEC, 8);
  }

  return createCodewords(buffer, version, errorCorrectionLevel);
}
/**
 * Encode input data with Reed-Solomon and return codewords with
 * relative error correction bits
 *
 * @param  {BitBuffer} bitBuffer            Data to encode
 * @param  {Number}    version              QR Code version
 * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level
 * @return {Uint8Array}                     Buffer containing encoded codewords
 */


function createCodewords(bitBuffer, version, errorCorrectionLevel) {
  // Total codewords for this QR code version (Data + Error correction)
  const totalCodewords = Utils.getSymbolTotalCodewords(version); // Total number of error correction codewords

  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel); // Total number of data codewords

  const dataTotalCodewords = totalCodewords - ecTotalCodewords; // Total number of blocks

  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel); // Calculate how many blocks each group should contain

  const blocksInGroup2 = totalCodewords % ecTotalBlocks;
  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2;
  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks);
  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks);
  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1; // Number of EC codewords is the same for both groups

  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1; // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount

  const rs = new ReedSolomonEncoder(ecCount);
  let offset = 0;
  const dcData = new Array(ecTotalBlocks);
  const ecData = new Array(ecTotalBlocks);
  let maxDataSize = 0;
  const buffer = new Uint8Array(bitBuffer.buffer); // Divide the buffer into the required number of blocks

  for (let b = 0; b < ecTotalBlocks; b++) {
    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2; // extract a block of data from buffer

    dcData[b] = buffer.slice(offset, offset + dataSize); // Calculate EC codewords for this data block

    ecData[b] = rs.encode(dcData[b]);
    offset += dataSize;
    maxDataSize = Math.max(maxDataSize, dataSize);
  } // Create final data
  // Interleave the data and error correction codewords from each block


  const data = new Uint8Array(totalCodewords);
  let index = 0;
  let i, r; // Add data codewords

  for (i = 0; i < maxDataSize; i++) {
    for (r = 0; r < ecTotalBlocks; r++) {
      if (i < dcData[r].length) {
        data[index++] = dcData[r][i];
      }
    }
  } // Apped EC codewords


  for (i = 0; i < ecCount; i++) {
    for (r = 0; r < ecTotalBlocks; r++) {
      data[index++] = ecData[r][i];
    }
  }

  return data;
}
/**
 * Build QR Code symbol
 *
 * @param  {String} data                 Input string
 * @param  {Number} version              QR Code version
 * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level
 * @param  {MaskPattern} maskPattern     Mask pattern
 * @return {Object}                      Object containing symbol data
 */


function createSymbol(data, version, errorCorrectionLevel, maskPattern) {
  let segments;

  if (Array.isArray(data)) {
    segments = Segments.fromArray(data);
  } else if (typeof data === 'string') {
    let estimatedVersion = version;

    if (!estimatedVersion) {
      const rawSegments = Segments.rawSplit(data); // Estimate best version that can contain raw splitted segments

      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel);
    } // Build optimized segments
    // If estimated version is undefined, try with the highest version


    segments = Segments.fromString(data, estimatedVersion || 40);
  } else {
    throw new Error('Invalid data');
  } // Get the min version that can contain data


  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel); // If no version is found, data cannot be stored

  if (!bestVersion) {
    throw new Error('The amount of data is too big to be stored in a QR Code');
  } // If not specified, use min version as default


  if (!version) {
    version = bestVersion; // Check if the specified version can contain the data
  } else if (version < bestVersion) {
    throw new Error('\n' + 'The chosen QR Code version cannot contain this amount of data.\n' + 'Minimum version required to store current data is: ' + bestVersion + '.\n');
  }

  const dataBits = createData(version, errorCorrectionLevel, segments); // Allocate matrix buffer

  const moduleCount = Utils.getSymbolSize(version);
  const modules = new BitMatrix(moduleCount); // Add function modules

  setupFinderPattern(modules, version);
  setupTimingPattern(modules);
  setupAlignmentPattern(modules, version); // Add temporary dummy bits for format info just to set them as reserved.
  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}
  // since the masking operation must be performed only on the encoding region.
  // These blocks will be replaced with correct values later in code.

  setupFormatInfo(modules, errorCorrectionLevel, 0);

  if (version >= 7) {
    setupVersionInfo(modules, version);
  } // Add data codewords


  setupData(modules, dataBits);

  if (isNaN(maskPattern)) {
    // Find best mask pattern
    maskPattern = MaskPattern.getBestMask(modules, setupFormatInfo.bind(null, modules, errorCorrectionLevel));
  } // Apply mask pattern


  MaskPattern.applyMask(maskPattern, modules); // Replace format info bits with correct values

  setupFormatInfo(modules, errorCorrectionLevel, maskPattern);
  return {
    modules: modules,
    version: version,
    errorCorrectionLevel: errorCorrectionLevel,
    maskPattern: maskPattern,
    segments: segments
  };
}
/**
 * QR Code
 *
 * @param {String | Array} data                 Input data
 * @param {Object} options                      Optional configurations
 * @param {Number} options.version              QR Code version
 * @param {String} options.errorCorrectionLevel Error correction level
 * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis
 */


exports.create = function create(data, options) {
  if (typeof data === 'undefined' || data === '') {
    throw new Error('No input text');
  }

  let errorCorrectionLevel = ECLevel.M;
  let version;
  let mask;

  if (typeof options !== 'undefined') {
    // Use higher error correction level as default
    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M);
    version = Version.from(options.version);
    mask = MaskPattern.from(options.maskPattern);

    if (options.toSJISFunc) {
      Utils.setToSJISFunction(options.toSJISFunc);
    }
  }

  return createSymbol(data, version, errorCorrectionLevel, mask);
};

/***/ }),

/***/ 22354:
/*!***********************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/reed-solomon-encoder.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

const Polynomial = __webpack_require__(/*! ./polynomial */ 38913);

function ReedSolomonEncoder(degree) {
  this.genPoly = undefined;
  this.degree = degree;
  if (this.degree) this.initialize(this.degree);
}
/**
 * Initialize the encoder.
 * The input param should correspond to the number of error correction codewords.
 *
 * @param  {Number} degree
 */


ReedSolomonEncoder.prototype.initialize = function initialize(degree) {
  // create an irreducible generator polynomial
  this.degree = degree;
  this.genPoly = Polynomial.generateECPolynomial(this.degree);
};
/**
 * Encodes a chunk of data
 *
 * @param  {Uint8Array} data Buffer containing input data
 * @return {Uint8Array}      Buffer containing encoded data
 */


ReedSolomonEncoder.prototype.encode = function encode(data) {
  if (!this.genPoly) {
    throw new Error('Encoder not initialized');
  } // Calculate EC for this data block
  // extends data size to data+genPoly size


  const paddedData = new Uint8Array(data.length + this.degree);
  paddedData.set(data); // The error correction codewords are the remainder after dividing the data codewords
  // by a generator polynomial

  const remainder = Polynomial.mod(paddedData, this.genPoly); // return EC data blocks (last n byte, where n is the degree of genPoly)
  // If coefficients number in remainder are less than genPoly degree,
  // pad with 0s to the left to reach the needed number of coefficients

  const start = this.degree - remainder.length;

  if (start > 0) {
    const buff = new Uint8Array(this.degree);
    buff.set(remainder, start);
    return buff;
  }

  return remainder;
};

module.exports = ReedSolomonEncoder;

/***/ }),

/***/ 64217:
/*!********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/regex.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

const numeric = '[0-9]+';
const alphanumeric = '[A-Z $%*+\\-./:]+';
let kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' + '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' + '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' + '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+';
kanji = kanji.replace(/u/g, '\\u');
const byte = '(?:(?![A-Z0-9 $%*+\\-./:]|' + kanji + ')(?:.|[\r\n]))+';
exports.KANJI = new RegExp(kanji, 'g');
exports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\-./:]+', 'g');
exports.BYTE = new RegExp(byte, 'g');
exports.NUMERIC = new RegExp(numeric, 'g');
exports.ALPHANUMERIC = new RegExp(alphanumeric, 'g');
const TEST_KANJI = new RegExp('^' + kanji + '$');
const TEST_NUMERIC = new RegExp('^' + numeric + '$');
const TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\-./:]+$');

exports.testKanji = function testKanji(str) {
  return TEST_KANJI.test(str);
};

exports.testNumeric = function testNumeric(str) {
  return TEST_NUMERIC.test(str);
};

exports.testAlphanumeric = function testAlphanumeric(str) {
  return TEST_ALPHANUMERIC.test(str);
};

/***/ }),

/***/ 3809:
/*!***********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/segments.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Mode = __webpack_require__(/*! ./mode */ 85382);

const NumericData = __webpack_require__(/*! ./numeric-data */ 25587);

const AlphanumericData = __webpack_require__(/*! ./alphanumeric-data */ 6);

const ByteData = __webpack_require__(/*! ./byte-data */ 95578);

const KanjiData = __webpack_require__(/*! ./kanji-data */ 95601);

const Regex = __webpack_require__(/*! ./regex */ 64217);

const Utils = __webpack_require__(/*! ./utils */ 46832);

const dijkstra = __webpack_require__(/*! dijkstrajs */ 26348);
/**
 * Returns UTF8 byte length
 *
 * @param  {String} str Input string
 * @return {Number}     Number of byte
 */


function getStringByteLength(str) {
  return unescape(encodeURIComponent(str)).length;
}
/**
 * Get a list of segments of the specified mode
 * from a string
 *
 * @param  {Mode}   mode Segment mode
 * @param  {String} str  String to process
 * @return {Array}       Array of object with segments data
 */


function getSegments(regex, mode, str) {
  const segments = [];
  let result;

  while ((result = regex.exec(str)) !== null) {
    segments.push({
      data: result[0],
      index: result.index,
      mode: mode,
      length: result[0].length
    });
  }

  return segments;
}
/**
 * Extracts a series of segments with the appropriate
 * modes from a string
 *
 * @param  {String} dataStr Input string
 * @return {Array}          Array of object with segments data
 */


function getSegmentsFromString(dataStr) {
  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr);
  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr);
  let byteSegs;
  let kanjiSegs;

  if (Utils.isKanjiModeEnabled()) {
    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr);
    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr);
  } else {
    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr);
    kanjiSegs = [];
  }

  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs);
  return segs.sort(function (s1, s2) {
    return s1.index - s2.index;
  }).map(function (obj) {
    return {
      data: obj.data,
      mode: obj.mode,
      length: obj.length
    };
  });
}
/**
 * Returns how many bits are needed to encode a string of
 * specified length with the specified mode
 *
 * @param  {Number} length String length
 * @param  {Mode} mode     Segment mode
 * @return {Number}        Bit length
 */


function getSegmentBitsLength(length, mode) {
  switch (mode) {
    case Mode.NUMERIC:
      return NumericData.getBitsLength(length);

    case Mode.ALPHANUMERIC:
      return AlphanumericData.getBitsLength(length);

    case Mode.KANJI:
      return KanjiData.getBitsLength(length);

    case Mode.BYTE:
      return ByteData.getBitsLength(length);
  }
}
/**
 * Merges adjacent segments which have the same mode
 *
 * @param  {Array} segs Array of object with segments data
 * @return {Array}      Array of object with segments data
 */


function mergeSegments(segs) {
  return segs.reduce(function (acc, curr) {
    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null;

    if (prevSeg && prevSeg.mode === curr.mode) {
      acc[acc.length - 1].data += curr.data;
      return acc;
    }

    acc.push(curr);
    return acc;
  }, []);
}
/**
 * Generates a list of all possible nodes combination which
 * will be used to build a segments graph.
 *
 * Nodes are divided by groups. Each group will contain a list of all the modes
 * in which is possible to encode the given text.
 *
 * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.
 * The group for '12345' will contain then 3 objects, one for each
 * possible encoding mode.
 *
 * Each node represents a possible segment.
 *
 * @param  {Array} segs Array of object with segments data
 * @return {Array}      Array of object with segments data
 */


function buildNodes(segs) {
  const nodes = [];

  for (let i = 0; i < segs.length; i++) {
    const seg = segs[i];

    switch (seg.mode) {
      case Mode.NUMERIC:
        nodes.push([seg, {
          data: seg.data,
          mode: Mode.ALPHANUMERIC,
          length: seg.length
        }, {
          data: seg.data,
          mode: Mode.BYTE,
          length: seg.length
        }]);
        break;

      case Mode.ALPHANUMERIC:
        nodes.push([seg, {
          data: seg.data,
          mode: Mode.BYTE,
          length: seg.length
        }]);
        break;

      case Mode.KANJI:
        nodes.push([seg, {
          data: seg.data,
          mode: Mode.BYTE,
          length: getStringByteLength(seg.data)
        }]);
        break;

      case Mode.BYTE:
        nodes.push([{
          data: seg.data,
          mode: Mode.BYTE,
          length: getStringByteLength(seg.data)
        }]);
    }
  }

  return nodes;
}
/**
 * Builds a graph from a list of nodes.
 * All segments in each node group will be connected with all the segments of
 * the next group and so on.
 *
 * At each connection will be assigned a weight depending on the
 * segment's byte length.
 *
 * @param  {Array} nodes    Array of object with segments data
 * @param  {Number} version QR Code version
 * @return {Object}         Graph of all possible segments
 */


function buildGraph(nodes, version) {
  const table = {};
  const graph = {
    start: {}
  };
  let prevNodeIds = ['start'];

  for (let i = 0; i < nodes.length; i++) {
    const nodeGroup = nodes[i];
    const currentNodeIds = [];

    for (let j = 0; j < nodeGroup.length; j++) {
      const node = nodeGroup[j];
      const key = '' + i + j;
      currentNodeIds.push(key);
      table[key] = {
        node: node,
        lastCount: 0
      };
      graph[key] = {};

      for (let n = 0; n < prevNodeIds.length; n++) {
        const prevNodeId = prevNodeIds[n];

        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {
          graph[prevNodeId][key] = getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) - getSegmentBitsLength(table[prevNodeId].lastCount, node.mode);
          table[prevNodeId].lastCount += node.length;
        } else {
          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length;
          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) + 4 + Mode.getCharCountIndicator(node.mode, version); // switch cost
        }
      }
    }

    prevNodeIds = currentNodeIds;
  }

  for (let n = 0; n < prevNodeIds.length; n++) {
    graph[prevNodeIds[n]].end = 0;
  }

  return {
    map: graph,
    table: table
  };
}
/**
 * Builds a segment from a specified data and mode.
 * If a mode is not specified, the more suitable will be used.
 *
 * @param  {String} data             Input data
 * @param  {Mode | String} modesHint Data mode
 * @return {Segment}                 Segment
 */


function buildSingleSegment(data, modesHint) {
  let mode;
  const bestMode = Mode.getBestModeForData(data);
  mode = Mode.from(modesHint, bestMode); // Make sure data can be encoded

  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {
    throw new Error('"' + data + '"' + ' cannot be encoded with mode ' + Mode.toString(mode) + '.\n Suggested mode is: ' + Mode.toString(bestMode));
  } // Use Mode.BYTE if Kanji support is disabled


  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {
    mode = Mode.BYTE;
  }

  switch (mode) {
    case Mode.NUMERIC:
      return new NumericData(data);

    case Mode.ALPHANUMERIC:
      return new AlphanumericData(data);

    case Mode.KANJI:
      return new KanjiData(data);

    case Mode.BYTE:
      return new ByteData(data);
  }
}
/**
 * Builds a list of segments from an array.
 * Array can contain Strings or Objects with segment's info.
 *
 * For each item which is a string, will be generated a segment with the given
 * string and the more appropriate encoding mode.
 *
 * For each item which is an object, will be generated a segment with the given
 * data and mode.
 * Objects must contain at least the property "data".
 * If property "mode" is not present, the more suitable mode will be used.
 *
 * @param  {Array} array Array of objects with segments data
 * @return {Array}       Array of Segments
 */


exports.fromArray = function fromArray(array) {
  return array.reduce(function (acc, seg) {
    if (typeof seg === 'string') {
      acc.push(buildSingleSegment(seg, null));
    } else if (seg.data) {
      acc.push(buildSingleSegment(seg.data, seg.mode));
    }

    return acc;
  }, []);
};
/**
 * Builds an optimized sequence of segments from a string,
 * which will produce the shortest possible bitstream.
 *
 * @param  {String} data    Input string
 * @param  {Number} version QR Code version
 * @return {Array}          Array of segments
 */


exports.fromString = function fromString(data, version) {
  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled());
  const nodes = buildNodes(segs);
  const graph = buildGraph(nodes, version);
  const path = dijkstra.find_path(graph.map, 'start', 'end');
  const optimizedSegs = [];

  for (let i = 1; i < path.length - 1; i++) {
    optimizedSegs.push(graph.table[path[i]].node);
  }

  return exports.fromArray(mergeSegments(optimizedSegs));
};
/**
 * Splits a string in various segments with the modes which
 * best represent their content.
 * The produced segments are far from being optimized.
 * The output of this function is only used to estimate a QR Code version
 * which may contain the data.
 *
 * @param  {string} data Input string
 * @return {Array}       Array of segments
 */


exports.rawSplit = function rawSplit(data) {
  return exports.fromArray(getSegmentsFromString(data, Utils.isKanjiModeEnabled()));
};

/***/ }),

/***/ 46832:
/*!********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/utils.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

let toSJISFunction;
const CODEWORDS_COUNT = [0, // Not used
26, 44, 70, 100, 134, 172, 196, 242, 292, 346, 404, 466, 532, 581, 655, 733, 815, 901, 991, 1085, 1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185, 2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706];
/**
 * Returns the QR Code size for the specified version
 *
 * @param  {Number} version QR Code version
 * @return {Number}         size of QR code
 */

exports.getSymbolSize = function getSymbolSize(version) {
  if (!version) throw new Error('"version" cannot be null or undefined');
  if (version < 1 || version > 40) throw new Error('"version" should be in range from 1 to 40');
  return version * 4 + 17;
};
/**
 * Returns the total number of codewords used to store data and EC information.
 *
 * @param  {Number} version QR Code version
 * @return {Number}         Data length in bits
 */


exports.getSymbolTotalCodewords = function getSymbolTotalCodewords(version) {
  return CODEWORDS_COUNT[version];
};
/**
 * Encode data with Bose-Chaudhuri-Hocquenghem
 *
 * @param  {Number} data Value to encode
 * @return {Number}      Encoded value
 */


exports.getBCHDigit = function (data) {
  let digit = 0;

  while (data !== 0) {
    digit++;
    data >>>= 1;
  }

  return digit;
};

exports.setToSJISFunction = function setToSJISFunction(f) {
  if (typeof f !== 'function') {
    throw new Error('"toSJISFunc" is not a valid function.');
  }

  toSJISFunction = f;
};

exports.isKanjiModeEnabled = function () {
  return typeof toSJISFunction !== 'undefined';
};

exports.toSJIS = function toSJIS(kanji) {
  return toSJISFunction(kanji);
};

/***/ }),

/***/ 33127:
/*!****************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/version-check.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

/**
 * Check if QR Code version is valid
 *
 * @param  {Number}  version QR Code version
 * @return {Boolean}         true if valid version, false otherwise
 */
exports.isValid = function isValid(version) {
  return !isNaN(version) && version >= 1 && version <= 40;
};

/***/ }),

/***/ 94624:
/*!**********************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/core/version.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Utils = __webpack_require__(/*! ./utils */ 46832);

const ECCode = __webpack_require__(/*! ./error-correction-code */ 70080);

const ECLevel = __webpack_require__(/*! ./error-correction-level */ 91402);

const Mode = __webpack_require__(/*! ./mode */ 85382);

const VersionCheck = __webpack_require__(/*! ./version-check */ 33127); // Generator polynomial used to encode version information


const G18 = 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0;
const G18_BCH = Utils.getBCHDigit(G18);

function getBestVersionForDataLength(mode, length, errorCorrectionLevel) {
  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {
      return currentVersion;
    }
  }

  return undefined;
}

function getReservedBitsCount(mode, version) {
  // Character count indicator + mode indicator bits
  return Mode.getCharCountIndicator(mode, version) + 4;
}

function getTotalBitsFromDataArray(segments, version) {
  let totalBits = 0;
  segments.forEach(function (data) {
    const reservedBits = getReservedBitsCount(data.mode, version);
    totalBits += reservedBits + data.getBitsLength();
  });
  return totalBits;
}

function getBestVersionForMixedData(segments, errorCorrectionLevel) {
  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {
    const length = getTotalBitsFromDataArray(segments, currentVersion);

    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {
      return currentVersion;
    }
  }

  return undefined;
}
/**
 * Returns version number from a value.
 * If value is not a valid version, returns defaultValue
 *
 * @param  {Number|String} value        QR Code version
 * @param  {Number}        defaultValue Fallback value
 * @return {Number}                     QR Code version number
 */


exports.from = function from(value, defaultValue) {
  if (VersionCheck.isValid(value)) {
    return parseInt(value, 10);
  }

  return defaultValue;
};
/**
 * Returns how much data can be stored with the specified QR code version
 * and error correction level
 *
 * @param  {Number} version              QR Code version (1-40)
 * @param  {Number} errorCorrectionLevel Error correction level
 * @param  {Mode}   mode                 Data mode
 * @return {Number}                      Quantity of storable data
 */


exports.getCapacity = function getCapacity(version, errorCorrectionLevel, mode) {
  if (!VersionCheck.isValid(version)) {
    throw new Error('Invalid QR Code version');
  } // Use Byte mode as default


  if (typeof mode === 'undefined') mode = Mode.BYTE; // Total codewords for this QR code version (Data + Error correction)

  const totalCodewords = Utils.getSymbolTotalCodewords(version); // Total number of error correction codewords

  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel); // Total number of data codewords

  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8;
  if (mode === Mode.MIXED) return dataTotalCodewordsBits;
  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version); // Return max number of storable codewords

  switch (mode) {
    case Mode.NUMERIC:
      return Math.floor(usableBits / 10 * 3);

    case Mode.ALPHANUMERIC:
      return Math.floor(usableBits / 11 * 2);

    case Mode.KANJI:
      return Math.floor(usableBits / 13);

    case Mode.BYTE:
    default:
      return Math.floor(usableBits / 8);
  }
};
/**
 * Returns the minimum version needed to contain the amount of data
 *
 * @param  {Segment} data                    Segment of data
 * @param  {Number} [errorCorrectionLevel=H] Error correction level
 * @param  {Mode} mode                       Data mode
 * @return {Number}                          QR Code version
 */


exports.getBestVersionForData = function getBestVersionForData(data, errorCorrectionLevel) {
  let seg;
  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M);

  if (Array.isArray(data)) {
    if (data.length > 1) {
      return getBestVersionForMixedData(data, ecl);
    }

    if (data.length === 0) {
      return 1;
    }

    seg = data[0];
  } else {
    seg = data;
  }

  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl);
};
/**
 * Returns version information with relative error correction bits
 *
 * The version information is included in QR Code symbols of version 7 or larger.
 * It consists of an 18-bit sequence containing 6 data bits,
 * with 12 error correction bits calculated using the (18, 6) Golay code.
 *
 * @param  {Number} version QR Code version
 * @return {Number}         Encoded version info bits
 */


exports.getEncodedBits = function getEncodedBits(version) {
  if (!VersionCheck.isValid(version) || version < 7) {
    throw new Error('Invalid QR Code version');
  }

  let d = version << 12;

  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {
    d ^= G18 << Utils.getBCHDigit(d) - G18_BCH;
  }

  return version << 12 | d;
};

/***/ }),

/***/ 25582:
/*!*************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/renderer/canvas.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Utils = __webpack_require__(/*! ./utils */ 61154);

function clearCanvas(ctx, canvas, size) {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  if (!canvas.style) canvas.style = {};
  canvas.height = size;
  canvas.width = size;
  canvas.style.height = size + 'px';
  canvas.style.width = size + 'px';
}

function getCanvasElement() {
  try {
    return document.createElement('canvas');
  } catch (e) {
    throw new Error('You need to specify a canvas element');
  }
}

exports.render = function render(qrData, canvas, options) {
  let opts = options;
  let canvasEl = canvas;

  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {
    opts = canvas;
    canvas = undefined;
  }

  if (!canvas) {
    canvasEl = getCanvasElement();
  }

  opts = Utils.getOptions(opts);
  const size = Utils.getImageWidth(qrData.modules.size, opts);
  const ctx = canvasEl.getContext('2d');
  const image = ctx.createImageData(size, size);
  Utils.qrToImageData(image.data, qrData, opts);
  clearCanvas(ctx, canvasEl, size);
  ctx.putImageData(image, 0, 0);
  return canvasEl;
};

exports.renderToDataURL = function renderToDataURL(qrData, canvas, options) {
  let opts = options;

  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {
    opts = canvas;
    canvas = undefined;
  }

  if (!opts) opts = {};
  const canvasEl = exports.render(qrData, canvas, opts);
  const type = opts.type || 'image/png';
  const rendererOpts = opts.rendererOpts || {};
  return canvasEl.toDataURL(type, rendererOpts.quality);
};

/***/ }),

/***/ 73068:
/*!**************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/renderer/svg-tag.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

const Utils = __webpack_require__(/*! ./utils */ 61154);

function getColorAttrib(color, attrib) {
  const alpha = color.a / 255;
  const str = attrib + '="' + color.hex + '"';
  return alpha < 1 ? str + ' ' + attrib + '-opacity="' + alpha.toFixed(2).slice(1) + '"' : str;
}

function svgCmd(cmd, x, y) {
  let str = cmd + x;
  if (typeof y !== 'undefined') str += ' ' + y;
  return str;
}

function qrToPath(data, size, margin) {
  let path = '';
  let moveBy = 0;
  let newRow = false;
  let lineLength = 0;

  for (let i = 0; i < data.length; i++) {
    const col = Math.floor(i % size);
    const row = Math.floor(i / size);
    if (!col && !newRow) newRow = true;

    if (data[i]) {
      lineLength++;

      if (!(i > 0 && col > 0 && data[i - 1])) {
        path += newRow ? svgCmd('M', col + margin, 0.5 + row + margin) : svgCmd('m', moveBy, 0);
        moveBy = 0;
        newRow = false;
      }

      if (!(col + 1 < size && data[i + 1])) {
        path += svgCmd('h', lineLength);
        lineLength = 0;
      }
    } else {
      moveBy++;
    }
  }

  return path;
}

exports.render = function render(qrData, options, cb) {
  const opts = Utils.getOptions(options);
  const size = qrData.modules.size;
  const data = qrData.modules.data;
  const qrcodesize = size + opts.margin * 2;
  const bg = !opts.color.light.a ? '' : '<path ' + getColorAttrib(opts.color.light, 'fill') + ' d="M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z"/>';
  const path = '<path ' + getColorAttrib(opts.color.dark, 'stroke') + ' d="' + qrToPath(data, size, opts.margin) + '"/>';
  const viewBox = 'viewBox="' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '"';
  const width = !opts.width ? '' : 'width="' + opts.width + '" height="' + opts.width + '" ';
  const svgTag = '<svg xmlns="http://www.w3.org/2000/svg" ' + width + viewBox + ' shape-rendering="crispEdges">' + bg + path + '</svg>\n';

  if (typeof cb === 'function') {
    cb(null, svgTag);
  }

  return svgTag;
};

/***/ }),

/***/ 61154:
/*!************************************************************!*\
  !*** ./node_modules/@cordobo/qrcode/lib/renderer/utils.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

function hex2rgba(hex) {
  if (typeof hex === 'number') {
    hex = hex.toString();
  }

  if (typeof hex !== 'string') {
    throw new Error('Color should be defined as hex string');
  }

  let hexCode = hex.slice().replace('#', '').split('');

  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {
    throw new Error('Invalid hex color: ' + hex);
  } // Convert from short to long form (fff -> ffffff)


  if (hexCode.length === 3 || hexCode.length === 4) {
    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {
      return [c, c];
    }));
  } // Add default alpha value


  if (hexCode.length === 6) hexCode.push('F', 'F');
  const hexValue = parseInt(hexCode.join(''), 16);
  return {
    r: hexValue >> 24 & 255,
    g: hexValue >> 16 & 255,
    b: hexValue >> 8 & 255,
    a: hexValue & 255,
    hex: '#' + hexCode.slice(0, 6).join('')
  };
}

exports.getOptions = function getOptions(options) {
  if (!options) options = {};
  if (!options.color) options.color = {};
  const margin = typeof options.margin === 'undefined' || options.margin === null || options.margin < 0 ? 4 : options.margin;
  const width = options.width && options.width >= 21 ? options.width : undefined;
  const scale = options.scale || 4;
  return {
    width: width,
    scale: width ? 4 : scale,
    margin: margin,
    color: {
      dark: hex2rgba(options.color.dark || '#000000ff'),
      light: hex2rgba(options.color.light || '#ffffffff')
    },
    type: options.type,
    rendererOpts: options.rendererOpts || {}
  };
};

exports.getScale = function getScale(qrSize, opts) {
  return opts.width && opts.width >= qrSize + opts.margin * 2 ? opts.width / (qrSize + opts.margin * 2) : opts.scale;
};

exports.getImageWidth = function getImageWidth(qrSize, opts) {
  const scale = exports.getScale(qrSize, opts);
  return Math.floor((qrSize + opts.margin * 2) * scale);
};

exports.qrToImageData = function qrToImageData(imgData, qr, opts) {
  const size = qr.modules.size;
  const data = qr.modules.data;
  const scale = exports.getScale(size, opts);
  const symbolSize = Math.floor((size + opts.margin * 2) * scale);
  const scaledMargin = opts.margin * scale;
  const palette = [opts.color.light, opts.color.dark];

  for (let i = 0; i < symbolSize; i++) {
    for (let j = 0; j < symbolSize; j++) {
      let posDst = (i * symbolSize + j) * 4;
      let pxColor = opts.color.light;

      if (i >= scaledMargin && j >= scaledMargin && i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {
        const iSrc = Math.floor((i - scaledMargin) / scale);
        const jSrc = Math.floor((j - scaledMargin) / scale);
        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0];
      }

      imgData[posDst++] = pxColor.r;
      imgData[posDst++] = pxColor.g;
      imgData[posDst++] = pxColor.b;
      imgData[posDst] = pxColor.a;
    }
  }
};

/***/ }),

/***/ 4889:
/*!******************************************************************!*\
  !*** ./node_modules/@fingerprintjs/fingerprintjs/dist/fp.esm.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "componentsToDebugString": () => (/* binding */ componentsToDebugString),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "getFullscreenElement": () => (/* binding */ getFullscreenElement),
/* harmony export */   "getScreenFrame": () => (/* binding */ getScreenFrame),
/* harmony export */   "hashComponents": () => (/* binding */ hashComponents),
/* harmony export */   "isAndroid": () => (/* binding */ isAndroid),
/* harmony export */   "isChromium": () => (/* binding */ isChromium),
/* harmony export */   "isDesktopSafari": () => (/* binding */ isDesktopSafari),
/* harmony export */   "isEdgeHTML": () => (/* binding */ isEdgeHTML),
/* harmony export */   "isGecko": () => (/* binding */ isGecko),
/* harmony export */   "isTrident": () => (/* binding */ isTrident),
/* harmony export */   "isWebKit": () => (/* binding */ isWebKit),
/* harmony export */   "load": () => (/* binding */ load),
/* harmony export */   "loadSources": () => (/* binding */ loadSources),
/* harmony export */   "murmurX64Hash128": () => (/* binding */ murmurX64Hash128),
/* harmony export */   "prepareForSources": () => (/* binding */ prepareForSources),
/* harmony export */   "sources": () => (/* binding */ sources)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ 34929);
/**
 * FingerprintJS v3.3.3 - Copyright (c) FingerprintJS, Inc, 2022 (https://fingerprintjs.com)
 * Licensed under the MIT (http://www.opensource.org/licenses/mit-license.php) license.
 *
 * This software contains code from open-source projects:
 * MurmurHash3 by Karan Lyons (https://github.com/karanlyons/murmurHash3.js)
 */

var version = "3.3.3";

function wait(durationMs, resolveWith) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, durationMs, resolveWith);
  });
}

function requestIdleCallbackIfAvailable(fallbackTimeout, deadlineTimeout) {
  if (deadlineTimeout === void 0) {
    deadlineTimeout = Infinity;
  }

  var requestIdleCallback = window.requestIdleCallback;

  if (requestIdleCallback) {
    // The function `requestIdleCallback` loses the binding to `window` here.
    // `globalThis` isn't always equal `window` (see https://github.com/fingerprintjs/fingerprintjs/issues/683).
    // Therefore, an error can occur. `call(window,` prevents the error.
    return new Promise(function (resolve) {
      return requestIdleCallback.call(window, function () {
        return resolve();
      }, {
        timeout: deadlineTimeout
      });
    });
  } else {
    return wait(Math.min(fallbackTimeout, deadlineTimeout));
  }
}

function isPromise(value) {
  return value && typeof value.then === 'function';
}
/**
 * Calls a maybe asynchronous function without creating microtasks when the function is synchronous.
 * Catches errors in both cases.
 *
 * If just you run a code like this:
 * ```
 * console.time('Action duration')
 * await action()
 * console.timeEnd('Action duration')
 * ```
 * The synchronous function time can be measured incorrectly because another microtask may run before the `await`
 * returns the control back to the code.
 */


function awaitIfAsync(action, callback) {
  try {
    var returnedValue = action();

    if (isPromise(returnedValue)) {
      returnedValue.then(function (result) {
        return callback(true, result);
      }, function (error) {
        return callback(false, error);
      });
    } else {
      callback(true, returnedValue);
    }
  } catch (error) {
    callback(false, error);
  }
}
/**
 * If you run many synchronous tasks without using this function, the JS main loop will be busy and asynchronous tasks
 * (e.g. completing a network request, rendering the page) won't be able to happen.
 * This function allows running many synchronous tasks such way that asynchronous tasks can run too in background.
 */


function forEachWithBreaks(items, callback, loopReleaseInterval) {
  if (loopReleaseInterval === void 0) {
    loopReleaseInterval = 16;
  }

  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var lastLoopReleaseTime, i, now;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
      switch (_a.label) {
        case 0:
          lastLoopReleaseTime = Date.now();
          i = 0;
          _a.label = 1;

        case 1:
          if (!(i < items.length)) return [3
          /*break*/
          , 4];
          callback(items[i], i);
          now = Date.now();
          if (!(now >= lastLoopReleaseTime + loopReleaseInterval)) return [3
          /*break*/
          , 3];
          lastLoopReleaseTime = now; // Allows asynchronous actions and microtasks to happen

          return [4
          /*yield*/
          , wait(0)];

        case 2:
          // Allows asynchronous actions and microtasks to happen
          _a.sent();

          _a.label = 3;

        case 3:
          ++i;
          return [3
          /*break*/
          , 1];

        case 4:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/*
 * Taken from https://github.com/karanlyons/murmurHash3.js/blob/a33d0723127e2e5415056c455f8aed2451ace208/murmurHash3.js
 */
//
// Given two 64bit ints (as an array of two 32bit ints) returns the two
// added together as a 64bit int (as an array of two 32bit ints).
//


function x64Add(m, n) {
  m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];
  n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];
  var o = [0, 0, 0, 0];
  o[3] += m[3] + n[3];
  o[2] += o[3] >>> 16;
  o[3] &= 0xffff;
  o[2] += m[2] + n[2];
  o[1] += o[2] >>> 16;
  o[2] &= 0xffff;
  o[1] += m[1] + n[1];
  o[0] += o[1] >>> 16;
  o[1] &= 0xffff;
  o[0] += m[0] + n[0];
  o[0] &= 0xffff;
  return [o[0] << 16 | o[1], o[2] << 16 | o[3]];
} //
// Given two 64bit ints (as an array of two 32bit ints) returns the two
// multiplied together as a 64bit int (as an array of two 32bit ints).
//


function x64Multiply(m, n) {
  m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];
  n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];
  var o = [0, 0, 0, 0];
  o[3] += m[3] * n[3];
  o[2] += o[3] >>> 16;
  o[3] &= 0xffff;
  o[2] += m[2] * n[3];
  o[1] += o[2] >>> 16;
  o[2] &= 0xffff;
  o[2] += m[3] * n[2];
  o[1] += o[2] >>> 16;
  o[2] &= 0xffff;
  o[1] += m[1] * n[3];
  o[0] += o[1] >>> 16;
  o[1] &= 0xffff;
  o[1] += m[2] * n[2];
  o[0] += o[1] >>> 16;
  o[1] &= 0xffff;
  o[1] += m[3] * n[1];
  o[0] += o[1] >>> 16;
  o[1] &= 0xffff;
  o[0] += m[0] * n[3] + m[1] * n[2] + m[2] * n[1] + m[3] * n[0];
  o[0] &= 0xffff;
  return [o[0] << 16 | o[1], o[2] << 16 | o[3]];
} //
// Given a 64bit int (as an array of two 32bit ints) and an int
// representing a number of bit positions, returns the 64bit int (as an
// array of two 32bit ints) rotated left by that number of positions.
//


function x64Rotl(m, n) {
  n %= 64;

  if (n === 32) {
    return [m[1], m[0]];
  } else if (n < 32) {
    return [m[0] << n | m[1] >>> 32 - n, m[1] << n | m[0] >>> 32 - n];
  } else {
    n -= 32;
    return [m[1] << n | m[0] >>> 32 - n, m[0] << n | m[1] >>> 32 - n];
  }
} //
// Given a 64bit int (as an array of two 32bit ints) and an int
// representing a number of bit positions, returns the 64bit int (as an
// array of two 32bit ints) shifted left by that number of positions.
//


function x64LeftShift(m, n) {
  n %= 64;

  if (n === 0) {
    return m;
  } else if (n < 32) {
    return [m[0] << n | m[1] >>> 32 - n, m[1] << n];
  } else {
    return [m[1] << n - 32, 0];
  }
} //
// Given two 64bit ints (as an array of two 32bit ints) returns the two
// xored together as a 64bit int (as an array of two 32bit ints).
//


function x64Xor(m, n) {
  return [m[0] ^ n[0], m[1] ^ n[1]];
} //
// Given a block, returns murmurHash3's final x64 mix of that block.
// (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the
// only place where we need to right shift 64bit ints.)
//


function x64Fmix(h) {
  h = x64Xor(h, [0, h[0] >>> 1]);
  h = x64Multiply(h, [0xff51afd7, 0xed558ccd]);
  h = x64Xor(h, [0, h[0] >>> 1]);
  h = x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);
  h = x64Xor(h, [0, h[0] >>> 1]);
  return h;
} //
// Given a string and an optional seed as an int, returns a 128 bit
// hash using the x64 flavor of MurmurHash3, as an unsigned hex.
//


function x64hash128(key, seed) {
  key = key || '';
  seed = seed || 0;
  var remainder = key.length % 16;
  var bytes = key.length - remainder;
  var h1 = [0, seed];
  var h2 = [0, seed];
  var k1 = [0, 0];
  var k2 = [0, 0];
  var c1 = [0x87c37b91, 0x114253d5];
  var c2 = [0x4cf5ad43, 0x2745937f];
  var i;

  for (i = 0; i < bytes; i = i + 16) {
    k1 = [key.charCodeAt(i + 4) & 0xff | (key.charCodeAt(i + 5) & 0xff) << 8 | (key.charCodeAt(i + 6) & 0xff) << 16 | (key.charCodeAt(i + 7) & 0xff) << 24, key.charCodeAt(i) & 0xff | (key.charCodeAt(i + 1) & 0xff) << 8 | (key.charCodeAt(i + 2) & 0xff) << 16 | (key.charCodeAt(i + 3) & 0xff) << 24];
    k2 = [key.charCodeAt(i + 12) & 0xff | (key.charCodeAt(i + 13) & 0xff) << 8 | (key.charCodeAt(i + 14) & 0xff) << 16 | (key.charCodeAt(i + 15) & 0xff) << 24, key.charCodeAt(i + 8) & 0xff | (key.charCodeAt(i + 9) & 0xff) << 8 | (key.charCodeAt(i + 10) & 0xff) << 16 | (key.charCodeAt(i + 11) & 0xff) << 24];
    k1 = x64Multiply(k1, c1);
    k1 = x64Rotl(k1, 31);
    k1 = x64Multiply(k1, c2);
    h1 = x64Xor(h1, k1);
    h1 = x64Rotl(h1, 27);
    h1 = x64Add(h1, h2);
    h1 = x64Add(x64Multiply(h1, [0, 5]), [0, 0x52dce729]);
    k2 = x64Multiply(k2, c2);
    k2 = x64Rotl(k2, 33);
    k2 = x64Multiply(k2, c1);
    h2 = x64Xor(h2, k2);
    h2 = x64Rotl(h2, 31);
    h2 = x64Add(h2, h1);
    h2 = x64Add(x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);
  }

  k1 = [0, 0];
  k2 = [0, 0];

  switch (remainder) {
    case 15:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 14)], 48));
    // fallthrough

    case 14:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 13)], 40));
    // fallthrough

    case 13:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 12)], 32));
    // fallthrough

    case 12:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 11)], 24));
    // fallthrough

    case 11:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 10)], 16));
    // fallthrough

    case 10:
      k2 = x64Xor(k2, x64LeftShift([0, key.charCodeAt(i + 9)], 8));
    // fallthrough

    case 9:
      k2 = x64Xor(k2, [0, key.charCodeAt(i + 8)]);
      k2 = x64Multiply(k2, c2);
      k2 = x64Rotl(k2, 33);
      k2 = x64Multiply(k2, c1);
      h2 = x64Xor(h2, k2);
    // fallthrough

    case 8:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 7)], 56));
    // fallthrough

    case 7:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 6)], 48));
    // fallthrough

    case 6:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 5)], 40));
    // fallthrough

    case 5:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 4)], 32));
    // fallthrough

    case 4:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 3)], 24));
    // fallthrough

    case 3:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 2)], 16));
    // fallthrough

    case 2:
      k1 = x64Xor(k1, x64LeftShift([0, key.charCodeAt(i + 1)], 8));
    // fallthrough

    case 1:
      k1 = x64Xor(k1, [0, key.charCodeAt(i)]);
      k1 = x64Multiply(k1, c1);
      k1 = x64Rotl(k1, 31);
      k1 = x64Multiply(k1, c2);
      h1 = x64Xor(h1, k1);
    // fallthrough
  }

  h1 = x64Xor(h1, [0, key.length]);
  h2 = x64Xor(h2, [0, key.length]);
  h1 = x64Add(h1, h2);
  h2 = x64Add(h2, h1);
  h1 = x64Fmix(h1);
  h2 = x64Fmix(h2);
  h1 = x64Add(h1, h2);
  h2 = x64Add(h2, h1);
  return ('00000000' + (h1[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h1[1] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[0] >>> 0).toString(16)).slice(-8) + ('00000000' + (h2[1] >>> 0).toString(16)).slice(-8);
}
/**
 * Converts an error object to a plain object that can be used with `JSON.stringify`.
 * If you just run `JSON.stringify(error)`, you'll get `'{}'`.
 */


function errorToObject(error) {
  var _a;

  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({
    name: error.name,
    message: error.message,
    stack: (_a = error.stack) === null || _a === void 0 ? void 0 : _a.split('\n')
  }, error);
}
/*
 * This file contains functions to work with pure data only (no browser features, DOM, side effects, etc).
 */

/**
 * Does the same as Array.prototype.includes but has better typing
 */


function includes(haystack, needle) {
  for (var i = 0, l = haystack.length; i < l; ++i) {
    if (haystack[i] === needle) {
      return true;
    }
  }

  return false;
}
/**
 * Like `!includes()` but with proper typing
 */


function excludes(haystack, needle) {
  return !includes(haystack, needle);
}
/**
 * Be careful, NaN can return
 */


function toInt(value) {
  return parseInt(value);
}
/**
 * Be careful, NaN can return
 */


function toFloat(value) {
  return parseFloat(value);
}

function replaceNaN(value, replacement) {
  return typeof value === 'number' && isNaN(value) ? replacement : value;
}

function countTruthy(values) {
  return values.reduce(function (sum, value) {
    return sum + (value ? 1 : 0);
  }, 0);
}

function round(value, base) {
  if (base === void 0) {
    base = 1;
  }

  if (Math.abs(base) >= 1) {
    return Math.round(value / base) * base;
  } else {
    // Sometimes when a number is multiplied by a small number, precision is lost,
    // for example 1234 * 0.0001 === 0.12340000000000001, and it's more precise divide: 1234 / (1 / 0.0001) === 0.1234.
    var counterBase = 1 / base;
    return Math.round(value * counterBase) / counterBase;
  }
}
/**
 * Parses a CSS selector into tag name with HTML attributes.
 * Only single element selector are supported (without operators like space, +, >, etc).
 *
 * Multiple values can be returned for each attribute. You decide how to handle them.
 */


function parseSimpleCssSelector(selector) {
  var _a, _b;

  var errorMessage = "Unexpected syntax '" + selector + "'";
  var tagMatch = /^\s*([a-z-]*)(.*)$/i.exec(selector);
  var tag = tagMatch[1] || undefined;
  var attributes = {};
  var partsRegex = /([.:#][\w-]+|\[.+?\])/gi;

  var addAttribute = function (name, value) {
    attributes[name] = attributes[name] || [];
    attributes[name].push(value);
  };

  for (;;) {
    var match = partsRegex.exec(tagMatch[2]);

    if (!match) {
      break;
    }

    var part = match[0];

    switch (part[0]) {
      case '.':
        addAttribute('class', part.slice(1));
        break;

      case '#':
        addAttribute('id', part.slice(1));
        break;

      case '[':
        {
          var attributeMatch = /^\[([\w-]+)([~|^$*]?=("(.*?)"|([\w-]+)))?(\s+[is])?\]$/.exec(part);

          if (attributeMatch) {
            addAttribute(attributeMatch[1], (_b = (_a = attributeMatch[4]) !== null && _a !== void 0 ? _a : attributeMatch[5]) !== null && _b !== void 0 ? _b : '');
          } else {
            throw new Error(errorMessage);
          }

          break;
        }

      default:
        throw new Error(errorMessage);
    }
  }

  return [tag, attributes];
}

function ensureErrorWithMessage(error) {
  return error && typeof error === 'object' && 'message' in error ? error : {
    message: error
  };
}
/**
 * Loads the given entropy source. Returns a function that gets an entropy component from the source.
 *
 * The result is returned synchronously to prevent `loadSources` from
 * waiting for one source to load before getting the components from the other sources.
 */


function loadSource(source, sourceOptions) {
  var isFinalResultLoaded = function (loadResult) {
    return typeof loadResult !== 'function';
  };

  var sourceLoadPromise = new Promise(function (resolveLoad) {
    var loadStartTime = Date.now(); // `awaitIfAsync` is used instead of just `await` in order to measure the duration of synchronous sources
    // correctly (other microtasks won't affect the duration).

    awaitIfAsync(source.bind(null, sourceOptions), function () {
      var loadArgs = [];

      for (var _i = 0; _i < arguments.length; _i++) {
        loadArgs[_i] = arguments[_i];
      }

      var loadDuration = Date.now() - loadStartTime; // Source loading failed

      if (!loadArgs[0]) {
        return resolveLoad(function () {
          return {
            error: ensureErrorWithMessage(loadArgs[1]),
            duration: loadDuration
          };
        });
      }

      var loadResult = loadArgs[1]; // Source loaded with the final result

      if (isFinalResultLoaded(loadResult)) {
        return resolveLoad(function () {
          return {
            value: loadResult,
            duration: loadDuration
          };
        });
      } // Source loaded with "get" stage


      resolveLoad(function () {
        return new Promise(function (resolveGet) {
          var getStartTime = Date.now();
          awaitIfAsync(loadResult, function () {
            var getArgs = [];

            for (var _i = 0; _i < arguments.length; _i++) {
              getArgs[_i] = arguments[_i];
            }

            var duration = loadDuration + Date.now() - getStartTime; // Source getting failed

            if (!getArgs[0]) {
              return resolveGet({
                error: ensureErrorWithMessage(getArgs[1]),
                duration: duration
              });
            } // Source getting succeeded


            resolveGet({
              value: getArgs[1],
              duration: duration
            });
          });
        });
      });
    });
  });
  return function getComponent() {
    return sourceLoadPromise.then(function (finalizeSource) {
      return finalizeSource();
    });
  };
}
/**
 * Loads the given entropy sources. Returns a function that collects the entropy components.
 *
 * The result is returned synchronously in order to allow start getting the components
 * before the sources are loaded completely.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function loadSources(sources, sourceOptions, excludeSources) {
  var includedSources = Object.keys(sources).filter(function (sourceKey) {
    return excludes(excludeSources, sourceKey);
  });
  var sourceGetters = Array(includedSources.length); // Using `forEachWithBreaks` allows asynchronous sources to complete between synchronous sources
  // and measure the duration correctly

  forEachWithBreaks(includedSources, function (sourceKey, index) {
    sourceGetters[index] = loadSource(sources[sourceKey], sourceOptions);
  });
  return function getComponents() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
      var components, _i, includedSources_1, sourceKey, componentPromises, _loop_1, state_1;

      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            components = {};

            for (_i = 0, includedSources_1 = includedSources; _i < includedSources_1.length; _i++) {
              sourceKey = includedSources_1[_i];
              components[sourceKey] = undefined;
            }

            componentPromises = Array(includedSources.length);

            _loop_1 = function () {
              var hasAllComponentPromises;
              return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
                switch (_a.label) {
                  case 0:
                    hasAllComponentPromises = true;
                    return [4
                    /*yield*/
                    , forEachWithBreaks(includedSources, function (sourceKey, index) {
                      if (!componentPromises[index]) {
                        // `sourceGetters` may be incomplete at this point of execution because `forEachWithBreaks` is asynchronous
                        if (sourceGetters[index]) {
                          componentPromises[index] = sourceGetters[index]().then(function (component) {
                            return components[sourceKey] = component;
                          });
                        } else {
                          hasAllComponentPromises = false;
                        }
                      }
                    })];

                  case 1:
                    _a.sent();

                    if (hasAllComponentPromises) {
                      return [2
                      /*return*/
                      , "break"];
                    }

                    return [4
                    /*yield*/
                    , wait(1)];
                  // Lets the source load loop continue

                  case 2:
                    _a.sent(); // Lets the source load loop continue


                    return [2
                    /*return*/
                    ];
                }
              });
            };

            _a.label = 1;

          case 1:
            return [5
            /*yield**/
            , _loop_1()];

          case 2:
            state_1 = _a.sent();
            if (state_1 === "break") return [3
            /*break*/
            , 4];
            _a.label = 3;

          case 3:
            return [3
            /*break*/
            , 1];

          case 4:
            return [4
            /*yield*/
            , Promise.all(componentPromises)];

          case 5:
            _a.sent();

            return [2
            /*return*/
            , components];
        }
      });
    });
  };
}
/*
 * Functions to help with features that vary through browsers
 */

/**
 * Checks whether the browser is based on Trident (the Internet Explorer engine) without using user-agent.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isTrident() {
  var w = window;
  var n = navigator; // The properties are checked to be in IE 10, IE 11 and not to be in other browsers in October 2020

  return countTruthy(['MSCSSMatrix' in w, 'msSetImmediate' in w, 'msIndexedDB' in w, 'msMaxTouchPoints' in n, 'msPointerEnabled' in n]) >= 4;
}
/**
 * Checks whether the browser is based on EdgeHTML (the pre-Chromium Edge engine) without using user-agent.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isEdgeHTML() {
  // Based on research in October 2020
  var w = window;
  var n = navigator;
  return countTruthy(['msWriteProfilerMark' in w, 'MSStream' in w, 'msLaunchUri' in n, 'msSaveBlob' in n]) >= 3 && !isTrident();
}
/**
 * Checks whether the browser is based on Chromium without using user-agent.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isChromium() {
  // Based on research in October 2020. Tested to detect Chromium 42-86.
  var w = window;
  var n = navigator;
  return countTruthy(['webkitPersistentStorage' in n, 'webkitTemporaryStorage' in n, n.vendor.indexOf('Google') === 0, 'webkitResolveLocalFileSystemURL' in w, 'BatteryManager' in w, 'webkitMediaStream' in w, 'webkitSpeechGrammar' in w]) >= 5;
}
/**
 * Checks whether the browser is based on mobile or desktop Safari without using user-agent.
 * All iOS browsers use WebKit (the Safari engine).
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isWebKit() {
  // Based on research in September 2020
  var w = window;
  var n = navigator;
  return countTruthy(['ApplePayError' in w, 'CSSPrimitiveValue' in w, 'Counter' in w, n.vendor.indexOf('Apple') === 0, 'getStorageUpdates' in n, 'WebKitMediaKeys' in w]) >= 4;
}
/**
 * Checks whether the WebKit browser is a desktop Safari.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isDesktopSafari() {
  var w = window;
  return countTruthy(['safari' in w, !('DeviceMotionEvent' in w), !('ongestureend' in w), !('standalone' in navigator)]) >= 3;
}
/**
 * Checks whether the browser is based on Gecko (Firefox engine) without using user-agent.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isGecko() {
  var _a, _b;

  var w = window; // Based on research in September 2020

  return countTruthy(['buildID' in navigator, 'MozAppearance' in ((_b = (_a = document.documentElement) === null || _a === void 0 ? void 0 : _a.style) !== null && _b !== void 0 ? _b : {}), 'onmozfullscreenchange' in w, 'mozInnerScreenX' in w, 'CSSMozDocumentRule' in w, 'CanvasCaptureMediaStream' in w]) >= 4;
}
/**
 * Checks whether the browser is based on Chromium version ≥86 without using user-agent.
 * It doesn't check that the browser is based on Chromium, there is a separate function for this.
 */


function isChromium86OrNewer() {
  // Checked in Chrome 85 vs Chrome 86 both on desktop and Android
  var w = window;
  return countTruthy([!('MediaSettingsRange' in w), 'RTCEncodedAudioFrame' in w, '' + w.Intl === '[object Intl]', '' + w.Reflect === '[object Reflect]']) >= 3;
}
/**
 * Checks whether the browser is based on WebKit version ≥606 (Safari ≥12) without using user-agent.
 * It doesn't check that the browser is based on WebKit, there is a separate function for this.
 *
 * @link https://en.wikipedia.org/wiki/Safari_version_history#Release_history Safari-WebKit versions map
 */


function isWebKit606OrNewer() {
  // Checked in Safari 9–14
  var w = window;
  return countTruthy(['DOMRectList' in w, 'RTCPeerConnectionIceEvent' in w, 'SVGGeometryElement' in w, 'ontransitioncancel' in w]) >= 3;
}
/**
 * Checks whether the device is an iPad.
 * It doesn't check that the engine is WebKit and that the WebKit isn't desktop.
 */


function isIPad() {
  // Checked on:
  // Safari on iPadOS (both mobile and desktop modes): 8, 11, 12, 13, 14
  // Chrome on iPadOS (both mobile and desktop modes): 11, 12, 13, 14
  // Safari on iOS (both mobile and desktop modes): 9, 10, 11, 12, 13, 14
  // Chrome on iOS (both mobile and desktop modes): 9, 10, 11, 12, 13, 14
  // Before iOS 13. Safari tampers the value in "request desktop site" mode since iOS 13.
  if (navigator.platform === 'iPad') {
    return true;
  }

  var s = screen;
  var screenRatio = s.width / s.height;
  return countTruthy(['MediaSource' in window, !!Element.prototype.webkitRequestFullscreen, // iPhone 4S that runs iOS 9 matches this. But it won't match the criteria above, so it won't be detected as iPad.
  screenRatio > 0.65 && screenRatio < 1.53]) >= 2;
}
/**
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function getFullscreenElement() {
  var d = document;
  return d.fullscreenElement || d.msFullscreenElement || d.mozFullScreenElement || d.webkitFullscreenElement || null;
}

function exitFullscreen() {
  var d = document; // `call` is required because the function throws an error without a proper "this" context

  return (d.exitFullscreen || d.msExitFullscreen || d.mozCancelFullScreen || d.webkitExitFullscreen).call(d);
}
/**
 * Checks whether the device runs on Android without using user-agent.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function isAndroid() {
  var isItChromium = isChromium();
  var isItGecko = isGecko(); // Only 2 browser engines are presented on Android.
  // Actually, there is also Android 4.1 browser, but it's not worth detecting it at the moment.

  if (!isItChromium && !isItGecko) {
    return false;
  }

  var w = window; // Chrome removes all words "Android" from `navigator` when desktop version is requested
  // Firefox keeps "Android" in `navigator.appVersion` when desktop version is requested

  return countTruthy(['onorientationchange' in w, 'orientation' in w, isItChromium && !('SharedWorker' in w), isItGecko && /android/i.test(navigator.appVersion)]) >= 2;
}
/**
 * A deep description: https://fingerprintjs.com/blog/audio-fingerprinting/
 * Inspired by and based on https://github.com/cozylife/audio-fingerprint
 */


function getAudioFingerprint() {
  var w = window;
  var AudioContext = w.OfflineAudioContext || w.webkitOfflineAudioContext;

  if (!AudioContext) {
    return -2
    /* NotSupported */
    ;
  } // In some browsers, audio context always stays suspended unless the context is started in response to a user action
  // (e.g. a click or a tap). It prevents audio fingerprint from being taken at an arbitrary moment of time.
  // Such browsers are old and unpopular, so the audio fingerprinting is just skipped in them.
  // See a similar case explanation at https://stackoverflow.com/questions/46363048/onaudioprocess-not-called-on-ios11#46534088


  if (doesCurrentBrowserSuspendAudioContext()) {
    return -1
    /* KnownToSuspend */
    ;
  }

  var hashFromIndex = 4500;
  var hashToIndex = 5000;
  var context = new AudioContext(1, hashToIndex, 44100);
  var oscillator = context.createOscillator();
  oscillator.type = 'triangle';
  oscillator.frequency.value = 10000;
  var compressor = context.createDynamicsCompressor();
  compressor.threshold.value = -50;
  compressor.knee.value = 40;
  compressor.ratio.value = 12;
  compressor.attack.value = 0;
  compressor.release.value = 0.25;
  oscillator.connect(compressor);
  compressor.connect(context.destination);
  oscillator.start(0);

  var _a = startRenderingAudio(context),
      renderPromise = _a[0],
      finishRendering = _a[1];

  var fingerprintPromise = renderPromise.then(function (buffer) {
    return getHash(buffer.getChannelData(0).subarray(hashFromIndex));
  }, function (error) {
    if (error.name === "timeout"
    /* Timeout */
    || error.name === "suspended"
    /* Suspended */
    ) {
      return -3
      /* Timeout */
      ;
    }

    throw error;
  }); // Suppresses the console error message in case when the fingerprint fails before requested

  fingerprintPromise.catch(function () {
    return undefined;
  });
  return function () {
    finishRendering();
    return fingerprintPromise;
  };
}
/**
 * Checks if the current browser is known to always suspend audio context
 */


function doesCurrentBrowserSuspendAudioContext() {
  return isWebKit() && !isDesktopSafari() && !isWebKit606OrNewer();
}
/**
 * Starts rendering the audio context.
 * When the returned function is called, the render process starts finishing.
 */


function startRenderingAudio(context) {
  var renderTryMaxCount = 3;
  var renderRetryDelay = 500;
  var runningMaxAwaitTime = 500;
  var runningSufficientTime = 5000;

  var finalize = function () {
    return undefined;
  };

  var resultPromise = new Promise(function (resolve, reject) {
    var isFinalized = false;
    var renderTryCount = 0;
    var startedRunningAt = 0;

    context.oncomplete = function (event) {
      return resolve(event.renderedBuffer);
    };

    var startRunningTimeout = function () {
      setTimeout(function () {
        return reject(makeInnerError("timeout"
        /* Timeout */
        ));
      }, Math.min(runningMaxAwaitTime, startedRunningAt + runningSufficientTime - Date.now()));
    };

    var tryRender = function () {
      try {
        context.startRendering();

        switch (context.state) {
          case 'running':
            startedRunningAt = Date.now();

            if (isFinalized) {
              startRunningTimeout();
            }

            break;
          // Sometimes the audio context doesn't start after calling `startRendering` (in addition to the cases where
          // audio context doesn't start at all). A known case is starting an audio context when the browser tab is in
          // background on iPhone. Retries usually help in this case.

          case 'suspended':
            // The audio context can reject starting until the tab is in foreground. Long fingerprint duration
            // in background isn't a problem, therefore the retry attempts don't count in background. It can lead to
            // a situation when a fingerprint takes very long time and finishes successfully. FYI, the audio context
            // can be suspended when `document.hidden === false` and start running after a retry.
            if (!document.hidden) {
              renderTryCount++;
            }

            if (isFinalized && renderTryCount >= renderTryMaxCount) {
              reject(makeInnerError("suspended"
              /* Suspended */
              ));
            } else {
              setTimeout(tryRender, renderRetryDelay);
            }

            break;
        }
      } catch (error) {
        reject(error);
      }
    };

    tryRender();

    finalize = function () {
      if (!isFinalized) {
        isFinalized = true;

        if (startedRunningAt > 0) {
          startRunningTimeout();
        }
      }
    };
  });
  return [resultPromise, finalize];
}

function getHash(signal) {
  var hash = 0;

  for (var i = 0; i < signal.length; ++i) {
    hash += Math.abs(signal[i]);
  }

  return hash;
}

function makeInnerError(name) {
  var error = new Error(name);
  error.name = name;
  return error;
}
/**
 * Creates and keeps an invisible iframe while the given function runs.
 * The given function is called when the iframe is loaded and has a body.
 * The iframe allows to measure DOM sizes inside itself.
 *
 * Notice: passing an initial HTML code doesn't work in IE.
 *
 * Warning for package users:
 * This function is out of Semantic Versioning, i.e. can change unexpectedly. Usage is at your own risk.
 */


function withIframe(action, initialHtml, domPollInterval) {
  var _a, _b, _c;

  if (domPollInterval === void 0) {
    domPollInterval = 50;
  }

  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var d, iframe;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_d) {
      switch (_d.label) {
        case 0:
          d = document;
          _d.label = 1;

        case 1:
          if (!!d.body) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , wait(domPollInterval)];

        case 2:
          _d.sent();

          return [3
          /*break*/
          , 1];

        case 3:
          iframe = d.createElement('iframe');
          _d.label = 4;

        case 4:
          _d.trys.push([4,, 10, 11]);

          return [4
          /*yield*/
          , new Promise(function (_resolve, _reject) {
            var isComplete = false;

            var resolve = function () {
              isComplete = true;

              _resolve();
            };

            var reject = function (error) {
              isComplete = true;

              _reject(error);
            };

            iframe.onload = resolve;
            iframe.onerror = reject;
            var style = iframe.style;
            style.setProperty('display', 'block', 'important'); // Required for browsers to calculate the layout

            style.position = 'absolute';
            style.top = '0';
            style.left = '0';
            style.visibility = 'hidden';

            if (initialHtml && 'srcdoc' in iframe) {
              iframe.srcdoc = initialHtml;
            } else {
              iframe.src = 'about:blank';
            }

            d.body.appendChild(iframe); // WebKit in WeChat doesn't fire the iframe's `onload` for some reason.
            // This code checks for the loading state manually.
            // See https://github.com/fingerprintjs/fingerprintjs/issues/645

            var checkReadyState = function () {
              var _a, _b; // The ready state may never become 'complete' in Firefox despite the 'load' event being fired.
              // So an infinite setTimeout loop can happen without this check.
              // See https://github.com/fingerprintjs/fingerprintjs/pull/716#issuecomment-986898796


              if (isComplete) {
                return;
              } // Make sure iframe.contentWindow and iframe.contentWindow.document are both loaded
              // The contentWindow.document can miss in JSDOM (https://github.com/jsdom/jsdom).


              if (((_b = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.readyState) === 'complete') {
                resolve();
              } else {
                setTimeout(checkReadyState, 10);
              }
            };

            checkReadyState();
          })];

        case 5:
          _d.sent();

          _d.label = 6;

        case 6:
          if (!!((_b = (_a = iframe.contentWindow) === null || _a === void 0 ? void 0 : _a.document) === null || _b === void 0 ? void 0 : _b.body)) return [3
          /*break*/
          , 8];
          return [4
          /*yield*/
          , wait(domPollInterval)];

        case 7:
          _d.sent();

          return [3
          /*break*/
          , 6];

        case 8:
          return [4
          /*yield*/
          , action(iframe, iframe.contentWindow)];

        case 9:
          return [2
          /*return*/
          , _d.sent()];

        case 10:
          (_c = iframe.parentNode) === null || _c === void 0 ? void 0 : _c.removeChild(iframe);
          return [7
          /*endfinally*/
          ];

        case 11:
          return [2
          /*return*/
          ];
      }
    });
  });
}
/**
 * Creates a DOM element that matches the given selector.
 * Only single element selector are supported (without operators like space, +, >, etc).
 */


function selectorToElement(selector) {
  var _a = parseSimpleCssSelector(selector),
      tag = _a[0],
      attributes = _a[1];

  var element = document.createElement(tag !== null && tag !== void 0 ? tag : 'div');

  for (var _i = 0, _b = Object.keys(attributes); _i < _b.length; _i++) {
    var name_1 = _b[_i];
    var value = attributes[name_1].join(' '); // Changing the `style` attribute can cause a CSP error, therefore we change the `style.cssText` property.
    // https://github.com/fingerprintjs/fingerprintjs/issues/733

    if (name_1 === 'style') {
      addStyleString(element.style, value);
    } else {
      element.setAttribute(name_1, value);
    }
  }

  return element;
}
/**
 * Adds CSS styles from a string in such a way that doesn't trigger a CSP warning (unsafe-inline or unsafe-eval)
 */


function addStyleString(style, source) {
  // We don't use `style.cssText` because browsers must block it when no `unsafe-eval` CSP is presented: https://csplite.com/csp145/#w3c_note
  // Even though the browsers ignore this standard, we don't use `cssText` just in case.
  for (var _i = 0, _a = source.split(';'); _i < _a.length; _i++) {
    var property = _a[_i];
    var match = /^\s*([\w-]+)\s*:\s*(.+?)(\s*!([\w-]+))?\s*$/.exec(property);

    if (match) {
      var name_2 = match[1],
          value = match[2],
          priority = match[4];
      style.setProperty(name_2, value, priority || ''); // The last argument can't be undefined in IE11
    }
  }
} // We use m or w because these two characters take up the maximum width.
// And we use a LLi so that the same matching fonts can get separated.


var testString = 'mmMwWLliI0O&1'; // We test using 48px font size, we may use any size. I guess larger the better.

var textSize = '48px'; // A font will be compared against all the three default fonts.
// And if for any default fonts it doesn't match, then that font is available.

var baseFonts = ['monospace', 'sans-serif', 'serif'];
var fontList = [// This is android-specific font from "Roboto" family
'sans-serif-thin', 'ARNO PRO', 'Agency FB', 'Arabic Typesetting', 'Arial Unicode MS', 'AvantGarde Bk BT', 'BankGothic Md BT', 'Batang', 'Bitstream Vera Sans Mono', 'Calibri', 'Century', 'Century Gothic', 'Clarendon', 'EUROSTILE', 'Franklin Gothic', 'Futura Bk BT', 'Futura Md BT', 'GOTHAM', 'Gill Sans', 'HELV', 'Haettenschweiler', 'Helvetica Neue', 'Humanst521 BT', 'Leelawadee', 'Letter Gothic', 'Levenim MT', 'Lucida Bright', 'Lucida Sans', 'Menlo', 'MS Mincho', 'MS Outlook', 'MS Reference Specialty', 'MS UI Gothic', 'MT Extra', 'MYRIAD PRO', 'Marlett', 'Meiryo UI', 'Microsoft Uighur', 'Minion Pro', 'Monotype Corsiva', 'PMingLiU', 'Pristina', 'SCRIPTINA', 'Segoe UI Light', 'Serifa', 'SimHei', 'Small Fonts', 'Staccato222 BT', 'TRAJAN PRO', 'Univers CE 55 Medium', 'Vrinda', 'ZWAdobeF']; // kudos to http://www.lalit.org/lab/javascript-css-font-detect/

function getFonts() {
  // Running the script in an iframe makes it not affect the page look and not be affected by the page CSS. See:
  // https://github.com/fingerprintjs/fingerprintjs/issues/592
  // https://github.com/fingerprintjs/fingerprintjs/issues/628
  return withIframe(function (_, _a) {
    var document = _a.document;
    var holder = document.body;
    holder.style.fontSize = textSize; // div to load spans for the default fonts and the fonts to detect

    var spansContainer = document.createElement('div');
    var defaultWidth = {};
    var defaultHeight = {}; // creates a span where the fonts will be loaded

    var createSpan = function (fontFamily) {
      var span = document.createElement('span');
      var style = span.style;
      style.position = 'absolute';
      style.top = '0';
      style.left = '0';
      style.fontFamily = fontFamily;
      span.textContent = testString;
      spansContainer.appendChild(span);
      return span;
    }; // creates a span and load the font to detect and a base font for fallback


    var createSpanWithFonts = function (fontToDetect, baseFont) {
      return createSpan("'" + fontToDetect + "'," + baseFont);
    }; // creates spans for the base fonts and adds them to baseFontsDiv


    var initializeBaseFontsSpans = function () {
      return baseFonts.map(createSpan);
    }; // creates spans for the fonts to detect and adds them to fontsDiv


    var initializeFontsSpans = function () {
      // Stores {fontName : [spans for that font]}
      var spans = {};

      var _loop_1 = function (font) {
        spans[font] = baseFonts.map(function (baseFont) {
          return createSpanWithFonts(font, baseFont);
        });
      };

      for (var _i = 0, fontList_1 = fontList; _i < fontList_1.length; _i++) {
        var font = fontList_1[_i];

        _loop_1(font);
      }

      return spans;
    }; // checks if a font is available


    var isFontAvailable = function (fontSpans) {
      return baseFonts.some(function (baseFont, baseFontIndex) {
        return fontSpans[baseFontIndex].offsetWidth !== defaultWidth[baseFont] || fontSpans[baseFontIndex].offsetHeight !== defaultHeight[baseFont];
      });
    }; // create spans for base fonts


    var baseFontsSpans = initializeBaseFontsSpans(); // create spans for fonts to detect

    var fontsSpans = initializeFontsSpans(); // add all the spans to the DOM

    holder.appendChild(spansContainer); // get the default width for the three base fonts

    for (var index = 0; index < baseFonts.length; index++) {
      defaultWidth[baseFonts[index]] = baseFontsSpans[index].offsetWidth; // width for the default font

      defaultHeight[baseFonts[index]] = baseFontsSpans[index].offsetHeight; // height for the default font
    } // check available fonts


    return fontList.filter(function (font) {
      return isFontAvailable(fontsSpans[font]);
    });
  });
}

function getPlugins() {
  var rawPlugins = navigator.plugins;

  if (!rawPlugins) {
    return undefined;
  }

  var plugins = []; // Safari 10 doesn't support iterating navigator.plugins with for...of

  for (var i = 0; i < rawPlugins.length; ++i) {
    var plugin = rawPlugins[i];

    if (!plugin) {
      continue;
    }

    var mimeTypes = [];

    for (var j = 0; j < plugin.length; ++j) {
      var mimeType = plugin[j];
      mimeTypes.push({
        type: mimeType.type,
        suffixes: mimeType.suffixes
      });
    }

    plugins.push({
      name: plugin.name,
      description: plugin.description,
      mimeTypes: mimeTypes
    });
  }

  return plugins;
} // https://www.browserleaks.com/canvas#how-does-it-work


function getCanvasFingerprint() {
  var _a = makeCanvasContext(),
      canvas = _a[0],
      context = _a[1];

  if (!isSupported(canvas, context)) {
    return {
      winding: false,
      geometry: '',
      text: ''
    };
  }

  return {
    winding: doesSupportWinding(context),
    geometry: makeGeometryImage(canvas, context),
    // Text is unstable:
    // https://github.com/fingerprintjs/fingerprintjs/issues/583
    // https://github.com/fingerprintjs/fingerprintjs/issues/103
    // Therefore it's extracted into a separate image.
    text: makeTextImage(canvas, context)
  };
}

function makeCanvasContext() {
  var canvas = document.createElement('canvas');
  canvas.width = 1;
  canvas.height = 1;
  return [canvas, canvas.getContext('2d')];
}

function isSupported(canvas, context) {
  // TODO: look into: https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob
  return !!(context && canvas.toDataURL);
}

function doesSupportWinding(context) {
  // https://web.archive.org/web/20170825024655/http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
  // https://github.com/Modernizr/Modernizr/blob/master/feature-detects/canvas/winding.js
  context.rect(0, 0, 10, 10);
  context.rect(2, 2, 6, 6);
  return !context.isPointInPath(5, 5, 'evenodd');
}

function makeTextImage(canvas, context) {
  // Resizing the canvas cleans it
  canvas.width = 240;
  canvas.height = 60;
  context.textBaseline = 'alphabetic';
  context.fillStyle = '#f60';
  context.fillRect(100, 1, 62, 20);
  context.fillStyle = '#069'; // It's important to use explicit built-in fonts in order to exclude the affect of font preferences
  // (there is a separate entropy source for them).

  context.font = '11pt "Times New Roman"'; // The choice of emojis has a gigantic impact on rendering performance (especially in FF).
  // Some newer emojis cause it to slow down 50-200 times.
  // There must be no text to the right of the emoji, see https://github.com/fingerprintjs/fingerprintjs/issues/574
  // A bare emoji shouldn't be used because the canvas will change depending on the script encoding:
  // https://github.com/fingerprintjs/fingerprintjs/issues/66
  // Escape sequence shouldn't be used too because Terser will turn it into a bare unicode.

  var printedText = "Cwm fjordbank gly " + String.fromCharCode(55357, 56835)
  /* 😃 */
  ;
  context.fillText(printedText, 2, 15);
  context.fillStyle = 'rgba(102, 204, 0, 0.2)';
  context.font = '18pt Arial';
  context.fillText(printedText, 4, 45);
  return save(canvas);
}

function makeGeometryImage(canvas, context) {
  // Resizing the canvas cleans it
  canvas.width = 122;
  canvas.height = 110; // Canvas blending
  // https://web.archive.org/web/20170826194121/http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/
  // http://jsfiddle.net/NDYV8/16/

  context.globalCompositeOperation = 'multiply';

  for (var _i = 0, _a = [['#f2f', 40, 40], ['#2ff', 80, 40], ['#ff2', 60, 80]]; _i < _a.length; _i++) {
    var _b = _a[_i],
        color = _b[0],
        x = _b[1],
        y = _b[2];
    context.fillStyle = color;
    context.beginPath();
    context.arc(x, y, 40, 0, Math.PI * 2, true);
    context.closePath();
    context.fill();
  } // Canvas winding
  // https://web.archive.org/web/20130913061632/http://blogs.adobe.com/webplatform/2013/01/30/winding-rules-in-canvas/
  // http://jsfiddle.net/NDYV8/19/


  context.fillStyle = '#f9c';
  context.arc(60, 60, 60, 0, Math.PI * 2, true);
  context.arc(60, 60, 20, 0, Math.PI * 2, true);
  context.fill('evenodd');
  return save(canvas);
}

function save(canvas) {
  // TODO: look into: https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob
  return canvas.toDataURL();
}
/**
 * This is a crude and primitive touch screen detection. It's not possible to currently reliably detect the availability
 * of a touch screen with a JS, without actually subscribing to a touch event.
 *
 * @see http://www.stucox.com/blog/you-cant-detect-a-touchscreen/
 * @see https://github.com/Modernizr/Modernizr/issues/548
 */


function getTouchSupport() {
  var n = navigator;
  var maxTouchPoints = 0;
  var touchEvent;

  if (n.maxTouchPoints !== undefined) {
    maxTouchPoints = toInt(n.maxTouchPoints);
  } else if (n.msMaxTouchPoints !== undefined) {
    maxTouchPoints = n.msMaxTouchPoints;
  }

  try {
    document.createEvent('TouchEvent');
    touchEvent = true;
  } catch (_a) {
    touchEvent = false;
  }

  var touchStart = ('ontouchstart' in window);
  return {
    maxTouchPoints: maxTouchPoints,
    touchEvent: touchEvent,
    touchStart: touchStart
  };
}

function getOsCpu() {
  return navigator.oscpu;
}

function getLanguages() {
  var n = navigator;
  var result = [];
  var language = n.language || n.userLanguage || n.browserLanguage || n.systemLanguage;

  if (language !== undefined) {
    result.push([language]);
  }

  if (Array.isArray(n.languages)) {
    // Starting from Chromium 86, there is only a single value in `navigator.language` in Incognito mode:
    // the value of `navigator.language`. Therefore the value is ignored in this browser.
    if (!(isChromium() && isChromium86OrNewer())) {
      result.push(n.languages);
    }
  } else if (typeof n.languages === 'string') {
    var languages = n.languages;

    if (languages) {
      result.push(languages.split(','));
    }
  }

  return result;
}

function getColorDepth() {
  return window.screen.colorDepth;
}

function getDeviceMemory() {
  // `navigator.deviceMemory` is a string containing a number in some unidentified cases
  return replaceNaN(toFloat(navigator.deviceMemory), undefined);
}

function getScreenResolution() {
  var s = screen; // Some browsers return screen resolution as strings, e.g. "1200", instead of a number, e.g. 1200.
  // I suspect it's done by certain plugins that randomize browser properties to prevent fingerprinting.
  // Some browsers even return  screen resolution as not numbers.

  var parseDimension = function (value) {
    return replaceNaN(toInt(value), null);
  };

  var dimensions = [parseDimension(s.width), parseDimension(s.height)];
  dimensions.sort().reverse();
  return dimensions;
}

var screenFrameCheckInterval = 2500;
var roundingPrecision = 10; // The type is readonly to protect from unwanted mutations

var screenFrameBackup;
var screenFrameSizeTimeoutId;
/**
 * Starts watching the screen frame size. When a non-zero size appears, the size is saved and the watch is stopped.
 * Later, when `getScreenFrame` runs, it will return the saved non-zero size if the current size is null.
 *
 * This trick is required to mitigate the fact that the screen frame turns null in some cases.
 * See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568
 */

function watchScreenFrame() {
  if (screenFrameSizeTimeoutId !== undefined) {
    return;
  }

  var checkScreenFrame = function () {
    var frameSize = getCurrentScreenFrame();

    if (isFrameSizeNull(frameSize)) {
      screenFrameSizeTimeoutId = setTimeout(checkScreenFrame, screenFrameCheckInterval);
    } else {
      screenFrameBackup = frameSize;
      screenFrameSizeTimeoutId = undefined;
    }
  };

  checkScreenFrame();
}

function getScreenFrame() {
  var _this = this;

  watchScreenFrame();
  return function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
      var frameSize;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            frameSize = getCurrentScreenFrame();
            if (!isFrameSizeNull(frameSize)) return [3
            /*break*/
            , 2];

            if (screenFrameBackup) {
              return [2
              /*return*/
              , (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArrays)(screenFrameBackup)];
            }

            if (!getFullscreenElement()) return [3
            /*break*/
            , 2]; // Some browsers set the screen frame to zero when programmatic fullscreen is on.
            // There is a chance of getting a non-zero frame after exiting the fullscreen.
            // See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568

            return [4
            /*yield*/
            , exitFullscreen()];

          case 1:
            // Some browsers set the screen frame to zero when programmatic fullscreen is on.
            // There is a chance of getting a non-zero frame after exiting the fullscreen.
            // See more on this at https://github.com/fingerprintjs/fingerprintjs/issues/568
            _a.sent();

            frameSize = getCurrentScreenFrame();
            _a.label = 2;

          case 2:
            if (!isFrameSizeNull(frameSize)) {
              screenFrameBackup = frameSize;
            }

            return [2
            /*return*/
            , frameSize];
        }
      });
    });
  };
}
/**
 * Sometimes the available screen resolution changes a bit, e.g. 1900x1440 → 1900x1439. A possible reason: macOS Dock
 * shrinks to fit more icons when there is too little space. The rounding is used to mitigate the difference.
 */


function getRoundedScreenFrame() {
  var _this = this;

  var screenFrameGetter = getScreenFrame();
  return function () {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(_this, void 0, void 0, function () {
      var frameSize, processSize;
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
        switch (_a.label) {
          case 0:
            return [4
            /*yield*/
            , screenFrameGetter()];

          case 1:
            frameSize = _a.sent();

            processSize = function (sideSize) {
              return sideSize === null ? null : round(sideSize, roundingPrecision);
            }; // It might look like I don't know about `for` and `map`.
            // In fact, such code is used to avoid TypeScript issues without using `as`.


            return [2
            /*return*/
            , [processSize(frameSize[0]), processSize(frameSize[1]), processSize(frameSize[2]), processSize(frameSize[3])]];
        }
      });
    });
  };
}

function getCurrentScreenFrame() {
  var s = screen; // Some browsers return screen resolution as strings, e.g. "1200", instead of a number, e.g. 1200.
  // I suspect it's done by certain plugins that randomize browser properties to prevent fingerprinting.
  //
  // Some browsers (IE, Edge ≤18) don't provide `screen.availLeft` and `screen.availTop`. The property values are
  // replaced with 0 in such cases to not lose the entropy from `screen.availWidth` and `screen.availHeight`.

  return [replaceNaN(toFloat(s.availTop), null), replaceNaN(toFloat(s.width) - toFloat(s.availWidth) - replaceNaN(toFloat(s.availLeft), 0), null), replaceNaN(toFloat(s.height) - toFloat(s.availHeight) - replaceNaN(toFloat(s.availTop), 0), null), replaceNaN(toFloat(s.availLeft), null)];
}

function isFrameSizeNull(frameSize) {
  for (var i = 0; i < 4; ++i) {
    if (frameSize[i]) {
      return false;
    }
  }

  return true;
}

function getHardwareConcurrency() {
  // sometimes hardware concurrency is a string
  return replaceNaN(toInt(navigator.hardwareConcurrency), undefined);
}

function getTimezone() {
  var _a;

  var DateTimeFormat = (_a = window.Intl) === null || _a === void 0 ? void 0 : _a.DateTimeFormat;

  if (DateTimeFormat) {
    var timezone = new DateTimeFormat().resolvedOptions().timeZone;

    if (timezone) {
      return timezone;
    }
  } // For browsers that don't support timezone names
  // The minus is intentional because the JS offset is opposite to the real offset


  var offset = -getTimezoneOffset();
  return "UTC" + (offset >= 0 ? '+' : '') + Math.abs(offset);
}

function getTimezoneOffset() {
  var currentYear = new Date().getFullYear(); // The timezone offset may change over time due to daylight saving time (DST) shifts.
  // The non-DST timezone offset is used as the result timezone offset.
  // Since the DST season differs in the northern and the southern hemispheres,
  // both January and July timezones offsets are considered.

  return Math.max( // `getTimezoneOffset` returns a number as a string in some unidentified cases
  toFloat(new Date(currentYear, 0, 1).getTimezoneOffset()), toFloat(new Date(currentYear, 6, 1).getTimezoneOffset()));
}

function getSessionStorage() {
  try {
    return !!window.sessionStorage;
  } catch (error) {
    /* SecurityError when referencing it means it exists */
    return true;
  }
} // https://bugzilla.mozilla.org/show_bug.cgi?id=781447


function getLocalStorage() {
  try {
    return !!window.localStorage;
  } catch (e) {
    /* SecurityError when referencing it means it exists */
    return true;
  }
}

function getIndexedDB() {
  // IE and Edge don't allow accessing indexedDB in private mode, therefore IE and Edge will have different
  // visitor identifier in normal and private modes.
  if (isTrident() || isEdgeHTML()) {
    return undefined;
  }

  try {
    return !!window.indexedDB;
  } catch (e) {
    /* SecurityError when referencing it means it exists */
    return true;
  }
}

function getOpenDatabase() {
  return !!window.openDatabase;
}

function getCpuClass() {
  return navigator.cpuClass;
}

function getPlatform() {
  // Android Chrome 86 and 87 and Android Firefox 80 and 84 don't mock the platform value when desktop mode is requested
  var platform = navigator.platform; // iOS mocks the platform value when desktop version is requested: https://github.com/fingerprintjs/fingerprintjs/issues/514
  // iPad uses desktop mode by default since iOS 13
  // The value is 'MacIntel' on M1 Macs
  // The value is 'iPhone' on iPod Touch

  if (platform === 'MacIntel') {
    if (isWebKit() && !isDesktopSafari()) {
      return isIPad() ? 'iPad' : 'iPhone';
    }
  }

  return platform;
}

function getVendor() {
  return navigator.vendor || '';
}
/**
 * Checks for browser-specific (not engine specific) global variables to tell browsers with the same engine apart.
 * Only somewhat popular browsers are considered.
 */


function getVendorFlavors() {
  var flavors = [];

  for (var _i = 0, _a = [// Blink and some browsers on iOS
  'chrome', // Safari on macOS
  'safari', // Chrome on iOS (checked in 85 on 13 and 87 on 14)
  '__crWeb', '__gCrWeb', // Yandex Browser on iOS, macOS and Android (checked in 21.2 on iOS 14, macOS and Android)
  'yandex', // Yandex Browser on iOS (checked in 21.2 on 14)
  '__yb', '__ybro', // Firefox on iOS (checked in 32 on 14)
  '__firefox__', // Edge on iOS (checked in 46 on 14)
  '__edgeTrackingPreventionStatistics', 'webkit', // Opera Touch on iOS (checked in 2.6 on 14)
  'oprt', // Samsung Internet on Android (checked in 11.1)
  'samsungAr', // UC Browser on Android (checked in 12.10 and 13.0)
  'ucweb', 'UCShellJava', // Puffin on Android (checked in 9.0)
  'puffinDevice']; _i < _a.length; _i++) {
    var key = _a[_i];
    var value = window[key];

    if (value && typeof value === 'object') {
      flavors.push(key);
    }
  }

  return flavors.sort();
}
/**
 * navigator.cookieEnabled cannot detect custom or nuanced cookie blocking configurations. For example, when blocking
 * cookies via the Advanced Privacy Settings in IE9, it always returns true. And there have been issues in the past with
 * site-specific exceptions. Don't rely on it.
 *
 * @see https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cookies.js Taken from here
 */


function areCookiesEnabled() {
  var d = document; // Taken from here: https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cookies.js
  // navigator.cookieEnabled cannot detect custom or nuanced cookie blocking configurations. For example, when blocking
  // cookies via the Advanced Privacy Settings in IE9, it always returns true. And there have been issues in the past
  // with site-specific exceptions. Don't rely on it.
  // try..catch because some in situations `document.cookie` is exposed but throws a
  // SecurityError if you try to access it; e.g. documents created from data URIs
  // or in sandboxed iframes (depending on flags/context)

  try {
    // Create cookie
    d.cookie = 'cookietest=1; SameSite=Strict;';
    var result = d.cookie.indexOf('cookietest=') !== -1; // Delete cookie

    d.cookie = 'cookietest=1; SameSite=Strict; expires=Thu, 01-Jan-1970 00:00:01 GMT';
    return result;
  } catch (e) {
    return false;
  }
}
/**
 * Only single element selector are supported (no operators like space, +, >, etc).
 * `embed` and `position: fixed;` will be considered as blocked anyway because it always has no offsetParent.
 * Avoid `iframe` and anything with `[src=]` because they produce excess HTTP requests.
 *
 * See docs/content_blockers.md to learn how to make the list
 */


var filters = {
  abpIndo: ['#Iklan-Melayang', '#Kolom-Iklan-728', '#SidebarIklan-wrapper', 'a[title="7naga poker" i]', '[title="ALIENBOLA" i]'],
  abpvn: ['#quangcaomb', '.iosAdsiosAds-layout', '.quangcao', '[href^="https://r88.vn/"]', '[href^="https://zbet.vn/"]'],
  adBlockFinland: ['.mainostila', '.sponsorit', '.ylamainos', 'a[href*="/clickthrgh.asp?"]', 'a[href^="https://app.readpeak.com/ads"]'],
  adBlockPersian: ['#navbar_notice_50', 'a[href^="http://g1.v.fwmrm.net/ad/"]', '.kadr', 'TABLE[width="140px"]', '#divAgahi'],
  adBlockWarningRemoval: ['#adblock-honeypot', '.adblocker-root', '.wp_adblock_detect'],
  adGuardAnnoyances: ['amp-embed[type="zen"]', '.hs-sosyal', '#cookieconsentdiv', 'div[class^="app_gdpr"]', '.as-oil'],
  adGuardBase: ['#ad-after', '#ad-p3', '.BetterJsPopOverlay', '#ad_300X250', '#bannerfloat22'],
  adGuardChinese: [// Disabled because not reproducible. Will be replaced during the next filter update.
  // '#piao_div_0[style*="width:140px;"]',
  'a[href*=".ttz5.cn"]', 'a[href*=".yabovip2027.com/"]', '.tm3all2h4b', '.cc5278_banner_ad'],
  adGuardFrench: ['.zonepub', '[class*="_adLeaderboard"]', '[id^="block-xiti_oas-"]', 'a[href^="http://ptapjmp.com/"]', 'a[href^="https://go.alvexo.com/"]'],
  adGuardGerman: ['.banneritemwerbung_head_1', '.boxstartwerbung', '.werbung3', 'a[href^="http://www.eis.de/index.phtml?refid="]', 'a[href^="https://www.tipico.com/?affiliateId="]'],
  adGuardJapanese: ['#kauli_yad_1', '#ad-giftext', '#adsSPRBlock', 'a[href^="http://ad2.trafficgate.net/"]', 'a[href^="http://www.rssad.jp/"]'],
  adGuardMobile: ['amp-auto-ads', '#mgid_iframe', '.amp_ad', 'amp-embed[type="24smi"]', '#mgid_iframe1'],
  adGuardRussian: ['a[href^="https://ya-distrib.ru/r/"]', 'a[href^="https://ad.letmeads.com/"]', '.reclama', 'div[id^="smi2adblock"]', 'div[id^="AdFox_banner_"]'],
  adGuardSocial: ['a[href^="//www.stumbleupon.com/submit?url="]', 'a[href^="//telegram.me/share/url?"]', '.etsy-tweet', '#inlineShare', '.popup-social'],
  adGuardSpanishPortuguese: ['#barraPublicidade', '#Publicidade', '#publiEspecial', '#queTooltip', '[href^="http://ads.glispa.com/"]'],
  adGuardTrackingProtection: ['amp-embed[type="taboola"]', '#qoo-counter', 'a[href^="http://click.hotlog.ru/"]', 'a[href^="http://hitcounter.ru/top/stat.php"]', 'a[href^="http://top.mail.ru/jump"]'],
  adGuardTurkish: ['#backkapat', '#reklami', 'a[href^="http://adserv.ontek.com.tr/"]', 'a[href^="http://izlenzi.com/campaign/"]', 'a[href^="http://www.installads.net/"]'],
  bulgarian: ['td#freenet_table_ads', '#adbody', '#ea_intext_div', '.lapni-pop-over', '#xenium_hot_offers'],
  easyList: ['#AD_banner_bottom', '#Ads_google_02', '#N-ad-article-rightRail-1', '#ad-fullbanner2', '#ad-zone-2'],
  easyListChina: ['a[href*=".wensixuetang.com/"]', 'A[href*="/hth107.com/"]', '.appguide-wrap[onclick*="bcebos.com"]', '.frontpageAdvM', '#taotaole'],
  easyListCookie: ['#adtoniq-msg-bar', '#CoockiesPage', '#CookieModal_cookiemodal', '#DO_CC_PANEL', '#ShowCookie'],
  easyListCzechSlovak: ['#onlajny-stickers', '#reklamni-box', '.reklama-megaboard', '.sklik', '[id^="sklikReklama"]'],
  easyListDutch: ['#advertentie', '#vipAdmarktBannerBlock', '.adstekst', 'a[href^="https://xltube.nl/click/"]', '#semilo-lrectangle'],
  easyListGermany: ['a[href^="http://www.hw-area.com/?dp="]', 'a[href^="https://ads.sunmaker.com/tracking.php?"]', '.werbung-skyscraper2', '.bannergroup_werbung', '.ads_rechts'],
  easyListItaly: ['.box_adv_annunci', '.sb-box-pubbliredazionale', 'a[href^="http://affiliazioniads.snai.it/"]', 'a[href^="https://adserver.html.it/"]', 'a[href^="https://affiliazioniads.snai.it/"]'],
  easyListLithuania: ['.reklamos_tarpas', '.reklamos_nuorodos', 'img[alt="Reklaminis skydelis"]', 'img[alt="Dedikuoti.lt serveriai"]', 'img[alt="Hostingas Serveriai.lt"]'],
  estonian: ['A[href*="http://pay4results24.eu"]'],
  fanboyAnnoyances: ['#feedback-tab', '#taboola-below-article', '.feedburnerFeedBlock', '.widget-feedburner-counter', '[title="Subscribe to our blog"]'],
  fanboyAntiFacebook: ['.util-bar-module-firefly-visible'],
  fanboyEnhancedTrackers: ['.open.pushModal', '#issuem-leaky-paywall-articles-zero-remaining-nag', '#sovrn_container', 'div[class$="-hide"][zoompage-fontsize][style="display: block;"]', '.BlockNag__Card'],
  fanboySocial: ['.td-tags-and-social-wrapper-box', '.twitterContainer', '.youtube-social', 'a[title^="Like us on Facebook"]', 'img[alt^="Share on Digg"]'],
  frellwitSwedish: ['a[href*="casinopro.se"][target="_blank"]', 'a[href*="doktor-se.onelink.me"]', 'article.category-samarbete', 'div.holidAds', 'ul.adsmodern'],
  greekAdBlock: ['A[href*="adman.otenet.gr/click?"]', 'A[href*="http://axiabanners.exodus.gr/"]', 'A[href*="http://interactive.forthnet.gr/click?"]', 'DIV.agores300', 'TABLE.advright'],
  hungarian: ['A[href*="ad.eval.hu"]', 'A[href*="ad.netmedia.hu"]', 'A[href*="daserver.ultraweb.hu"]', '#cemp_doboz', '.optimonk-iframe-container'],
  iDontCareAboutCookies: ['.alert-info[data-block-track*="CookieNotice"]', '.ModuleTemplateCookieIndicator', '.o--cookies--container', '.cookie-msg-info-container', '#cookies-policy-sticky'],
  icelandicAbp: ['A[href^="/framework/resources/forms/ads.aspx"]'],
  latvian: ['a[href="http://www.salidzini.lv/"][style="display: block; width: 120px; height: 40px; overflow: hidden; position: relative;"]', 'a[href="http://www.salidzini.lv/"][style="display: block; width: 88px; height: 31px; overflow: hidden; position: relative;"]'],
  listKr: ['a[href*="//kingtoon.slnk.kr"]', 'a[href*="//playdsb.com/kr"]', 'div.logly-lift-adz', 'div[data-widget_id="ml6EJ074"]', 'ins.daum_ddn_area'],
  listeAr: ['.geminiLB1Ad', '.right-and-left-sponsers', 'a[href*=".aflam.info"]', 'a[href*="booraq.org"]', 'a[href*="dubizzle.com/ar/?utm_source="]'],
  listeFr: ['a[href^="http://promo.vador.com/"]', '#adcontainer_recherche', 'a[href*="weborama.fr/fcgi-bin/"]', '.site-pub-interstitiel', 'div[id^="crt-"][data-criteo-id]'],
  officialPolish: ['#ceneo-placeholder-ceneo-12', '[href^="https://aff.sendhub.pl/"]', 'a[href^="http://advmanager.techfun.pl/redirect/"]', 'a[href^="http://www.trizer.pl/?utm_source"]', 'div#skapiec_ad'],
  ro: ['a[href^="//afftrk.altex.ro/Counter/Click"]', 'a[href^="/magazin/"]', 'a[href^="https://blackfridaysales.ro/trk/shop/"]', 'a[href^="https://event.2performant.com/events/click"]', 'a[href^="https://l.profitshare.ro/"]'],
  ruAd: ['a[href*="//febrare.ru/"]', 'a[href*="//utimg.ru/"]', 'a[href*="://chikidiki.ru"]', '#pgeldiz', '.yandex-rtb-block'],
  thaiAds: ['a[href*=macau-uta-popup]', '#ads-google-middle_rectangle-group', '.ads300s', '.bumq', '.img-kosana'],
  webAnnoyancesUltralist: ['#mod-social-share-2', '#social-tools', '.ctpl-fullbanner', '.zergnet-recommend', '.yt.btn-link.btn-md.btn']
};
/**
 * The order of the returned array means nothing (it's always sorted alphabetically).
 *
 * Notice that the source is slightly unstable.
 * Safari provides a 2-taps way to disable all content blockers on a page temporarily.
 * Also content blockers can be disabled permanently for a domain, but it requires 4 taps.
 * So empty array shouldn't be treated as "no blockers", it should be treated as "no signal".
 * If you are a website owner, don't make your visitors want to disable content blockers.
 */

function getDomBlockers(_a) {
  var debug = (_a === void 0 ? {} : _a).debug;
  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var filterNames, allSelectors, blockedSelectors, activeBlockers;

    var _b;

    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_c) {
      switch (_c.label) {
        case 0:
          if (!isApplicable()) {
            return [2
            /*return*/
            , undefined];
          }

          filterNames = Object.keys(filters);
          allSelectors = (_b = []).concat.apply(_b, filterNames.map(function (filterName) {
            return filters[filterName];
          }));
          return [4
          /*yield*/
          , getBlockedSelectors(allSelectors)];

        case 1:
          blockedSelectors = _c.sent();

          if (debug) {
            printDebug(blockedSelectors);
          }

          activeBlockers = filterNames.filter(function (filterName) {
            var selectors = filters[filterName];
            var blockedCount = countTruthy(selectors.map(function (selector) {
              return blockedSelectors[selector];
            }));
            return blockedCount > selectors.length * 0.6;
          });
          activeBlockers.sort();
          return [2
          /*return*/
          , activeBlockers];
      }
    });
  });
}

function isApplicable() {
  // Safari (desktop and mobile) and all Android browsers keep content blockers in both regular and private mode
  return isWebKit() || isAndroid();
}

function getBlockedSelectors(selectors) {
  var _a;

  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var d, root, elements, blockedSelectors, i, element, holder, i;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_b) {
      switch (_b.label) {
        case 0:
          d = document;
          root = d.createElement('div');
          elements = new Array(selectors.length);
          blockedSelectors = {} // Set() isn't used just in case somebody need older browser support
          ;
          forceShow(root); // First create all elements that can be blocked. If the DOM steps below are done in a single cycle,
          // browser will alternate tree modification and layout reading, that is very slow.

          for (i = 0; i < selectors.length; ++i) {
            element = selectorToElement(selectors[i]);
            holder = d.createElement('div') // Protects from unwanted effects of `+` and `~` selectors of filters
            ;
            forceShow(holder);
            holder.appendChild(element);
            root.appendChild(holder);
            elements[i] = element;
          }

          _b.label = 1;

        case 1:
          if (!!d.body) return [3
          /*break*/
          , 3];
          return [4
          /*yield*/
          , wait(50)];

        case 2:
          _b.sent();

          return [3
          /*break*/
          , 1];

        case 3:
          d.body.appendChild(root);

          try {
            // Then check which of the elements are blocked
            for (i = 0; i < selectors.length; ++i) {
              if (!elements[i].offsetParent) {
                blockedSelectors[selectors[i]] = true;
              }
            }
          } finally {
            // Then remove the elements
            (_a = root.parentNode) === null || _a === void 0 ? void 0 : _a.removeChild(root);
          }

          return [2
          /*return*/
          , blockedSelectors];
      }
    });
  });
}

function forceShow(element) {
  element.style.setProperty('display', 'block', 'important');
}

function printDebug(blockedSelectors) {
  var message = 'DOM blockers debug:\n```';

  for (var _i = 0, _a = Object.keys(filters); _i < _a.length; _i++) {
    var filterName = _a[_i];
    message += "\n" + filterName + ":";

    for (var _b = 0, _c = filters[filterName]; _b < _c.length; _b++) {
      var selector = _c[_b];
      message += "\n  " + selector + " " + (blockedSelectors[selector] ? '🚫' : '➡️');
    }
  } // console.log is ok here because it's under a debug clause
  // eslint-disable-next-line no-console


  console.log(message + "\n```");
}
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/color-gamut
 */


function getColorGamut() {
  // rec2020 includes p3 and p3 includes srgb
  for (var _i = 0, _a = ['rec2020', 'p3', 'srgb']; _i < _a.length; _i++) {
    var gamut = _a[_i];

    if (matchMedia("(color-gamut: " + gamut + ")").matches) {
      return gamut;
    }
  }

  return undefined;
}
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/inverted-colors
 */


function areColorsInverted() {
  if (doesMatch('inverted')) {
    return true;
  }

  if (doesMatch('none')) {
    return false;
  }

  return undefined;
}

function doesMatch(value) {
  return matchMedia("(inverted-colors: " + value + ")").matches;
}
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/forced-colors
 */


function areColorsForced() {
  if (doesMatch$1('active')) {
    return true;
  }

  if (doesMatch$1('none')) {
    return false;
  }

  return undefined;
}

function doesMatch$1(value) {
  return matchMedia("(forced-colors: " + value + ")").matches;
}

var maxValueToCheck = 100;
/**
 * If the display is monochrome (e.g. black&white), the value will be ≥0 and will mean the number of bits per pixel.
 * If the display is not monochrome, the returned value will be 0.
 * If the browser doesn't support this feature, the returned value will be undefined.
 *
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/monochrome
 */

function getMonochromeDepth() {
  if (!matchMedia('(min-monochrome: 0)').matches) {
    // The media feature isn't supported by the browser
    return undefined;
  } // A variation of binary search algorithm can be used here.
  // But since expected values are very small (≤10), there is no sense in adding the complexity.


  for (var i = 0; i <= maxValueToCheck; ++i) {
    if (matchMedia("(max-monochrome: " + i + ")").matches) {
      return i;
    }
  }

  throw new Error('Too high value');
}
/**
 * @see https://www.w3.org/TR/mediaqueries-5/#prefers-contrast
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-contrast
 */


function getContrastPreference() {
  if (doesMatch$2('no-preference')) {
    return 0
    /* None */
    ;
  } // The sources contradict on the keywords. Probably 'high' and 'low' will never be implemented.
  // Need to check it when all browsers implement the feature.


  if (doesMatch$2('high') || doesMatch$2('more')) {
    return 1
    /* More */
    ;
  }

  if (doesMatch$2('low') || doesMatch$2('less')) {
    return -1
    /* Less */
    ;
  }

  if (doesMatch$2('forced')) {
    return 10
    /* ForcedColors */
    ;
  }

  return undefined;
}

function doesMatch$2(value) {
  return matchMedia("(prefers-contrast: " + value + ")").matches;
}
/**
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/@media/prefers-reduced-motion
 */


function isMotionReduced() {
  if (doesMatch$3('reduce')) {
    return true;
  }

  if (doesMatch$3('no-preference')) {
    return false;
  }

  return undefined;
}

function doesMatch$3(value) {
  return matchMedia("(prefers-reduced-motion: " + value + ")").matches;
}
/**
 * @see https://www.w3.org/TR/mediaqueries-5/#dynamic-range
 */


function isHDR() {
  if (doesMatch$4('high')) {
    return true;
  }

  if (doesMatch$4('standard')) {
    return false;
  }

  return undefined;
}

function doesMatch$4(value) {
  return matchMedia("(dynamic-range: " + value + ")").matches;
}

var M = Math; // To reduce the minified code size

var fallbackFn = function () {
  return 0;
};
/**
 * @see https://gitlab.torproject.org/legacy/trac/-/issues/13018
 * @see https://bugzilla.mozilla.org/show_bug.cgi?id=531915
 */


function getMathFingerprint() {
  // Native operations
  var acos = M.acos || fallbackFn;
  var acosh = M.acosh || fallbackFn;
  var asin = M.asin || fallbackFn;
  var asinh = M.asinh || fallbackFn;
  var atanh = M.atanh || fallbackFn;
  var atan = M.atan || fallbackFn;
  var sin = M.sin || fallbackFn;
  var sinh = M.sinh || fallbackFn;
  var cos = M.cos || fallbackFn;
  var cosh = M.cosh || fallbackFn;
  var tan = M.tan || fallbackFn;
  var tanh = M.tanh || fallbackFn;
  var exp = M.exp || fallbackFn;
  var expm1 = M.expm1 || fallbackFn;
  var log1p = M.log1p || fallbackFn; // Operation polyfills

  var powPI = function (value) {
    return M.pow(M.PI, value);
  };

  var acoshPf = function (value) {
    return M.log(value + M.sqrt(value * value - 1));
  };

  var asinhPf = function (value) {
    return M.log(value + M.sqrt(value * value + 1));
  };

  var atanhPf = function (value) {
    return M.log((1 + value) / (1 - value)) / 2;
  };

  var sinhPf = function (value) {
    return M.exp(value) - 1 / M.exp(value) / 2;
  };

  var coshPf = function (value) {
    return (M.exp(value) + 1 / M.exp(value)) / 2;
  };

  var expm1Pf = function (value) {
    return M.exp(value) - 1;
  };

  var tanhPf = function (value) {
    return (M.exp(2 * value) - 1) / (M.exp(2 * value) + 1);
  };

  var log1pPf = function (value) {
    return M.log(1 + value);
  }; // Note: constant values are empirical


  return {
    acos: acos(0.123124234234234242),
    acosh: acosh(1e308),
    acoshPf: acoshPf(1e154),
    asin: asin(0.123124234234234242),
    asinh: asinh(1),
    asinhPf: asinhPf(1),
    atanh: atanh(0.5),
    atanhPf: atanhPf(0.5),
    atan: atan(0.5),
    sin: sin(-1e300),
    sinh: sinh(1),
    sinhPf: sinhPf(1),
    cos: cos(10.000000000123),
    cosh: cosh(1),
    coshPf: coshPf(1),
    tan: tan(-1e300),
    tanh: tanh(1),
    tanhPf: tanhPf(1),
    exp: exp(1),
    expm1: expm1(1),
    expm1Pf: expm1Pf(1),
    log1p: log1p(10),
    log1pPf: log1pPf(10),
    powPI: powPI(-100)
  };
}
/**
 * We use m or w because these two characters take up the maximum width.
 * Also there are a couple of ligatures.
 */


var defaultText = 'mmMwWLliI0fiflO&1';
/**
 * Settings of text blocks to measure. The keys are random but persistent words.
 */

var presets = {
  /**
   * The default font. User can change it in desktop Chrome, desktop Firefox, IE 11,
   * Android Chrome (but only when the size is ≥ than the default) and Android Firefox.
   */
  default: [],

  /** OS font on macOS. User can change its size and weight. Applies after Safari restart. */
  apple: [{
    font: '-apple-system-body'
  }],

  /** User can change it in desktop Chrome and desktop Firefox. */
  serif: [{
    fontFamily: 'serif'
  }],

  /** User can change it in desktop Chrome and desktop Firefox. */
  sans: [{
    fontFamily: 'sans-serif'
  }],

  /** User can change it in desktop Chrome and desktop Firefox. */
  mono: [{
    fontFamily: 'monospace'
  }],

  /**
   * Check the smallest allowed font size. User can change it in desktop Chrome, desktop Firefox and desktop Safari.
   * The height can be 0 in Chrome on a retina display.
   */
  min: [{
    fontSize: '1px'
  }],

  /** Tells one OS from another in desktop Chrome. */
  system: [{
    fontFamily: 'system-ui'
  }]
};
/**
 * The result is a dictionary of the width of the text samples.
 * Heights aren't included because they give no extra entropy and are unstable.
 *
 * The result is very stable in IE 11, Edge 18 and Safari 14.
 * The result changes when the OS pixel density changes in Chromium 87. The real pixel density is required to solve,
 * but seems like it's impossible: https://stackoverflow.com/q/1713771/1118709.
 * The "min" and the "mono" (only on Windows) value may change when the page is zoomed in Firefox 87.
 */

function getFontPreferences() {
  return withNaturalFonts(function (document, container) {
    var elements = {};
    var sizes = {}; // First create all elements to measure. If the DOM steps below are done in a single cycle,
    // browser will alternate tree modification and layout reading, that is very slow.

    for (var _i = 0, _a = Object.keys(presets); _i < _a.length; _i++) {
      var key = _a[_i];
      var _b = presets[key],
          _c = _b[0],
          style = _c === void 0 ? {} : _c,
          _d = _b[1],
          text = _d === void 0 ? defaultText : _d;
      var element = document.createElement('span');
      element.textContent = text;
      element.style.whiteSpace = 'nowrap';

      for (var _e = 0, _f = Object.keys(style); _e < _f.length; _e++) {
        var name_1 = _f[_e];
        var value = style[name_1];

        if (value !== undefined) {
          element.style[name_1] = value;
        }
      }

      elements[key] = element;
      container.appendChild(document.createElement('br'));
      container.appendChild(element);
    } // Then measure the created elements


    for (var _g = 0, _h = Object.keys(presets); _g < _h.length; _g++) {
      var key = _h[_g];
      sizes[key] = elements[key].getBoundingClientRect().width;
    }

    return sizes;
  });
}
/**
 * Creates a DOM environment that provides the most natural font available, including Android OS font.
 * Measurements of the elements are zoom-independent.
 * Don't put a content to measure inside an absolutely positioned element.
 */


function withNaturalFonts(action, containerWidthPx) {
  if (containerWidthPx === void 0) {
    containerWidthPx = 4000;
  }
  /*
   * Requirements for Android Chrome to apply the system font size to a text inside an iframe:
   * - The iframe mustn't have a `display: none;` style;
   * - The text mustn't be positioned absolutely;
   * - The text block must be wide enough.
   *   2560px on some devices in portrait orientation for the biggest font size option (32px);
   * - There must be much enough text to form a few lines (I don't know the exact numbers);
   * - The text must have the `text-size-adjust: none` style. Otherwise the text will scale in "Desktop site" mode;
   *
   * Requirements for Android Firefox to apply the system font size to a text inside an iframe:
   * - The iframe document must have a header: `<meta name="viewport" content="width=device-width, initial-scale=1" />`.
   *   The only way to set it is to use the `srcdoc` attribute of the iframe;
   * - The iframe content must get loaded before adding extra content with JavaScript;
   *
   * https://example.com as the iframe target always inherits Android font settings so it can be used as a reference.
   *
   * Observations on how page zoom affects the measurements:
   * - macOS Safari 11.1, 12.1, 13.1, 14.0: zoom reset + offsetWidth = 100% reliable;
   * - macOS Safari 11.1, 12.1, 13.1, 14.0: zoom reset + getBoundingClientRect = 100% reliable;
   * - macOS Safari 14.0: offsetWidth = 5% fluctuation;
   * - macOS Safari 14.0: getBoundingClientRect = 5% fluctuation;
   * - iOS Safari 9, 10, 11.0, 12.0: haven't found a way to zoom a page (pinch doesn't change layout);
   * - iOS Safari 13.1, 14.0: zoom reset + offsetWidth = 100% reliable;
   * - iOS Safari 13.1, 14.0: zoom reset + getBoundingClientRect = 100% reliable;
   * - iOS Safari 14.0: offsetWidth = 100% reliable;
   * - iOS Safari 14.0: getBoundingClientRect = 100% reliable;
   * - Chrome 42, 65, 80, 87: zoom 1/devicePixelRatio + offsetWidth = 1px fluctuation;
   * - Chrome 42, 65, 80, 87: zoom 1/devicePixelRatio + getBoundingClientRect = 100% reliable;
   * - Chrome 87: offsetWidth = 1px fluctuation;
   * - Chrome 87: getBoundingClientRect = 0.7px fluctuation;
   * - Firefox 48, 51: offsetWidth = 10% fluctuation;
   * - Firefox 48, 51: getBoundingClientRect = 10% fluctuation;
   * - Firefox 52, 53, 57, 62, 66, 67, 68, 71, 75, 80, 84: offsetWidth = width 100% reliable, height 10% fluctuation;
   * - Firefox 52, 53, 57, 62, 66, 67, 68, 71, 75, 80, 84: getBoundingClientRect = width 100% reliable, height 10%
   *   fluctuation;
   * - Android Chrome 86: haven't found a way to zoom a page (pinch doesn't change layout);
   * - Android Firefox 84: font size in accessibility settings changes all the CSS sizes, but offsetWidth and
   *   getBoundingClientRect keep measuring with regular units, so the size reflects the font size setting and doesn't
   *   fluctuate;
   * - IE 11, Edge 18: zoom 1/devicePixelRatio + offsetWidth = 100% reliable;
   * - IE 11, Edge 18: zoom 1/devicePixelRatio + getBoundingClientRect = reflects the zoom level;
   * - IE 11, Edge 18: offsetWidth = 100% reliable;
   * - IE 11, Edge 18: getBoundingClientRect = 100% reliable;
   */


  return withIframe(function (_, iframeWindow) {
    var iframeDocument = iframeWindow.document;
    var iframeBody = iframeDocument.body;
    var bodyStyle = iframeBody.style;
    bodyStyle.width = containerWidthPx + "px";
    bodyStyle.webkitTextSizeAdjust = bodyStyle.textSizeAdjust = 'none'; // See the big comment above

    if (isChromium()) {
      iframeBody.style.zoom = "" + 1 / iframeWindow.devicePixelRatio;
    } else if (isWebKit()) {
      iframeBody.style.zoom = 'reset';
    } // See the big comment above


    var linesOfText = iframeDocument.createElement('div');
    linesOfText.textContent = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__spreadArrays)(Array(containerWidthPx / 20 << 0)).map(function () {
      return 'word';
    }).join(' ');
    iframeBody.appendChild(linesOfText);
    return action(iframeDocument, iframeBody);
  }, '<!doctype html><html><head><meta name="viewport" content="width=device-width, initial-scale=1">');
}
/**
 * The list of entropy sources used to make visitor identifiers.
 *
 * This value isn't restricted by Semantic Versioning, i.e. it may be changed without bumping minor or major version of
 * this package.
 */


var sources = {
  // READ FIRST:
  // See https://github.com/fingerprintjs/fingerprintjs/blob/master/contributing.md#how-to-make-an-entropy-source
  // to learn how entropy source works and how to make your own.
  // The sources run in this exact order.
  // The asynchronous sources are at the start to run in parallel with other sources.
  fonts: getFonts,
  domBlockers: getDomBlockers,
  fontPreferences: getFontPreferences,
  audio: getAudioFingerprint,
  screenFrame: getRoundedScreenFrame,
  osCpu: getOsCpu,
  languages: getLanguages,
  colorDepth: getColorDepth,
  deviceMemory: getDeviceMemory,
  screenResolution: getScreenResolution,
  hardwareConcurrency: getHardwareConcurrency,
  timezone: getTimezone,
  sessionStorage: getSessionStorage,
  localStorage: getLocalStorage,
  indexedDB: getIndexedDB,
  openDatabase: getOpenDatabase,
  cpuClass: getCpuClass,
  platform: getPlatform,
  plugins: getPlugins,
  canvas: getCanvasFingerprint,
  touchSupport: getTouchSupport,
  vendor: getVendor,
  vendorFlavors: getVendorFlavors,
  cookiesEnabled: areCookiesEnabled,
  colorGamut: getColorGamut,
  invertedColors: areColorsInverted,
  forcedColors: areColorsForced,
  monochrome: getMonochromeDepth,
  contrast: getContrastPreference,
  reducedMotion: isMotionReduced,
  hdr: isHDR,
  math: getMathFingerprint
};
/**
 * Loads the built-in entropy sources.
 * Returns a function that collects the entropy components to make the visitor identifier.
 */

function loadBuiltinSources(options) {
  return loadSources(sources, options, []);
}

var commentTemplate = '$ if upgrade to Pro: https://fpjs.dev/pro';

function getConfidence(components) {
  var openConfidenceScore = getOpenConfidenceScore(components);
  var proConfidenceScore = deriveProConfidenceScore(openConfidenceScore);
  return {
    score: openConfidenceScore,
    comment: commentTemplate.replace(/\$/g, "" + proConfidenceScore)
  };
}

function getOpenConfidenceScore(components) {
  // In order to calculate the true probability of the visitor identifier being correct, we need to know the number of
  // website visitors (the higher the number, the less the probability because the fingerprint entropy is limited).
  // JS agent doesn't know the number of visitors, so we can only do an approximate assessment.
  if (isAndroid()) {
    return 0.4;
  } // Safari (mobile and desktop)


  if (isWebKit()) {
    return isDesktopSafari() ? 0.5 : 0.3;
  }

  var platform = components.platform.value || ''; // Windows

  if (/^Win/.test(platform)) {
    // The score is greater than on macOS because of the higher variety of devices running Windows.
    // Chrome provides more entropy than Firefox according too
    // https://netmarketshare.com/browser-market-share.aspx?options=%7B%22filter%22%3A%7B%22%24and%22%3A%5B%7B%22platform%22%3A%7B%22%24in%22%3A%5B%22Windows%22%5D%7D%7D%5D%7D%2C%22dateLabel%22%3A%22Trend%22%2C%22attributes%22%3A%22share%22%2C%22group%22%3A%22browser%22%2C%22sort%22%3A%7B%22share%22%3A-1%7D%2C%22id%22%3A%22browsersDesktop%22%2C%22dateInterval%22%3A%22Monthly%22%2C%22dateStart%22%3A%222019-11%22%2C%22dateEnd%22%3A%222020-10%22%2C%22segments%22%3A%22-1000%22%7D
    // So we assign the same score to them.
    return 0.6;
  } // macOS


  if (/^Mac/.test(platform)) {
    // Chrome provides more entropy than Safari and Safari provides more entropy than Firefox.
    // Chrome is more popular than Safari and Safari is more popular than Firefox according to
    // https://netmarketshare.com/browser-market-share.aspx?options=%7B%22filter%22%3A%7B%22%24and%22%3A%5B%7B%22platform%22%3A%7B%22%24in%22%3A%5B%22Mac%20OS%22%5D%7D%7D%5D%7D%2C%22dateLabel%22%3A%22Trend%22%2C%22attributes%22%3A%22share%22%2C%22group%22%3A%22browser%22%2C%22sort%22%3A%7B%22share%22%3A-1%7D%2C%22id%22%3A%22browsersDesktop%22%2C%22dateInterval%22%3A%22Monthly%22%2C%22dateStart%22%3A%222019-11%22%2C%22dateEnd%22%3A%222020-10%22%2C%22segments%22%3A%22-1000%22%7D
    // So we assign the same score to them.
    return 0.5;
  } // Another platform, e.g. a desktop Linux. It's rare, so it should be pretty unique.


  return 0.7;
}

function deriveProConfidenceScore(openConfidenceScore) {
  return round(0.99 + 0.01 * openConfidenceScore, 0.0001);
}

function componentsToCanonicalString(components) {
  var result = '';

  for (var _i = 0, _a = Object.keys(components).sort(); _i < _a.length; _i++) {
    var componentKey = _a[_i];
    var component = components[componentKey];
    var value = component.error ? 'error' : JSON.stringify(component.value);
    result += "" + (result ? '|' : '') + componentKey.replace(/([:|\\])/g, '\\$1') + ":" + value;
  }

  return result;
}

function componentsToDebugString(components) {
  return JSON.stringify(components, function (_key, value) {
    if (value instanceof Error) {
      return errorToObject(value);
    }

    return value;
  }, 2);
}

function hashComponents(components) {
  return x64hash128(componentsToCanonicalString(components));
}
/**
 * Makes a GetResult implementation that calculates the visitor id hash on demand.
 * Designed for optimisation.
 */


function makeLazyGetResult(components) {
  var visitorIdCache; // This function runs very fast, so there is no need to make it lazy

  var confidence = getConfidence(components); // A plain class isn't used because its getters and setters aren't enumerable.

  return {
    get visitorId() {
      if (visitorIdCache === undefined) {
        visitorIdCache = hashComponents(this.components);
      }

      return visitorIdCache;
    },

    set visitorId(visitorId) {
      visitorIdCache = visitorId;
    },

    confidence: confidence,
    components: components,
    version: version
  };
}
/**
 * A delay is required to ensure consistent entropy components.
 * See https://github.com/fingerprintjs/fingerprintjs/issues/254
 * and https://github.com/fingerprintjs/fingerprintjs/issues/307
 * and https://github.com/fingerprintjs/fingerprintjs/commit/945633e7c5f67ae38eb0fea37349712f0e669b18
 */


function prepareForSources(delayFallback) {
  if (delayFallback === void 0) {
    delayFallback = 50;
  } // A proper deadline is unknown. Let it be twice the fallback timeout so that both cases have the same average time.


  return requestIdleCallbackIfAvailable(delayFallback, delayFallback * 2);
}
/**
 * The function isn't exported from the index file to not allow to call it without `load()`.
 * The hiding gives more freedom for future non-breaking updates.
 *
 * A factory function is used instead of a class to shorten the attribute names in the minified code.
 * Native private class fields could've been used, but TypeScript doesn't allow them with `"target": "es5"`.
 */


function makeAgent(getComponents, debug) {
  var creationTime = Date.now();
  return {
    get: function (options) {
      return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
        var startTime, components, result;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_a) {
          switch (_a.label) {
            case 0:
              startTime = Date.now();
              return [4
              /*yield*/
              , getComponents()];

            case 1:
              components = _a.sent();
              result = makeLazyGetResult(components);

              if (debug || (options === null || options === void 0 ? void 0 : options.debug)) {
                // console.log is ok here because it's under a debug clause
                // eslint-disable-next-line no-console
                console.log("Copy the text below to get the debug data:\n\n```\nversion: " + result.version + "\nuserAgent: " + navigator.userAgent + "\ntimeBetweenLoadAndGet: " + (startTime - creationTime) + "\nvisitorId: " + result.visitorId + "\ncomponents: " + componentsToDebugString(components) + "\n```");
              }

              return [2
              /*return*/
              , result];
          }
        });
      });
    }
  };
}
/**
 * Sends an unpersonalized AJAX request to collect installation statistics
 */


function monitor() {
  // The FingerprintJS CDN (https://github.com/fingerprintjs/cdn) replaces `window.__fpjs_d_m` with `true`
  if (window.__fpjs_d_m || Math.random() >= 0.001) {
    return;
  }

  try {
    var request = new XMLHttpRequest();
    request.open('get', "https://m1.openfpcdn.io/fingerprintjs/v" + version + "/npm-monitoring", true);
    request.send();
  } catch (error) {
    // console.error is ok here because it's an unexpected error handler
    // eslint-disable-next-line no-console
    console.error(error);
  }
}
/**
 * Builds an instance of Agent and waits a delay required for a proper operation.
 */


function load(_a) {
  var _b = _a === void 0 ? {} : _a,
      delayFallback = _b.delayFallback,
      debug = _b.debug,
      _c = _b.monitoring,
      monitoring = _c === void 0 ? true : _c;

  return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__awaiter)(this, void 0, void 0, function () {
    var getComponents;
    return (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__generator)(this, function (_d) {
      switch (_d.label) {
        case 0:
          if (monitoring) {
            monitor();
          }

          return [4
          /*yield*/
          , prepareForSources(delayFallback)];

        case 1:
          _d.sent();

          getComponents = loadBuiltinSources({
            debug: debug
          });
          return [2
          /*return*/
          , makeAgent(getComponents, debug)];
      }
    });
  });
} // The default export is a syntax sugar (`import * as FP from '...' → import FP from '...'`).
// It should contain all the public exported values.


var index = {
  load: load,
  hashComponents: hashComponents,
  componentsToDebugString: componentsToDebugString
}; // The exports below are for private usage. They may change unexpectedly. Use them at your own risk.

/** Not documented, out of Semantic Versioning, usage is at your own risk */

var murmurX64Hash128 = x64hash128;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (index);


/***/ }),

/***/ 61824:
/*!***************************************************************************************!*\
  !*** ./node_modules/@meilisearch/instant-meilisearch/dist/instant-meilisearch.umd.js ***!
  \***************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

(function (global, factory) {
   true ? factory(exports) : 0;
})(this, function (exports) {
  'use strict';
  /******************************************************************************
  Copyright (c) Microsoft Corporation.
    Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */

  var __assign = function () {
    __assign = Object.assign || function __assign(t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }

      return t;
    };

    return __assign.apply(this, arguments);
  };

  function __rest(s, e) {
    var t = {};

    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];

    if (s != null && typeof Object.getOwnPropertySymbols === "function") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];
    }
    return t;
  }

  function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) {
      return value instanceof P ? value : new P(function (resolve) {
        resolve(value);
      });
    }

    return new (P || (P = Promise))(function (resolve, reject) {
      function fulfilled(value) {
        try {
          step(generator.next(value));
        } catch (e) {
          reject(e);
        }
      }

      function rejected(value) {
        try {
          step(generator["throw"](value));
        } catch (e) {
          reject(e);
        }
      }

      function step(result) {
        result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
      }

      step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
  }

  function __generator(thisArg, body) {
    var _ = {
      label: 0,
      sent: function () {
        if (t[0] & 1) throw t[1];
        return t[1];
      },
      trys: [],
      ops: []
    },
        f,
        y,
        t,
        g;
    return g = {
      next: verb(0),
      "throw": verb(1),
      "return": verb(2)
    }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
      return this;
    }), g;

    function verb(n) {
      return function (v) {
        return step([n, v]);
      };
    }

    function step(op) {
      if (f) throw new TypeError("Generator is already executing.");

      while (g && (g = 0, op[0] && (_ = 0)), _) try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
        if (y = 0, t) op = [op[0] & 2, t.value];

        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;

          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };

          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;

          case 7:
            op = _.ops.pop();

            _.trys.pop();

            continue;

          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }

            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }

            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }

            if (t && _.label < t[2]) {
              _.label = t[2];

              _.ops.push(op);

              break;
            }

            if (t[2]) _.ops.pop();

            _.trys.pop();

            continue;
        }

        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }

      if (op[0] & 5) throw op[1];
      return {
        value: op[0] ? op[1] : void 0,
        done: true
      };
    }
  }

  function __spreadArray(to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
      if (ar || !(i in from)) {
        if (!ar) ar = Array.prototype.slice.call(from, 0, i);
        ar[i] = from[i];
      }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
  }

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function createCommonjsModule(fn) {
    var module = {
      exports: {}
    };
    return fn(module, module.exports), module.exports;
  }

  var browserPolyfill = createCommonjsModule(function (module) {
    (function (self) {
      (function (exports) {
        var support = {
          searchParams: 'URLSearchParams' in self,
          iterable: 'Symbol' in self && 'iterator' in Symbol,
          blob: 'FileReader' in self && 'Blob' in self && function () {
            try {
              new Blob();
              return true;
            } catch (e) {
              return false;
            }
          }(),
          formData: 'FormData' in self,
          arrayBuffer: 'ArrayBuffer' in self
        };

        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }

        if (support.arrayBuffer) {
          var viewClasses = ['[object Int8Array]', '[object Uint8Array]', '[object Uint8ClampedArray]', '[object Int16Array]', '[object Uint16Array]', '[object Int32Array]', '[object Uint32Array]', '[object Float32Array]', '[object Float64Array]'];

          var isArrayBufferView = ArrayBuffer.isView || function (obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }

        function normalizeName(name) {
          if (typeof name !== 'string') {
            name = String(name);
          }

          if (/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(name)) {
            throw new TypeError('Invalid character in header field name');
          }

          return name.toLowerCase();
        }

        function normalizeValue(value) {
          if (typeof value !== 'string') {
            value = String(value);
          }

          return value;
        } // Build a destructive iterator for the value list


        function iteratorFor(items) {
          var iterator = {
            next: function () {
              var value = items.shift();
              return {
                done: value === undefined,
                value: value
              };
            }
          };

          if (support.iterable) {
            iterator[Symbol.iterator] = function () {
              return iterator;
            };
          }

          return iterator;
        }

        function Headers(headers) {
          this.map = {};

          if (headers instanceof Headers) {
            headers.forEach(function (value, name) {
              this.append(name, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function (header) {
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function (name) {
              this.append(name, headers[name]);
            }, this);
          }
        }

        Headers.prototype.append = function (name, value) {
          name = normalizeName(name);
          value = normalizeValue(value);
          var oldValue = this.map[name];
          this.map[name] = oldValue ? oldValue + ', ' + value : value;
        };

        Headers.prototype['delete'] = function (name) {
          delete this.map[normalizeName(name)];
        };

        Headers.prototype.get = function (name) {
          name = normalizeName(name);
          return this.has(name) ? this.map[name] : null;
        };

        Headers.prototype.has = function (name) {
          return this.map.hasOwnProperty(normalizeName(name));
        };

        Headers.prototype.set = function (name, value) {
          this.map[normalizeName(name)] = normalizeValue(value);
        };

        Headers.prototype.forEach = function (callback, thisArg) {
          for (var name in this.map) {
            if (this.map.hasOwnProperty(name)) {
              callback.call(thisArg, this.map[name], name, this);
            }
          }
        };

        Headers.prototype.keys = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push(name);
          });
          return iteratorFor(items);
        };

        Headers.prototype.values = function () {
          var items = [];
          this.forEach(function (value) {
            items.push(value);
          });
          return iteratorFor(items);
        };

        Headers.prototype.entries = function () {
          var items = [];
          this.forEach(function (value, name) {
            items.push([name, value]);
          });
          return iteratorFor(items);
        };

        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }

        function consumed(body) {
          if (body.bodyUsed) {
            return Promise.reject(new TypeError('Already read'));
          }

          body.bodyUsed = true;
        }

        function fileReaderReady(reader) {
          return new Promise(function (resolve, reject) {
            reader.onload = function () {
              resolve(reader.result);
            };

            reader.onerror = function () {
              reject(reader.error);
            };
          });
        }

        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }

        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsText(blob);
          return promise;
        }

        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);

          for (var i = 0; i < view.length; i++) {
            chars[i] = String.fromCharCode(view[i]);
          }

          return chars.join('');
        }

        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }

        function Body() {
          this.bodyUsed = false;

          this._initBody = function (body) {
            this._bodyInit = body;

            if (!body) {
              this._bodyText = '';
            } else if (typeof body === 'string') {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer); // IE 10-11 can't handle a DataView body.

              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }

            if (!this.headers.get('content-type')) {
              if (typeof body === 'string') {
                this.headers.set('content-type', 'text/plain;charset=UTF-8');
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set('content-type', this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
              }
            }
          };

          if (support.blob) {
            this.blob = function () {
              var rejected = consumed(this);

              if (rejected) {
                return rejected;
              }

              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error('could not read FormData body as blob');
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };

            this.arrayBuffer = function () {
              if (this._bodyArrayBuffer) {
                return consumed(this) || Promise.resolve(this._bodyArrayBuffer);
              } else {
                return this.blob().then(readBlobAsArrayBuffer);
              }
            };
          }

          this.text = function () {
            var rejected = consumed(this);

            if (rejected) {
              return rejected;
            }

            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error('could not read FormData body as text');
            } else {
              return Promise.resolve(this._bodyText);
            }
          };

          if (support.formData) {
            this.formData = function () {
              return this.text().then(decode);
            };
          }

          this.json = function () {
            return this.text().then(JSON.parse);
          };

          return this;
        } // HTTP methods whose capitalization should be normalized


        var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];

        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }

        function Request(input, options) {
          options = options || {};
          var body = options.body;

          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError('Already read');
            }

            this.url = input.url;
            this.credentials = input.credentials;

            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }

            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;

            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }

          this.credentials = options.credentials || this.credentials || 'same-origin';

          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }

          this.method = normalizeMethod(options.method || this.method || 'GET');
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal;
          this.referrer = null;

          if ((this.method === 'GET' || this.method === 'HEAD') && body) {
            throw new TypeError('Body not allowed for GET or HEAD requests');
          }

          this._initBody(body);
        }

        Request.prototype.clone = function () {
          return new Request(this, {
            body: this._bodyInit
          });
        };

        function decode(body) {
          var form = new FormData();
          body.trim().split('&').forEach(function (bytes) {
            if (bytes) {
              var split = bytes.split('=');
              var name = split.shift().replace(/\+/g, ' ');
              var value = split.join('=').replace(/\+/g, ' ');
              form.append(decodeURIComponent(name), decodeURIComponent(value));
            }
          });
          return form;
        }

        function parseHeaders(rawHeaders) {
          var headers = new Headers(); // Replace instances of \r\n and \n followed by at least one space or horizontal tab with a space
          // https://tools.ietf.org/html/rfc7230#section-3.2

          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, ' ');
          preProcessedHeaders.split(/\r?\n/).forEach(function (line) {
            var parts = line.split(':');
            var key = parts.shift().trim();

            if (key) {
              var value = parts.join(':').trim();
              headers.append(key, value);
            }
          });
          return headers;
        }

        Body.call(Request.prototype);

        function Response(bodyInit, options) {
          if (!options) {
            options = {};
          }

          this.type = 'default';
          this.status = options.status === undefined ? 200 : options.status;
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = 'statusText' in options ? options.statusText : 'OK';
          this.headers = new Headers(options.headers);
          this.url = options.url || '';

          this._initBody(bodyInit);
        }

        Body.call(Response.prototype);

        Response.prototype.clone = function () {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
        };

        Response.error = function () {
          var response = new Response(null, {
            status: 0,
            statusText: ''
          });
          response.type = 'error';
          return response;
        };

        var redirectStatuses = [301, 302, 303, 307, 308];

        Response.redirect = function (url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError('Invalid status code');
          }

          return new Response(null, {
            status: status,
            headers: {
              location: url
            }
          });
        };

        exports.DOMException = self.DOMException;

        try {
          new exports.DOMException();
        } catch (err) {
          exports.DOMException = function (message, name) {
            this.message = message;
            this.name = name;
            var error = Error(message);
            this.stack = error.stack;
          };

          exports.DOMException.prototype = Object.create(Error.prototype);
          exports.DOMException.prototype.constructor = exports.DOMException;
        }

        function fetch(input, init) {
          return new Promise(function (resolve, reject) {
            var request = new Request(input, init);

            if (request.signal && request.signal.aborted) {
              return reject(new exports.DOMException('Aborted', 'AbortError'));
            }

            var xhr = new XMLHttpRequest();

            function abortXhr() {
              xhr.abort();
            }

            xhr.onload = function () {
              var options = {
                status: xhr.status,
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || '')
              };
              options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');
              var body = 'response' in xhr ? xhr.response : xhr.responseText;
              resolve(new Response(body, options));
            };

            xhr.onerror = function () {
              reject(new TypeError('Network request failed'));
            };

            xhr.ontimeout = function () {
              reject(new TypeError('Network request failed'));
            };

            xhr.onabort = function () {
              reject(new exports.DOMException('Aborted', 'AbortError'));
            };

            xhr.open(request.method, request.url, true);

            if (request.credentials === 'include') {
              xhr.withCredentials = true;
            } else if (request.credentials === 'omit') {
              xhr.withCredentials = false;
            }

            if ('responseType' in xhr && support.blob) {
              xhr.responseType = 'blob';
            }

            request.headers.forEach(function (value, name) {
              xhr.setRequestHeader(name, value);
            });

            if (request.signal) {
              request.signal.addEventListener('abort', abortXhr);

              xhr.onreadystatechange = function () {
                // DONE (success or failure)
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener('abort', abortXhr);
                }
              };
            }

            xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);
          });
        }

        fetch.polyfill = true;

        if (!self.fetch) {
          self.fetch = fetch;
          self.Headers = Headers;
          self.Request = Request;
          self.Response = Response;
        }

        exports.Headers = Headers;
        exports.Request = Request;
        exports.Response = Response;
        exports.fetch = fetch;
        Object.defineProperty(exports, '__esModule', {
          value: true
        });
        return exports;
      })({});
    })(typeof self !== 'undefined' ? self : commonjsGlobal);
  });
  var meilisearch_umd = createCommonjsModule(function (module, exports) {
    (function (global, factory) {
      factory(exports, browserPolyfill);
    })(commonjsGlobal, function (exports) {
      // Type definitions for meilisearch
      // Project: https://github.com/meilisearch/meilisearch-js
      // Definitions by: qdequele <quentin@meilisearch.com> <https://github.com/meilisearch>
      // Definitions: https://github.com/meilisearch/meilisearch-js
      // TypeScript Version: ^3.8.3

      /*
       * SEARCH PARAMETERS
       */
      var MatchingStrategies = {
        ALL: 'all',
        LAST: 'last'
      };
      /******************************************************************************
      Copyright (c) Microsoft Corporation.
        Permission to use, copy, modify, and/or distribute this software for any
      purpose with or without fee is hereby granted.
        THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
      REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
      AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
      INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
      LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
      OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
      PERFORMANCE OF THIS SOFTWARE.
      ***************************************************************************** */

      /* global Reflect, Promise */

      var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (d, b) {
          d.__proto__ = b;
        } || function (d, b) {
          for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];
        };

        return extendStatics(d, b);
      };

      function __extends(d, b) {
        if (typeof b !== "function" && b !== null) throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);

        function __() {
          this.constructor = d;
        }

        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      }

      var __assign = function () {
        __assign = Object.assign || function __assign(t) {
          for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];

            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
          }

          return t;
        };

        return __assign.apply(this, arguments);
      };

      function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function (resolve) {
            resolve(value);
          });
        }

        return new (P || (P = Promise))(function (resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e) {
              reject(e);
            }
          }

          function rejected(value) {
            try {
              step(generator["throw"](value));
            } catch (e) {
              reject(e);
            }
          }

          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }

          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }

      function __generator(thisArg, body) {
        var _ = {
          label: 0,
          sent: function () {
            if (t[0] & 1) throw t[1];
            return t[1];
          },
          trys: [],
          ops: []
        },
            f,
            y,
            t,
            g;
        return g = {
          next: verb(0),
          "throw": verb(1),
          "return": verb(2)
        }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {
          return this;
        }), g;

        function verb(n) {
          return function (v) {
            return step([n, v]);
          };
        }

        function step(op) {
          if (f) throw new TypeError("Generator is already executing.");

          while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];

            switch (op[0]) {
              case 0:
              case 1:
                t = op;
                break;

              case 4:
                _.label++;
                return {
                  value: op[1],
                  done: false
                };

              case 5:
                _.label++;
                y = op[1];
                op = [0];
                continue;

              case 7:
                op = _.ops.pop();

                _.trys.pop();

                continue;

              default:
                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                  _ = 0;
                  continue;
                }

                if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
                  _.label = op[1];
                  break;
                }

                if (op[0] === 6 && _.label < t[1]) {
                  _.label = t[1];
                  t = op;
                  break;
                }

                if (t && _.label < t[2]) {
                  _.label = t[2];

                  _.ops.push(op);

                  break;
                }

                if (t[2]) _.ops.pop();

                _.trys.pop();

                continue;
            }

            op = body.call(thisArg, _);
          } catch (e) {
            op = [6, e];
            y = 0;
          } finally {
            f = t = 0;
          }

          if (op[0] & 5) throw op[1];
          return {
            value: op[0] ? op[1] : void 0,
            done: true
          };
        }
      }

      var MeiliSearchCommunicationError =
      /** @class */
      function (_super) {
        __extends(MeiliSearchCommunicationError, _super);

        function MeiliSearchCommunicationError(message, body, url, stack) {
          var _this = this;

          var _a, _b, _c;

          _this = _super.call(this, message) || this; // Make errors comparison possible. ex: error instanceof MeiliSearchCommunicationError.

          Object.setPrototypeOf(_this, MeiliSearchCommunicationError.prototype);
          _this.name = 'MeiliSearchCommunicationError';

          if (body instanceof Response) {
            _this.message = body.statusText;
            _this.statusCode = body.status;
          }

          if (body instanceof Error) {
            _this.errno = body.errno;
            _this.code = body.code;
          }

          if (stack) {
            _this.stack = stack;
            _this.stack = (_a = _this.stack) === null || _a === void 0 ? void 0 : _a.replace(/(TypeError|FetchError)/, _this.name);
            _this.stack = (_b = _this.stack) === null || _b === void 0 ? void 0 : _b.replace('Failed to fetch', "request to ".concat(url, " failed, reason: connect ECONNREFUSED"));
            _this.stack = (_c = _this.stack) === null || _c === void 0 ? void 0 : _c.replace('Not Found', "Not Found: ".concat(url));
          } else {
            if (Error.captureStackTrace) {
              Error.captureStackTrace(_this, MeiliSearchCommunicationError);
            }
          }

          return _this;
        }

        return MeiliSearchCommunicationError;
      }(Error);

      var MeiliSearchApiError =
      /** @class */
      function (_super) {
        __extends(class_1, _super);

        function class_1(error, status) {
          var _this = _super.call(this, error.message) || this; // Make errors comparison possible. ex: error instanceof MeiliSearchApiError.


          Object.setPrototypeOf(_this, MeiliSearchApiError.prototype);
          _this.name = 'MeiliSearchApiError';
          _this.code = error.code;
          _this.type = error.type;
          _this.link = error.link;
          _this.message = error.message;
          _this.httpStatus = status;

          if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MeiliSearchApiError);
          }

          return _this;
        }

        return class_1;
      }(Error);

      function httpResponseErrorHandler(response) {
        return __awaiter(this, void 0, void 0, function () {
          var responseBody;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                if (!!response.ok) return [3
                /*break*/
                , 5];
                responseBody = void 0;
                _a.label = 1;

              case 1:
                _a.trys.push([1, 3,, 4]);

                return [4
                /*yield*/
                , response.json()];

              case 2:
                // If it is not possible to parse the return body it means there is none
                // In which case it is a communication error with the Meilisearch instance
                responseBody = _a.sent();
                return [3
                /*break*/
                , 4];

              case 3:
                _a.sent(); // Not sure on how to test this part of the code.


                throw new MeiliSearchCommunicationError(response.statusText, response, response.url);

              case 4:
                // If the body is parsable, then it means Meilisearch returned a body with
                // information on the error.
                throw new MeiliSearchApiError(responseBody, response.status);

              case 5:
                return [2
                /*return*/
                , response];
            }
          });
        });
      }

      function httpErrorHandler(response, stack, url) {
        if (response.name !== 'MeiliSearchApiError') {
          throw new MeiliSearchCommunicationError(response.message, response, url, stack);
        }

        throw response;
      }

      var MeiliSearchError =
      /** @class */
      function (_super) {
        __extends(MeiliSearchError, _super);

        function MeiliSearchError(message) {
          var _this = _super.call(this, message) || this; // Make errors comparison possible. ex: error instanceof MeiliSearchError.


          Object.setPrototypeOf(_this, MeiliSearchError.prototype);
          _this.name = 'MeiliSearchError';

          if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MeiliSearchError);
          }

          return _this;
        }

        return MeiliSearchError;
      }(Error);

      var MeiliSearchTimeOutError =
      /** @class */
      function (_super) {
        __extends(MeiliSearchTimeOutError, _super);

        function MeiliSearchTimeOutError(message) {
          var _this = _super.call(this, message) || this; // Make errors comparison possible. ex: error instanceof MeiliSearchTimeOutError.


          Object.setPrototypeOf(_this, MeiliSearchTimeOutError.prototype);
          _this.name = 'MeiliSearchTimeOutError';

          if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, MeiliSearchTimeOutError);
          }

          return _this;
        }

        return MeiliSearchTimeOutError;
      }(Error);
      /**
       * Removes undefined entries from object
       */


      function removeUndefinedFromObject(obj) {
        return Object.entries(obj).reduce(function (acc, curEntry) {
          var key = curEntry[0],
              val = curEntry[1];
          if (val !== undefined) acc[key] = val;
          return acc;
        }, {});
      }

      function sleep(ms) {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                return [4
                /*yield*/
                , new Promise(function (resolve) {
                  return setTimeout(resolve, ms);
                })];

              case 1:
                return [2
                /*return*/
                , _a.sent()];
            }
          });
        });
      }

      function addProtocolIfNotPresent(host) {
        if (!(host.startsWith('https://') || host.startsWith('http://'))) {
          return "http://".concat(host);
        }

        return host;
      }

      function addTrailingSlash(url) {
        if (!url.endsWith('/')) {
          url += '/';
        }

        return url;
      }

      var PACKAGE_VERSION = '0.30.0';

      function toQueryParams(parameters) {
        var params = Object.keys(parameters);
        var queryParams = params.reduce(function (acc, key) {
          var _a, _b, _c;

          var value = parameters[key];

          if (value === undefined) {
            return acc;
          } else if (Array.isArray(value)) {
            return __assign(__assign({}, acc), (_a = {}, _a[key] = value.join(','), _a));
          } else if (value instanceof Date) {
            return __assign(__assign({}, acc), (_b = {}, _b[key] = value.toISOString(), _b));
          }

          return __assign(__assign({}, acc), (_c = {}, _c[key] = value, _c));
        }, {});
        return queryParams;
      }

      function constructHostURL(host) {
        try {
          host = addProtocolIfNotPresent(host);
          host = addTrailingSlash(host);
          return host;
        } catch (e) {
          throw new MeiliSearchError('The provided host is not valid.');
        }
      }

      function createHeaders(config) {
        var agentHeader = 'X-Meilisearch-Client';
        var packageAgent = "Meilisearch JavaScript (v".concat(PACKAGE_VERSION, ")");
        var contentType = 'Content-Type';
        config.headers = config.headers || {};
        var headers = Object.assign({}, config.headers); // Create a hard copy and not a reference to config.headers

        if (config.apiKey) {
          headers['Authorization'] = "Bearer ".concat(config.apiKey);
        }

        if (!config.headers[contentType]) {
          headers['Content-Type'] = 'application/json';
        } // Creates the custom user agent with information on the package used.


        if (config.clientAgents && Array.isArray(config.clientAgents)) {
          var clients = config.clientAgents.concat(packageAgent);
          headers[agentHeader] = clients.join(' ; ');
        } else if (config.clientAgents && !Array.isArray(config.clientAgents)) {
          // If the header is defined but not an array
          throw new MeiliSearchError("Meilisearch: The header \"".concat(agentHeader, "\" should be an array of string(s).\n"));
        } else {
          headers[agentHeader] = packageAgent;
        }

        return headers;
      }

      var HttpRequests =
      /** @class */
      function () {
        function HttpRequests(config) {
          this.headers = createHeaders(config);

          try {
            var host = constructHostURL(config.host);
            this.url = new URL(host);
          } catch (e) {
            throw new MeiliSearchError('The provided host is not valid.');
          }
        }

        HttpRequests.prototype.request = function (_a) {
          var method = _a.method,
              url = _a.url,
              params = _a.params,
              body = _a.body,
              config = _a.config;
          return __awaiter(this, void 0, void 0, function () {
            var constructURL, queryParams_1, response, parsedBody, e_1, stack;
            return __generator(this, function (_b) {
              switch (_b.label) {
                case 0:
                  constructURL = new URL(url, this.url);

                  if (params) {
                    queryParams_1 = new URLSearchParams();
                    Object.keys(params).filter(function (x) {
                      return params[x] !== null;
                    }).map(function (x) {
                      return queryParams_1.set(x, params[x]);
                    });
                    constructURL.search = queryParams_1.toString();
                  }

                  _b.label = 1;

                case 1:
                  _b.trys.push([1, 4,, 5]);

                  return [4
                  /*yield*/
                  , fetch(constructURL.toString(), __assign(__assign({}, config), {
                    method: method,
                    body: JSON.stringify(body),
                    headers: this.headers
                  })).then(function (res) {
                    return httpResponseErrorHandler(res);
                  })];

                case 2:
                  response = _b.sent();
                  return [4
                  /*yield*/
                  , response.json()["catch"](function () {
                    return undefined;
                  })];

                case 3:
                  parsedBody = _b.sent();
                  return [2
                  /*return*/
                  , parsedBody];

                case 4:
                  e_1 = _b.sent();
                  stack = e_1.stack;
                  httpErrorHandler(e_1, stack, constructURL.toString());
                  return [3
                  /*break*/
                  , 5];

                case 5:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        };

        HttpRequests.prototype.get = function (url, params, config) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.request({
                    method: 'GET',
                    url: url,
                    params: params,
                    config: config
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };

        HttpRequests.prototype.post = function (url, data, params, config) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.request({
                    method: 'POST',
                    url: url,
                    body: data,
                    params: params,
                    config: config
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };

        HttpRequests.prototype.put = function (url, data, params, config) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.request({
                    method: 'PUT',
                    url: url,
                    body: data,
                    params: params,
                    config: config
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };

        HttpRequests.prototype.patch = function (url, data, params, config) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.request({
                    method: 'PATCH',
                    url: url,
                    body: data,
                    params: params,
                    config: config
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };

        HttpRequests.prototype["delete"] = function (url, data, params, config) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.request({
                    method: 'DELETE',
                    url: url,
                    body: data,
                    params: params,
                    config: config
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };

        return HttpRequests;
      }();

      var EnqueuedTask =
      /** @class */
      function () {
        function EnqueuedTask(task) {
          this.taskUid = task.taskUid;
          this.indexUid = task.indexUid;
          this.status = task.status;
          this.type = task.type;
          this.enqueuedAt = new Date(task.enqueuedAt);
        }

        return EnqueuedTask;
      }();

      var Task =
      /** @class */
      function () {
        function Task(task) {
          this.indexUid = task.indexUid;
          this.status = task.status;
          this.type = task.type;
          this.uid = task.uid;
          this.details = task.details;
          this.canceledBy = task.canceledBy;
          this.error = task.error;
          this.duration = task.duration;
          this.startedAt = new Date(task.startedAt);
          this.enqueuedAt = new Date(task.enqueuedAt);
          this.finishedAt = new Date(task.finishedAt);
        }

        return Task;
      }();

      var TaskClient =
      /** @class */
      function () {
        function TaskClient(config) {
          this.httpRequest = new HttpRequests(config);
        }
        /**
         * Get one task
         *
         * @param  {number} uid - unique identifier of the task
         *
         * @returns { Promise<Task> }
         */


        TaskClient.prototype.getTask = function (uid) {
          return __awaiter(this, void 0, void 0, function () {
            var url, taskItem;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "tasks/".concat(uid);
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  taskItem = _a.sent();
                  return [2
                  /*return*/
                  , new Task(taskItem)];
              }
            });
          });
        };
        /**
         * Get tasks
         *
         * @param  {TasksQuery} [parameters={}] - Parameters to browse the tasks
         *
         * @returns {Promise<TasksResults>} - Promise containing all tasks
         */


        TaskClient.prototype.getTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, tasks;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "tasks";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, toQueryParams(parameters))];

                case 1:
                  tasks = _a.sent();
                  return [2
                  /*return*/
                  , __assign(__assign({}, tasks), {
                    results: tasks.results.map(function (task) {
                      return new Task(task);
                    })
                  })];
              }
            });
          });
        };
        /**
         * Wait for a task to be processed.
         *
         * @param {number} taskUid Task identifier
         * @param {WaitOptions} options Additional configuration options
         *
         * @returns {Promise<Task>} Promise returning a task after it has been processed
         */


        TaskClient.prototype.waitForTask = function (taskUid, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            var startingTime, response;
            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  startingTime = Date.now();
                  _e.label = 1;

                case 1:
                  if (!(Date.now() - startingTime < timeOutMs)) return [3
                  /*break*/
                  , 4];
                  return [4
                  /*yield*/
                  , this.getTask(taskUid)];

                case 2:
                  response = _e.sent();
                  if (!["enqueued"
                  /* TASK_ENQUEUED */
                  , "processing"
                  /* TASK_PROCESSING */
                  ].includes(response.status)) return [2
                  /*return*/
                  , response];
                  return [4
                  /*yield*/
                  , sleep(intervalMs)];

                case 3:
                  _e.sent();

                  return [3
                  /*break*/
                  , 1];

                case 4:
                  throw new MeiliSearchTimeOutError("timeout of ".concat(timeOutMs, "ms has exceeded on process ").concat(taskUid, " when waiting a task to be resolved."));
              }
            });
          });
        };
        /**
         * Waits for multiple tasks to be processed
         *
         * @param {number[]} taskUids Tasks identifier list
         * @param {WaitOptions} options Wait options
         *
         * @returns {Promise<Task[]>} Promise returning a list of tasks after they have been processed
         */


        TaskClient.prototype.waitForTasks = function (taskUids, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            var tasks, _i, taskUids_1, taskUid, task;

            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  tasks = [];
                  _i = 0, taskUids_1 = taskUids;
                  _e.label = 1;

                case 1:
                  if (!(_i < taskUids_1.length)) return [3
                  /*break*/
                  , 4];
                  taskUid = taskUids_1[_i];
                  return [4
                  /*yield*/
                  , this.waitForTask(taskUid, {
                    timeOutMs: timeOutMs,
                    intervalMs: intervalMs
                  })];

                case 2:
                  task = _e.sent();
                  tasks.push(task);
                  _e.label = 3;

                case 3:
                  _i++;
                  return [3
                  /*break*/
                  , 1];

                case 4:
                  return [2
                  /*return*/
                  , tasks];
              }
            });
          });
        };
        /**
         * Cancel a list of enqueued or processing tasks.
         * @memberof Tasks
         * @method cancelTasks
         * @param {CancelTasksQuery} [parameters={}] - Parameters to filter the tasks.
         *
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        TaskClient.prototype.cancelTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "tasks/cancel";
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, {}, toQueryParams(parameters))];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Delete a list tasks.
         * @memberof Tasks
         * @method deleteTasks
         * @param {DeleteTasksQuery} [parameters={}] - Parameters to filter the tasks.
         *
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        TaskClient.prototype.deleteTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "tasks";
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url, {}, toQueryParams(parameters))];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };

        return TaskClient;
      }();
      /*
       * Bundle: MeiliSearch / Indexes
       * Project: MeiliSearch - Javascript API
       * Author: Quentin de Quelen <quentin@meilisearch.com>
       * Copyright: 2019, MeiliSearch
       */


      var Index =
      /** @class */
      function () {
        /**
         * @param {Config} config Request configuration options
         * @param {string} uid UID of the index
         * @param {string} [primaryKey] Primary Key of the index
         */
        function Index(config, uid, primaryKey) {
          this.uid = uid;
          this.primaryKey = primaryKey;
          this.httpRequest = new HttpRequests(config);
          this.tasks = new TaskClient(config);
        } ///
        /// SEARCH
        ///

        /**
         * Search for documents into an index
         * @memberof Index
         * @method search
         * @template T
         * @param {string | null} query? Query string
         * @param {SearchParams} options? Search options
         * @param {Partial<Request>} config? Additional request configuration options
         * @returns {Promise<SearchResponse<T>>} Promise containing the search response
         */


        Index.prototype.search = function (query, options, config) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/search");
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, removeUndefinedFromObject(__assign({
                    q: query
                  }, options)), undefined, config)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Search for documents into an index using the GET method
         * @memberof Index
         * @method search
         * @template T
         * @param {string | null} query? Query string
         * @param {SearchParams} options? Search options
         * @param {Partial<Request>} config? Additional request configuration options
         * @returns {Promise<SearchResponse<T>>} Promise containing the search response
         */


        Index.prototype.searchGet = function (query, options, config) {
          var _a, _b, _c, _d, _e;

          return __awaiter(this, void 0, void 0, function () {
            var url, parseFilter, getParams;
            return __generator(this, function (_f) {
              switch (_f.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/search");

                  parseFilter = function parseFilter(filter) {
                    if (typeof filter === 'string') return filter;else if (Array.isArray(filter)) throw new MeiliSearchError('The filter query parameter should be in string format when using searchGet');else return undefined;
                  };

                  getParams = __assign(__assign({
                    q: query
                  }, options), {
                    filter: parseFilter(options === null || options === void 0 ? void 0 : options.filter),
                    sort: (_a = options === null || options === void 0 ? void 0 : options.sort) === null || _a === void 0 ? void 0 : _a.join(','),
                    facets: (_b = options === null || options === void 0 ? void 0 : options.facets) === null || _b === void 0 ? void 0 : _b.join(','),
                    attributesToRetrieve: (_c = options === null || options === void 0 ? void 0 : options.attributesToRetrieve) === null || _c === void 0 ? void 0 : _c.join(','),
                    attributesToCrop: (_d = options === null || options === void 0 ? void 0 : options.attributesToCrop) === null || _d === void 0 ? void 0 : _d.join(','),
                    attributesToHighlight: (_e = options === null || options === void 0 ? void 0 : options.attributesToHighlight) === null || _e === void 0 ? void 0 : _e.join(',')
                  });
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, removeUndefinedFromObject(getParams), config)];

                case 1:
                  return [2
                  /*return*/
                  , _f.sent()];
              }
            });
          });
        }; ///
        /// INDEX
        ///

        /**
         * Get index information.
         * @memberof Index
         * @method getRawInfo
         *
         * @returns {Promise<IndexObject>} Promise containing index information
         */


        Index.prototype.getRawInfo = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, res;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid);
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  res = _a.sent();
                  this.primaryKey = res.primaryKey;
                  this.updatedAt = new Date(res.updatedAt);
                  this.createdAt = new Date(res.createdAt);
                  return [2
                  /*return*/
                  , res];
              }
            });
          });
        };
        /**
         * Fetch and update Index information.
         * @memberof Index
         * @method fetchInfo
         * @returns {Promise<this>} Promise to the current Index object with updated information
         */


        Index.prototype.fetchInfo = function () {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.getRawInfo()];

                case 1:
                  _a.sent();

                  return [2
                  /*return*/
                  , this];
              }
            });
          });
        };
        /**
         * Get Primary Key.
         * @memberof Index
         * @method fetchPrimaryKey
         * @returns {Promise<string | undefined>} Promise containing the Primary Key of the index
         */


        Index.prototype.fetchPrimaryKey = function () {
          return __awaiter(this, void 0, void 0, function () {
            var _a;

            return __generator(this, function (_b) {
              switch (_b.label) {
                case 0:
                  _a = this;
                  return [4
                  /*yield*/
                  , this.getRawInfo()];

                case 1:
                  _a.primaryKey = _b.sent().primaryKey;
                  return [2
                  /*return*/
                  , this.primaryKey];
              }
            });
          });
        };
        /**
         * Create an index.
         * @memberof Index
         * @method create
         * @template T
         * @param {string} uid Unique identifier of the Index
         * @param {IndexOptions} options Index options
         * @param {Config} config Request configuration options
         * @returns {Promise<EnqueuedTask>} Newly created Index object
         */


        Index.create = function (uid, options, config) {
          if (options === void 0) {
            options = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, req, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes";
                  req = new HttpRequests(config);
                  return [4
                  /*yield*/
                  , req.post(url, __assign(__assign({}, options), {
                    uid: uid
                  }))];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Update an index.
         * @memberof Index
         * @method update
         * @param {IndexOptions} data Data to update
         * @returns {Promise<this>} Promise to the current Index object with updated information
         */


        Index.prototype.update = function (data) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid);
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, data)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        };
        /**
         * Delete an index.
         * @memberof Index
         * @method delete
         * @returns {Promise<void>} Promise which resolves when index is deleted successfully
         */


        Index.prototype["delete"] = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid);
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        }; ///
        /// TASKS
        ///

        /**
         * Get the list of all the tasks of the index.
         *
         * @memberof Indexes
         * @method getTasks
         * @param {TasksQuery} [parameters={}] - Parameters to browse the tasks
         *
         * @returns {Promise<TasksResults>} - Promise containing all tasks
         */


        Index.prototype.getTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.getTasks(__assign(__assign({}, parameters), {
                    indexUids: [this.uid]
                  }))];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Get one task of the index.
         *
         * @memberof Indexes
         * @method getTask
         * @param {number} taskUid - Task identifier
         *
         * @returns {Promise<Task>} - Promise containing a task
         */


        Index.prototype.getTask = function (taskUid) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.getTask(taskUid)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Wait for multiple tasks to be processed.
         *
         * @memberof Indexes
         * @method waitForTasks
         * @param {number[]} taskUids - Tasks identifier
         * @param {WaitOptions} waitOptions - Options on timeout and interval
         *
         * @returns {Promise<Task[]>} - Promise containing an array of tasks
         */


        Index.prototype.waitForTasks = function (taskUids, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.waitForTasks(taskUids, {
                    timeOutMs: timeOutMs,
                    intervalMs: intervalMs
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _e.sent()];
              }
            });
          });
        };
        /**
         * Wait for a task to be processed.
         *
         * @memberof Indexes
         * @method waitForTask
         * @param {number} taskUid - Task identifier
         * @param {WaitOptions} waitOptions - Options on timeout and interval
         *
         * @returns {Promise<Task>} - Promise containing an array of tasks
         */


        Index.prototype.waitForTask = function (taskUid, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.waitForTask(taskUid, {
                    timeOutMs: timeOutMs,
                    intervalMs: intervalMs
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _e.sent()];
              }
            });
          });
        }; ///
        /// STATS
        ///

        /**
         * get stats of an index
         * @memberof Index
         * @method getStats
         * @returns {Promise<IndexStats>} Promise containing object with stats of the index
         */


        Index.prototype.getStats = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/stats");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// DOCUMENTS
        ///

        /**
         * get documents of an index
         * @memberof Index
         * @method getDocuments
         * @template T
         * @param {DocumentsQuery<T>} [parameters={}] Parameters to browse the documents
         * @returns {Promise<DocumentsResults<T>>>} Promise containing Document responses
         */


        Index.prototype.getDocuments = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, fields;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents");

                  fields = function () {
                    var _a;

                    if (Array.isArray(parameters === null || parameters === void 0 ? void 0 : parameters.fields)) {
                      return (_a = parameters === null || parameters === void 0 ? void 0 : parameters.fields) === null || _a === void 0 ? void 0 : _a.join(',');
                    }

                    return undefined;
                  }();

                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, removeUndefinedFromObject(__assign(__assign({}, parameters), {
                    fields: fields
                  })))];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Get one document
         * @memberof Index
         * @method getDocument
         * @template T
         * @param {string | number} documentId Document ID
         * @param {DocumentQuery<T>} [parameters={}] Parameters applied on a document
         * @returns {Promise<Document<T>>} Promise containing Document response
         */


        Index.prototype.getDocument = function (documentId, parameters) {
          return __awaiter(this, void 0, void 0, function () {
            var url, fields;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents/").concat(documentId);

                  fields = function () {
                    var _a;

                    if (Array.isArray(parameters === null || parameters === void 0 ? void 0 : parameters.fields)) {
                      return (_a = parameters === null || parameters === void 0 ? void 0 : parameters.fields) === null || _a === void 0 ? void 0 : _a.join(',');
                    }

                    return undefined;
                  }();

                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, removeUndefinedFromObject(__assign(__assign({}, parameters), {
                    fields: fields
                  })))];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Add or replace multiples documents to an index
         * @memberof Index
         * @method addDocuments
         * @template T
         * @param {Array<Document<T>>} documents Array of Document objects to add/replace
         * @param {DocumentOptions} options? Options on document addition
         *
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.addDocuments = function (documents, options) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents");
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, documents, options)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Add or replace multiples documents to an index in batches
         * @memberof Index
         * @method addDocumentsInBatches
         * @template T
         * @param {Array<Document<T>>} documents Array of Document objects to add/replace
         * @param {number} batchSize Size of the batch
         * @param {DocumentOptions} options? Options on document addition
         * @returns {Promise<EnqueuedTasks>} Promise containing array of enqueued task objects for each batch
         */


        Index.prototype.addDocumentsInBatches = function (documents, batchSize, options) {
          if (batchSize === void 0) {
            batchSize = 1000;
          }

          return __awaiter(this, void 0, void 0, function () {
            var updates, i, _a, _b;

            return __generator(this, function (_c) {
              switch (_c.label) {
                case 0:
                  updates = [];
                  i = 0;
                  _c.label = 1;

                case 1:
                  if (!(i < documents.length)) return [3
                  /*break*/
                  , 4];
                  _b = (_a = updates).push;
                  return [4
                  /*yield*/
                  , this.addDocuments(documents.slice(i, i + batchSize), options)];

                case 2:
                  _b.apply(_a, [_c.sent()]);

                  _c.label = 3;

                case 3:
                  i += batchSize;
                  return [3
                  /*break*/
                  , 1];

                case 4:
                  return [2
                  /*return*/
                  , updates];
              }
            });
          });
        };
        /**
         * Add or update multiples documents to an index
         * @memberof Index
         * @method updateDocuments
         * @param {Array<Document<Partial<T>>>} documents Array of Document objects to add/update
         * @param {DocumentOptions} options? Options on document update
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateDocuments = function (documents, options) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, documents, options)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Add or update multiples documents to an index in batches
         * @memberof Index
         * @method updateDocuments
         * @template T
         * @param {Array<Document<T>>} documents Array of Document objects to add/update
         * @param {number} batchSize Size of the batch
         * @param {DocumentOptions} options? Options on document update
         * @returns {Promise<EnqueuedTasks>} Promise containing array of enqueued task objects for each batch
         */


        Index.prototype.updateDocumentsInBatches = function (documents, batchSize, options) {
          if (batchSize === void 0) {
            batchSize = 1000;
          }

          return __awaiter(this, void 0, void 0, function () {
            var updates, i, _a, _b;

            return __generator(this, function (_c) {
              switch (_c.label) {
                case 0:
                  updates = [];
                  i = 0;
                  _c.label = 1;

                case 1:
                  if (!(i < documents.length)) return [3
                  /*break*/
                  , 4];
                  _b = (_a = updates).push;
                  return [4
                  /*yield*/
                  , this.updateDocuments(documents.slice(i, i + batchSize), options)];

                case 2:
                  _b.apply(_a, [_c.sent()]);

                  _c.label = 3;

                case 3:
                  i += batchSize;
                  return [3
                  /*break*/
                  , 1];

                case 4:
                  return [2
                  /*return*/
                  , updates];
              }
            });
          });
        };
        /**
         * Delete one document
         * @memberof Index
         * @method deleteDocument
         * @param {string | number} documentId Id of Document to delete
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.deleteDocument = function (documentId) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents/").concat(documentId);
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        };
        /**
         * Delete multiples documents of an index
         * @memberof Index
         * @method deleteDocuments
         * @param {string[] | number[]} documentsIds Array of Document Ids to delete
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.deleteDocuments = function (documentsIds) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents/delete-batch");
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, documentsIds)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Delete all documents of an index
         * @memberof Index
         * @method deleteAllDocuments
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.deleteAllDocuments = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/documents");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// SETTINGS
        ///

        /**
         * Retrieve all settings
         * @memberof Index
         * @method getSettings
         * @returns {Promise<Settings>} Promise containing Settings object
         */


        Index.prototype.getSettings = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update all settings
         * Any parameters not provided will be left unchanged.
         * @memberof Index
         * @method updateSettings
         * @param {Settings} settings Object containing parameters with their updated values
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateSettings = function (settings) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings");
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, settings)];

                case 1:
                  task = _a.sent();
                  task.enqueued = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        };
        /**
         * Reset settings.
         * @memberof Index
         * @method resetSettings
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetSettings = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// PAGINATION SETTINGS
        ///

        /**
         * Get the pagination settings.
         * @memberof Index
         * @method getPagination
         * @returns {Promise<PaginationSetting>} Promise containing object of pagination settings
         */


        Index.prototype.getPagination = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/pagination");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the pagination settings.
         * @memberof Index
         * @method updatePagination
         * @param {PaginationSettings} pagination Pagination object
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updatePagination = function (pagination) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/pagination");
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, pagination)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the pagination settings.
         * @memberof Index
         * @method resetPagination
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetPagination = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/pagination");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        }; ///
        /// SYNONYMS
        ///

        /**
         * Get the list of all synonyms
         * @memberof Index
         * @method getSynonyms
         * @returns {Promise<object>} Promise containing object of synonym mappings
         */


        Index.prototype.getSynonyms = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/synonyms");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the list of synonyms. Overwrite the old list.
         * @memberof Index
         * @method updateSynonyms
         * @param {Synonyms} synonyms Mapping of synonyms with their associated words
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateSynonyms = function (synonyms) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/synonyms");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, synonyms)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the synonym list to be empty again
         * @memberof Index
         * @method resetSynonyms
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetSynonyms = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/synonyms");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// STOP WORDS
        ///

        /**
         * Get the list of all stop-words
         * @memberof Index
         * @method getStopWords
         * @returns {Promise<string[]>} Promise containing array of stop-words
         */


        Index.prototype.getStopWords = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/stop-words");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the list of stop-words. Overwrite the old list.
         * @memberof Index
         * @method updateStopWords
         * @param {StopWords} stopWords Array of strings that contains the stop-words.
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateStopWords = function (stopWords) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/stop-words");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, stopWords)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the stop-words list to be empty again
         * @memberof Index
         * @method resetStopWords
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetStopWords = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/stop-words");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// RANKING RULES
        ///

        /**
         * Get the list of all ranking-rules
         * @memberof Index
         * @method getRankingRules
         * @returns {Promise<string[]>} Promise containing array of ranking-rules
         */


        Index.prototype.getRankingRules = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/ranking-rules");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the list of ranking-rules. Overwrite the old list.
         * @memberof Index
         * @method updateRankingRules
         * @param {RankingRules} rankingRules Array that contain ranking rules sorted by order of importance.
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateRankingRules = function (rankingRules) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/ranking-rules");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, rankingRules)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the ranking rules list to its default value
         * @memberof Index
         * @method resetRankingRules
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetRankingRules = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/ranking-rules");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// DISTINCT ATTRIBUTE
        ///

        /**
         * Get the distinct-attribute
         * @memberof Index
         * @method getDistinctAttribute
         * @returns {Promise<string | null>} Promise containing the distinct-attribute of the index
         */


        Index.prototype.getDistinctAttribute = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/distinct-attribute");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the distinct-attribute.
         * @memberof Index
         * @method updateDistinctAttribute
         * @param {DistinctAttribute} distinctAttribute Field name of the distinct-attribute
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateDistinctAttribute = function (distinctAttribute) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/distinct-attribute");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, distinctAttribute)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the distinct-attribute.
         * @memberof Index
         * @method resetDistinctAttribute
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetDistinctAttribute = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/distinct-attribute");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// FILTERABLE ATTRIBUTES
        ///

        /**
         * Get the filterable-attributes
         * @memberof Index
         * @method getFilterableAttributes
         * @returns {Promise<string[]>} Promise containing an array of filterable-attributes
         */


        Index.prototype.getFilterableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/filterable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the filterable-attributes.
         * @memberof Index
         * @method updateFilterableAttributes
         * @param {FilterableAttributes} filterableAttributes Array of strings containing the attributes that can be used as filters at query time
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateFilterableAttributes = function (filterableAttributes) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/filterable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, filterableAttributes)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the filterable-attributes.
         * @memberof Index
         * @method resetFilterableAttributes
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetFilterableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/filterable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// SORTABLE ATTRIBUTES
        ///

        /**
         * Get the sortable-attributes
         * @memberof Index
         * @method getSortableAttributes
         * @returns {Promise<string[]>} Promise containing array of sortable-attributes
         */


        Index.prototype.getSortableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/sortable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the sortable-attributes.
         * @memberof Index
         * @method updateSortableAttributes
         * @param {SortableAttributes} sortableAttributes Array of strings containing the attributes that can be used to sort search results at query time
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateSortableAttributes = function (sortableAttributes) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/sortable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, sortableAttributes)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the sortable-attributes.
         * @memberof Index
         * @method resetSortableAttributes
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetSortableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/sortable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// SEARCHABLE ATTRIBUTE
        ///

        /**
         * Get the searchable-attributes
         * @memberof Index
         * @method getSearchableAttributes
         * @returns {Promise<string[]>} Promise containing array of searchable-attributes
         */


        Index.prototype.getSearchableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/searchable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the searchable-attributes.
         * @memberof Index
         * @method updateSearchableAttributes
         * @param {SearchableAttributes} searchableAttributes Array of strings that contains searchable attributes sorted by order of importance(most to least important)
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateSearchableAttributes = function (searchableAttributes) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/searchable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, searchableAttributes)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the searchable-attributes.
         * @memberof Index
         * @method resetSearchableAttributes
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetSearchableAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/searchable-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// DISPLAYED ATTRIBUTE
        ///

        /**
         * Get the displayed-attributes
         * @memberof Index
         * @method getDisplayedAttributes
         * @returns {Promise<string[]>} Promise containing array of displayed-attributes
         */


        Index.prototype.getDisplayedAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/displayed-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the displayed-attributes.
         * @memberof Index
         * @method updateDisplayedAttributes
         * @param {DisplayedAttributes} displayedAttributes Array of strings that contains attributes of an index to display
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateDisplayedAttributes = function (displayedAttributes) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/displayed-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest.put(url, displayedAttributes)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the displayed-attributes.
         * @memberof Index
         * @method resetDisplayedAttributes
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetDisplayedAttributes = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/displayed-attributes");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// TYPO TOLERANCE
        ///

        /**
         * Get the typo tolerance settings.
         * @memberof Index
         * @method getTypoTolerance
         * @returns {Promise<string[]>} Promise containing the typo tolerance settings.
         */


        Index.prototype.getTypoTolerance = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/typo-tolerance");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the typo tolerance settings.
         * @memberof Index
         * @method updateTypoTolerance
         * @param {TypoTolerance} typoTolerance Object containing the custom typo tolerance settings.
         * @returns {Promise<EnqueuedTask>} Promise containing object of the enqueued update
         */


        Index.prototype.updateTypoTolerance = function (typoTolerance) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/typo-tolerance");
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, typoTolerance)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        };
        /**
         * Reset the typo tolerance settings.
         * @memberof Index
         * @method resetTypoTolerance
         * @returns {Promise<EnqueuedTask>} Promise containing object of the enqueued update
         */


        Index.prototype.resetTypoTolerance = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/typo-tolerance");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  task.enqueuedAt = new Date(task.enqueuedAt);
                  return [2
                  /*return*/
                  , task];
              }
            });
          });
        }; ///
        /// FACETING
        ///

        /**
         * Get the faceting settings.
         * @memberof Index
         * @method getFaceting
         * @returns {Promise<Faceting>} Promise containing object of faceting index settings
         */


        Index.prototype.getFaceting = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/faceting");
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update the faceting settings.
         * @memberof Index
         * @method updateFaceting
         * @param {Faceting} faceting Faceting index settings object
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.updateFaceting = function (faceting) {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/faceting");
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, faceting)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };
        /**
         * Reset the faceting settings.
         * @memberof Index
         * @method resetFaceting
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Index.prototype.resetFaceting = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes/".concat(this.uid, "/settings/faceting");
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        };

        return Index;
      }();
      /*
       * Bundle: MeiliSearch
       * Project: MeiliSearch - Javascript API
       * Author: Quentin de Quelen <quentin@meilisearch.com>
       * Copyright: 2019, MeiliSearch
       */


      var Client =
      /** @class */
      function () {
        /**
         * Creates new MeiliSearch instance
         * @param {Config} config Configuration object
         */
        function Client(config) {
          this.config = config;
          this.httpRequest = new HttpRequests(config);
          this.tasks = new TaskClient(config);
        }
        /**
         * Return an Index instance
         * @memberof MeiliSearch
         * @method index
         * @template T
         * @param {string} indexUid The index UID
         * @returns {Index<T>} Instance of Index
         */


        Client.prototype.index = function (indexUid) {
          return new Index(this.config, indexUid);
        };
        /**
         * Gather information about an index by calling MeiliSearch and
         * return an Index instance with the gathered information
         * @memberof MeiliSearch
         * @method getIndex
         * @template T
         * @param {string} indexUid The index UID
         * @returns {Promise<Index<T>>} Promise returning Index instance
         */


        Client.prototype.getIndex = function (indexUid) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              return [2
              /*return*/
              , new Index(this.config, indexUid).fetchInfo()];
            });
          });
        };
        /**
         * Gather information about an index by calling MeiliSearch and
         * return the raw JSON response
         * @memberof MeiliSearch
         * @method getRawIndex
         * @param {string} indexUid The index UID
         * @returns {Promise<IndexObject>} Promise returning index information
         */


        Client.prototype.getRawIndex = function (indexUid) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              return [2
              /*return*/
              , new Index(this.config, indexUid).getRawInfo()];
            });
          });
        };
        /**
         * Get all the indexes as Index instances.
         * @memberof MeiliSearch
         * @method getIndexes
         * @param {IndexesQuery} [parameters={}] - Parameters to browse the indexes
         *
         * @returns {Promise<IndexesResults<Index[]>>} Promise returning array of raw index information
         */


        Client.prototype.getIndexes = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var rawIndexes, indexes;

            var _this = this;

            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.getRawIndexes(parameters)];

                case 1:
                  rawIndexes = _a.sent();
                  indexes = rawIndexes.results.map(function (index) {
                    return new Index(_this.config, index.uid, index.primaryKey);
                  });
                  return [2
                  /*return*/
                  , __assign(__assign({}, rawIndexes), {
                    results: indexes
                  })];
              }
            });
          });
        };
        /**
         * Get all the indexes in their raw value (no Index instances).
         * @memberof MeiliSearch
         * @method getRawIndexes
         * @param {IndexesQuery} [parameters={}] - Parameters to browse the indexes
         *
         * @returns {Promise<IndexesResults<IndexObject[]>>} Promise returning array of raw index information
         */


        Client.prototype.getRawIndexes = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "indexes";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, parameters)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Create a new index
         * @memberof MeiliSearch
         * @method createIndex
         * @template T
         * @param {string} uid The index UID
         * @param {IndexOptions} options Index options
         * @returns {Promise<Index<T>>} Promise returning Index instance
         */


        Client.prototype.createIndex = function (uid, options) {
          if (options === void 0) {
            options = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , Index.create(uid, options, this.config)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update an index
         * @memberof MeiliSearch
         * @method updateIndex
         * @template T
         * @param {string} uid The index UID
         * @param {IndexOptions} options Index options to update
         * @returns {Promise<Index<T>>} Promise returning Index instance after updating
         */


        Client.prototype.updateIndex = function (uid, options) {
          if (options === void 0) {
            options = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , new Index(this.config, uid).update(options)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Delete an index
         * @memberof MeiliSearch
         * @method deleteIndex
         * @param {string} uid The index UID
         * @returns {Promise<void>} Promise which resolves when index is deleted successfully
         */


        Client.prototype.deleteIndex = function (uid) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , new Index(this.config, uid)["delete"]()];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Deletes an index if it already exists.
         * @memberof MeiliSearch
         * @method deleteIndexIfExists
         * @param {string} uid The index UID
         * @returns {Promise<boolean>} Promise which resolves to true when index exists and is deleted successfully, otherwise false if it does not exist
         */


        Client.prototype.deleteIndexIfExists = function (uid) {
          return __awaiter(this, void 0, void 0, function () {
            var e_1;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  _a.trys.push([0, 2,, 3]);

                  return [4
                  /*yield*/
                  , this.deleteIndex(uid)];

                case 1:
                  _a.sent();

                  return [2
                  /*return*/
                  , true];

                case 2:
                  e_1 = _a.sent();

                  if (e_1.code === "index_not_found"
                  /* INDEX_NOT_FOUND */
                  ) {
                    return [2
                    /*return*/
                    , false];
                  }

                  throw e_1;

                case 3:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        };
        /**
         * Swaps a list of index tuples.
         *
         * @memberof MeiliSearch
         * @method swapIndexes
         * @param {SwapIndexesParams} params - List of indexes tuples to swap.
         * @returns {Promise<EnqueuedTask>} - Promise returning object of the enqueued task
         */


        Client.prototype.swapIndexes = function (params) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = '/swap-indexes';
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, params)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// TASKS
        ///

        /**
         * Get the list of all client tasks
         * @memberof MeiliSearch
         * @method getTasks
         * @param {TasksQuery} [parameters={}] - Parameters to browse the tasks
         *
         * @returns {Promise<TasksResults>} - Promise returning all tasks
         */


        Client.prototype.getTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.getTasks(parameters)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Get one task on the client scope
         * @memberof MeiliSearch
         * @method getTask
         * @param {number} taskUid - Task identifier
         * @returns {Promise<Task>} - Promise returning a task
         */


        Client.prototype.getTask = function (taskUid) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.getTask(taskUid)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Wait for multiple tasks to be finished.
         *
         * @memberof MeiliSearch
         * @method waitForTasks
         * @param {number[]} taskUids - Tasks identifier
         * @param {WaitOptions} waitOptions - Options on timeout and interval
         *
         * @returns {Promise<Task[]>} - Promise returning an array of tasks
         */


        Client.prototype.waitForTasks = function (taskUids, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.waitForTasks(taskUids, {
                    timeOutMs: timeOutMs,
                    intervalMs: intervalMs
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _e.sent()];
              }
            });
          });
        };
        /**
         * Wait for a task to be finished.
         *
         * @memberof MeiliSearch
         * @method waitForTask
         *
         * @param {number} taskUid - Task identifier
         * @param {WaitOptions} waitOptions - Options on timeout and interval
         *
         * @returns {Promise<Task>} - Promise returning an array of tasks
         */


        Client.prototype.waitForTask = function (taskUid, _a) {
          var _b = _a === void 0 ? {} : _a,
              _c = _b.timeOutMs,
              timeOutMs = _c === void 0 ? 5000 : _c,
              _d = _b.intervalMs,
              intervalMs = _d === void 0 ? 50 : _d;

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_e) {
              switch (_e.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.waitForTask(taskUid, {
                    timeOutMs: timeOutMs,
                    intervalMs: intervalMs
                  })];

                case 1:
                  return [2
                  /*return*/
                  , _e.sent()];
              }
            });
          });
        };
        /**
         * Cancel a list of enqueued or processing tasks.
         * @memberof MeiliSearch
         * @method cancelTasks
         * @param {CancelTasksQuery} [parameters={}] - Parameters to filter the tasks.
         *
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Client.prototype.cancelTasks = function (parameters) {
          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.cancelTasks(parameters)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Delete a list of tasks.
         * @memberof MeiliSearch
         * @method deleteTasks
         * @param {DeleteTasksQuery} [parameters={}] - Parameters to filter the tasks.
         *
         * @returns {Promise<EnqueuedTask>} Promise containing an EnqueuedTask
         */


        Client.prototype.deleteTasks = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  return [4
                  /*yield*/
                  , this.tasks.deleteTasks(parameters)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// KEYS
        ///

        /**
         * Get all API keys
         * @memberof MeiliSearch
         * @method getKeys
         * @param {KeysQuery} [parameters={}] - Parameters to browse the indexes
         *
         * @returns {Promise<KeysResults>} Promise returning an object with keys
         */


        Client.prototype.getKeys = function (parameters) {
          if (parameters === void 0) {
            parameters = {};
          }

          return __awaiter(this, void 0, void 0, function () {
            var url, keys;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "keys";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url, parameters)];

                case 1:
                  keys = _a.sent();
                  keys.results = keys.results.map(function (key) {
                    return __assign(__assign({}, key), {
                      createdAt: new Date(key.createdAt),
                      updateAt: new Date(key.updateAt)
                    });
                  });
                  return [2
                  /*return*/
                  , keys];
              }
            });
          });
        };
        /**
         * Get one API key
         * @memberof MeiliSearch
         * @method getKey
         *
         * @param {string} keyOrUid - Key or uid of the API key
         * @returns {Promise<Key>} Promise returning a key
         */


        Client.prototype.getKey = function (keyOrUid) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "keys/".concat(keyOrUid);
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Create one API key
         * @memberof MeiliSearch
         * @method createKey
         *
         * @param {KeyCreation} options - Key options
         * @returns {Promise<Key>} Promise returning a key
         */


        Client.prototype.createKey = function (options) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "keys";
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url, options)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Update one API key
         * @memberof MeiliSearch
         * @method updateKey
         *
         * @param {string} keyOrUid - Key
         * @param {KeyUpdate} options - Key options
         * @returns {Promise<Key>} Promise returning a key
         */


        Client.prototype.updateKey = function (keyOrUid, options) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "keys/".concat(keyOrUid);
                  return [4
                  /*yield*/
                  , this.httpRequest.patch(url, options)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Delete one API key
         * @memberof MeiliSearch
         * @method deleteKey
         *
         * @param {string} keyOrUid - Key
         * @returns {Promise<Void>}
         */


        Client.prototype.deleteKey = function (keyOrUid) {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "keys/".concat(keyOrUid);
                  return [4
                  /*yield*/
                  , this.httpRequest["delete"](url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// HEALTH
        ///

        /**
         * Checks if the server is healthy, otherwise an error will be thrown.
         * @memberof MeiliSearch
         * @method health
         * @returns {Promise<Health>} Promise returning an object with health details
         */


        Client.prototype.health = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "health";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        };
        /**
         * Checks if the server is healthy, return true or false.
         * @memberof MeiliSearch
         * @method isHealthy
         * @returns {Promise<boolean>} Promise returning a boolean
         */


        Client.prototype.isHealthy = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  _a.trys.push([0, 2,, 3]);

                  url = "health";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  _a.sent();

                  return [2
                  /*return*/
                  , true];

                case 2:
                  _a.sent();

                  return [2
                  /*return*/
                  , false];

                case 3:
                  return [2
                  /*return*/
                  ];
              }
            });
          });
        }; ///
        /// STATS
        ///

        /**
         * Get the stats of all the database
         * @memberof MeiliSearch
         * @method getStats
         * @returns {Promise<Stats>} Promise returning object of all the stats
         */


        Client.prototype.getStats = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "stats";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// VERSION
        ///

        /**
         * Get the version of MeiliSearch
         * @memberof MeiliSearch
         * @method getVersion
         * @returns {Promise<Version>} Promise returning object with version details
         */


        Client.prototype.getVersion = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "version";
                  return [4
                  /*yield*/
                  , this.httpRequest.get(url)];

                case 1:
                  return [2
                  /*return*/
                  , _a.sent()];
              }
            });
          });
        }; ///
        /// DUMPS
        ///

        /**
         * Creates a dump
         * @memberof MeiliSearch
         * @method createDump
         * @returns {Promise<EnqueuedTask>} Promise returning object of the enqueued task
         */


        Client.prototype.createDump = function () {
          return __awaiter(this, void 0, void 0, function () {
            var url, task;
            return __generator(this, function (_a) {
              switch (_a.label) {
                case 0:
                  url = "dumps";
                  return [4
                  /*yield*/
                  , this.httpRequest.post(url)];

                case 1:
                  task = _a.sent();
                  return [2
                  /*return*/
                  , new EnqueuedTask(task)];
              }
            });
          });
        }; ///
        /// TOKENS
        ///

        /**
         * Generate a tenant token
         *
         * @memberof MeiliSearch
         * @method generateTenantToken
         * @param {apiKeyUid} apiKeyUid The uid of the api key used as issuer of the token.
         * @param {SearchRules} searchRules Search rules that are applied to every search.
         * @param {TokenOptions} options Token options to customize some aspect of the token.
         *
         * @returns {String} The token in JWT format.
         */


        Client.prototype.generateTenantToken = function (_apiKeyUid, _searchRules, _options) {
          var error = new Error();
          throw new Error("Meilisearch: failed to generate a tenant token. Generation of a token only works in a node environment \n ".concat(error.stack, "."));
        };

        return Client;
      }();

      var MeiliSearch =
      /** @class */
      function (_super) {
        __extends(MeiliSearch, _super);

        function MeiliSearch(config) {
          return _super.call(this, config) || this;
        }

        return MeiliSearch;
      }(Client);

      exports.Index = Index;
      exports.MatchingStrategies = MatchingStrategies;
      exports.MeiliSearch = MeiliSearch;
      exports.MeiliSearchApiError = MeiliSearchApiError;
      exports.MeiliSearchCommunicationError = MeiliSearchCommunicationError;
      exports.MeiliSearchError = MeiliSearchError;
      exports.MeiliSearchTimeOutError = MeiliSearchTimeOutError;
      exports["default"] = MeiliSearch;
      exports.httpErrorHandler = httpErrorHandler;
      exports.httpResponseErrorHandler = httpResponseErrorHandler;
      Object.defineProperty(exports, '__esModule', {
        value: true
      });
    });
  });

  var removeUndefined = function (arr) {
    return arr.filter(function (x) {
      return x !== undefined;
    });
  };
  /**
   * @param  {any} str
   * @returns {boolean}
   */

  /**
   * @param  {string} filter
   * @returns {string}
   */


  function replaceColonByEqualSign(filter) {
    // will only change first occurence of `:`
    return filter.replace(/:(.*)/i, '="$1"');
  }
  /**
   * @param  {any[]} arr
   * @returns {string}
   */


  function stringifyArray(arr) {
    return arr.reduce(function (acc, curr) {
      return acc += JSON.stringify(curr);
    }, '');
  }

  function isPureObject(data) {
    return typeof data === 'object' && !Array.isArray(data) && data !== null;
  }
  /**
   * apiKey callback definition
   * @callback apiKeyCallback
   * @returns {string} - The apiKey to use
   */

  /**
   * Validates host and apiKey parameters, throws if invalid
   * @param hostUrl
   * @param apiKey
   */


  function validateInstantMeiliSearchParams(hostUrl, apiKey) {
    // Validate host url
    if (typeof hostUrl !== 'string') {
      throw new TypeError('Provided hostUrl value (1st parameter) is not a string, expected string');
    } // Validate api key


    if (typeof apiKey !== 'string' && typeof apiKey !== 'function') {
      throw new TypeError('Provided apiKey value (2nd parameter) is not a string or a function, expected string or function');
    }
  }
  /**
   * @param  {string} filter
   */


  var adaptFilterSyntax = function (filter) {
    var matches = filter.match(/([^=]*)="?([^\\"]*)"?$/);

    if (matches) {
      matches[0];
      var filterName = matches[1],
          value = matches[2];
      return [{
        filterName: filterName,
        value: value
      }];
    }

    return [];
  };
  /**
   * @param  {Filter} filters?
   * @returns {Array}
   */


  function extractFilters(filters) {
    if (typeof filters === 'string') {
      return adaptFilterSyntax(filters);
    } else if (Array.isArray(filters)) {
      return filters.map(function (nestedFilter) {
        if (Array.isArray(nestedFilter)) {
          return nestedFilter.map(function (filter) {
            return adaptFilterSyntax(filter);
          });
        }

        return adaptFilterSyntax(nestedFilter);
      }).flat(2);
    }

    return [];
  }
  /**
   * @param  {Filter} filters?
   * @returns {FacetsCache}
   */


  function getFacetsFromFilter(filters) {
    var extractedFilters = extractFilters(filters);
    var cleanFilters = removeUndefined(extractedFilters);
    return cleanFilters.reduce(function (cache, parsedFilter) {
      var _a;

      var filterName = parsedFilter.filterName,
          value = parsedFilter.value;
      var prevFields = cache[filterName] || [];
      cache = __assign(__assign({}, cache), (_a = {}, _a[filterName] = __spreadArray(__spreadArray([], prevFields, true), [value], false), _a));
      return cache;
    }, {});
  }

  function getFacetsFromDefaultDistribution(facetDistribution) {
    return Object.keys(facetDistribution).reduce(function (cache, facet) {
      var _a;

      var facetValues = Object.keys(facetDistribution[facet]);
      return __assign(__assign({}, cache), (_a = {}, _a[facet] = facetValues, _a));
    }, {});
  }
  /**
   * @param  {Filter} filters?
   * @returns {FacetsCache}
   */


  function extractFacets(searchContext, searchParams) {
    if (searchContext.keepZeroFacets) {
      return getFacetsFromDefaultDistribution(searchContext.defaultFacetDistribution);
    } else {
      return getFacetsFromFilter(searchParams === null || searchParams === void 0 ? void 0 : searchParams.filter);
    }
  }
  /**
   * Assign missing filters to facetDistribution.
   * All facets passed as filter should appear in the facetDistribution.
   * If not present, the facet is added with 0 as value.
   *
   *
   * @param  {FacetsCache} cache?
   * @param  {FacetDistribution} distribution?
   * @returns {FacetDistribution}
   */


  function addMissingFacets(cachedFacets, distribution) {
    distribution = distribution || {}; // If cachedFacets contains something

    if (cachedFacets && Object.keys(cachedFacets).length > 0) {
      // for all filters in cached filters
      for (var cachedFacet in cachedFacets) {
        // if facet does not exist on returned distribution, add an empty object
        if (!distribution[cachedFacet]) distribution[cachedFacet] = {}; // for all fields in every filter

        for (var _i = 0, _a = cachedFacets[cachedFacet]; _i < _a.length; _i++) {
          var cachedField = _a[_i]; // if the field is not present in the returned distribution
          // set it at 0

          if (!Object.keys(distribution[cachedFacet]).includes(cachedField)) {
            // add 0 value
            distribution[cachedFacet][cachedField] = 0;
          }
        }
      }
    }

    return distribution;
  }
  /**
   * @param  {ResponseCacher} cache
   */


  function SearchResolver(client, cache) {
    return {
      /**
       * @param  {SearchContext} searchContext
       * @param  {MeiliSearchParams} searchParams
       * @param  {MeiliSearch} client
       * @returns {Promise}
       */
      searchResponse: function (searchContext, searchParams) {
        return __awaiter(this, void 0, void 0, function () {
          var placeholderSearch, query, key, cachedResponse, cachedFacets, searchResponse;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                placeholderSearch = searchContext.placeholderSearch, query = searchContext.query;
                key = cache.formatKey([searchParams, searchContext.indexUid, searchContext.query, searchContext.pagination]);
                cachedResponse = cache.getEntry(key); // Check if specific request is already cached with its associated search response.

                if (cachedResponse) return [2
                /*return*/
                , cachedResponse];
                cachedFacets = extractFacets(searchContext, searchParams);
                return [4
                /*yield*/
                , client.index(searchContext.indexUid).search(searchContext.query, searchParams) // Add missing facets back into facetDistribution
                ];

              case 1:
                searchResponse = _a.sent(); // Add missing facets back into facetDistribution

                searchResponse.facetDistribution = addMissingFacets(cachedFacets, searchResponse.facetDistribution); // query can be: empty string, undefined or null
                // all of them are falsy's

                if (!placeholderSearch && !query) {
                  searchResponse.hits = [];
                } // Cache response


                cache.setEntry(key, searchResponse);
                return [2
                /*return*/
                , searchResponse];
            }
          });
        });
      }
    };
  }
  /**
   * @param  {number} rad
   * @returns {number}
   */


  function rad2degr(rad) {
    return rad * 180 / Math.PI;
  }
  /**
   * @param  {number} degr
   * @returns {number}
   */


  function degr2rad(degr) {
    return degr * Math.PI / 180;
  }
  /**
   * @param  {number} lat1
   * @param  {number} lng1
   * @param  {number} lat2
   * @param  {number} lng2
   * @returns {string}
   */


  function middleGeoPoints(lat1, lng1, lat2, lng2) {
    // convert to radians
    lat1 = degr2rad(lat1);
    lng1 = degr2rad(lng1);
    var x1 = Math.cos(lat1) * Math.cos(lng1);
    var y1 = Math.cos(lat1) * Math.sin(lng1);
    var z1 = Math.sin(lat1); // convert to radians

    lat2 = degr2rad(lat2);
    lng2 = degr2rad(lng2);
    var x2 = Math.cos(lat2) * Math.cos(lng2);
    var y2 = Math.cos(lat2) * Math.sin(lng2);
    var z2 = Math.sin(lat2);
    var x = x1 + x2;
    var y = y1 + y2;
    var z = z1 + z2;
    var Hyp = Math.sqrt(x * x + y * y);
    var lng3 = Math.atan2(y, x);
    var lat3 = Math.atan2(z, Hyp);

    if (lng1 < lng2 || lng1 > lng2 && lng1 > Math.PI && lng2 < -Math.PI) {
      lat3 = lat3 + Math.PI;
      lng3 = lng3 + Math.PI;
    } else {
      lat3 = rad2degr(lat3);
      lng3 = rad2degr(lng3);
    }

    if (Math.abs(x) < Math.pow(10, -9) && Math.abs(y) < Math.pow(10, -9) && Math.abs(z) < Math.pow(10, -9)) {
      lat3 = 0;
      lng3 = 0;
    }

    return "".concat(lat3, ",").concat(lng3);
  }
  /**
   * @param  {number} lat1
   * @param  {number} lng1
   * @param  {number} lat2
   * @param  {number} lng2
   * @returns {number}
   */


  function getDistanceInMeter(lat1, lng1, lat2, lng2) {
    // Haversine Algorithm
    var R = 6371e3; // metres

    var latRad1 = lat1 * Math.PI / 180;
    var latRad2 = lat2 * Math.PI / 180;
    var latCenterRad = (lat2 - lat1) * Math.PI / 180;
    var lngCenterRad = (lng2 - lng1) * Math.PI / 180;
    var a = Math.sin(latCenterRad / 2) * Math.sin(latCenterRad / 2) + Math.cos(latRad1) * Math.cos(latRad2) * Math.sin(lngCenterRad / 2) * Math.sin(lngCenterRad / 2);
    var bearing = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    var distance = R * bearing; // in metres

    return distance;
  }

  function adaptGeoPointsRules(geoSearchContext) {
    if (!geoSearchContext) {
      return undefined;
    }

    var insideBoundingBox = geoSearchContext.insideBoundingBox,
        aroundLatLng = geoSearchContext.aroundLatLng,
        aroundRadius = geoSearchContext.aroundRadius,
        minimumAroundRadius = geoSearchContext.minimumAroundRadius;
    var middlePoint;
    var radius;

    if (aroundLatLng) {
      middlePoint = aroundLatLng;
    }

    if (aroundRadius != null || minimumAroundRadius != null) {
      if (aroundRadius != null) radius = aroundRadius;else radius = minimumAroundRadius;
    } // If insideBoundingBox is provided it takes precedent over all other options


    if (insideBoundingBox && typeof insideBoundingBox === 'string') {
      var _a = insideBoundingBox.split(','),
          lat1Raw = _a[0],
          lng1Raw = _a[1],
          lat2Raw = _a[2],
          lng2Raw = _a[3];

      var _b = [parseFloat(lat1Raw), parseFloat(lng1Raw), parseFloat(lat2Raw), parseFloat(lng2Raw)],
          lat1 = _b[0],
          lng1 = _b[1],
          lat2 = _b[2],
          lng2 = _b[3];
      radius = getDistanceInMeter(lat1, lng1, lat2, lng2) / 2;
      middlePoint = middleGeoPoints(lat1, lng1, lat2, lng2);
    }

    if (middlePoint != null && radius != null) {
      var _c = middlePoint.split(','),
          lat3 = _c[0],
          lng3 = _c[1];

      lat3 = Number.parseFloat(lat3).toFixed(5);
      lng3 = Number.parseFloat(lng3).toFixed(5);
      var filter = "_geoRadius(".concat(lat3, ", ").concat(lng3, ", ").concat(radius, ")");
      return {
        filter: filter
      };
    }

    return undefined;
  }

  function createGeoSearchContext(searchContext) {
    var geoContext = {};
    var aroundLatLng = searchContext.aroundLatLng,
        aroundLatLngViaIP = searchContext.aroundLatLngViaIP,
        aroundRadius = searchContext.aroundRadius,
        aroundPrecision = searchContext.aroundPrecision,
        minimumAroundRadius = searchContext.minimumAroundRadius,
        insideBoundingBox = searchContext.insideBoundingBox,
        insidePolygon = searchContext.insidePolygon;

    if (aroundLatLng) {
      geoContext.aroundLatLng = aroundLatLng;
    }

    if (aroundLatLngViaIP) {
      console.warn('instant-meilisearch: `aroundLatLngViaIP` is not supported.');
    }

    if (aroundRadius) {
      geoContext.aroundRadius = aroundRadius;
    }

    if (aroundPrecision) {
      console.warn("instant-meilisearch: `aroundPrecision` is not supported.\n    See this discussion to track its implementation https://github.com/meilisearch/product/discussions/264");
    }

    if (minimumAroundRadius) {
      geoContext.minimumAroundRadius = minimumAroundRadius;
    }

    if (insideBoundingBox) {
      geoContext.insideBoundingBox = insideBoundingBox;
    } // See related issue: https://github.com/meilisearch/instant-meilisearch/issues/555


    if (insidePolygon) {
      console.warn("instant-meilisearch: `insidePolygon` is not implented in instant-meilisearch.");
    }

    return geoContext;
  }
  /**
   * Transform InstantSearch filter to Meilisearch filter.
   * Change sign from `:` to `=` in nested filter object.
   * example: [`genres:comedy`] becomes [`genres=comedy`]
   *
   * @param  {SearchContext['facetFilters']} filters?
   * @returns {Filter}
   */


  function transformFilter(filters) {
    if (typeof filters === 'string') {
      return replaceColonByEqualSign(filters);
    } else if (Array.isArray(filters)) return filters.map(function (filter) {
      if (Array.isArray(filter)) return filter.map(function (nestedFilter) {
        return replaceColonByEqualSign(nestedFilter);
      }).filter(function (elem) {
        return elem;
      });else {
        return replaceColonByEqualSign(filter);
      }
    }).filter(function (elem) {
      return elem;
    });

    return [];
  }
  /**
   * Return the filter in an array if it is a string
   * If filter is array, return without change.
   *
   * @param  {Filter} filter
   * @returns {Array}
   */


  function filterToArray(filter) {
    // Filter is a string
    if (filter === '') return [];else if (typeof filter === 'string') return [filter]; // Filter is either an array of strings, or an array of array of strings

    return filter;
  }
  /**
   * Merge facetFilters, numericFilters and filters together.
   *
   * @param  {Filter} facetFilters
   * @param  {Filter} numericFilters
   * @param  {string} filters
   * @returns {Filter}
   */


  function mergeFilters(facetFilters, numericFilters, filters) {
    var adaptedFilters = filters.trim();
    var adaptedFacetFilters = filterToArray(facetFilters);
    var adaptedNumericFilters = filterToArray(numericFilters);

    var adaptedFilter = __spreadArray(__spreadArray(__spreadArray([], adaptedFacetFilters, true), adaptedNumericFilters, true), [adaptedFilters], false);

    var cleanedFilters = adaptedFilter.filter(function (filter) {
      if (Array.isArray(filter)) {
        return filter.length;
      }

      return filter;
    });
    return cleanedFilters;
  }
  /**
   * Adapt instantsearch.js filters to Meilisearch filters by
   * combining and transforming all provided filters.
   *
   * @param  {string|undefined} filters
   * @param  {SearchContext['numericFilters']} numericFilters
   * @param  {SearchContext['facetFilters']} facetFilters
   * @returns {Filter}
   */


  function adaptFilters(filters, numericFilters, facetFilters) {
    var transformedFilter = transformFilter(facetFilters || []);
    var transformedNumericFilter = transformFilter(numericFilters || []);
    return mergeFilters(transformedFilter, transformedNumericFilter, filters || '');
  }

  function setScrollPagination(hitsPerPage, page, query, placeholderSearch) {
    if (!placeholderSearch && query === '') {
      return {
        limit: 0,
        offset: 0
      };
    }

    return {
      limit: hitsPerPage + 1,
      offset: page * hitsPerPage
    };
  }

  function setFinitePagination(hitsPerPage, page, query, placeholderSearch) {
    if (!placeholderSearch && query === '') {
      return {
        hitsPerPage: 0,
        page: page + 1
      };
    } else {
      return {
        hitsPerPage: hitsPerPage,
        page: page + 1
      };
    }
  }
  /**
   * Adapts instantsearch.js and instant-meilisearch options
   * to meilisearch search query parameters.
   *
   * @param  {SearchContext} searchContext
   *
   * @returns {MeiliSearchParams}
   */


  function MeiliParamsCreator(searchContext) {
    var meiliSearchParams = {};
    var facets = searchContext.facets,
        attributesToSnippet = searchContext.attributesToSnippet,
        snippetEllipsisText = searchContext.snippetEllipsisText,
        attributesToRetrieve = searchContext.attributesToRetrieve,
        filters = searchContext.filters,
        numericFilters = searchContext.numericFilters,
        facetFilters = searchContext.facetFilters,
        attributesToHighlight = searchContext.attributesToHighlight,
        highlightPreTag = searchContext.highlightPreTag,
        highlightPostTag = searchContext.highlightPostTag,
        placeholderSearch = searchContext.placeholderSearch,
        query = searchContext.query,
        sort = searchContext.sort,
        pagination = searchContext.pagination,
        matchingStrategy = searchContext.matchingStrategy;
    return {
      getParams: function () {
        return meiliSearchParams;
      },
      addFacets: function () {
        if (facets === null || facets === void 0 ? void 0 : facets.length) {
          meiliSearchParams.facets = facets;
        }
      },
      addAttributesToCrop: function () {
        if (attributesToSnippet) {
          meiliSearchParams.attributesToCrop = attributesToSnippet;
        }
      },
      addCropMarker: function () {
        // Attributes To Crop marker
        if (snippetEllipsisText != null) {
          meiliSearchParams.cropMarker = snippetEllipsisText;
        }
      },
      addAttributesToRetrieve: function () {
        if (attributesToRetrieve) {
          meiliSearchParams.attributesToRetrieve = attributesToRetrieve;
        }
      },
      addFilters: function () {
        var filter = adaptFilters(filters, numericFilters, facetFilters);

        if (filter.length) {
          meiliSearchParams.filter = filter;
        }
      },
      addAttributesToHighlight: function () {
        meiliSearchParams.attributesToHighlight = attributesToHighlight || ['*'];
      },
      addPreTag: function () {
        if (highlightPreTag) {
          meiliSearchParams.highlightPreTag = highlightPreTag;
        } else {
          meiliSearchParams.highlightPreTag = '__ais-highlight__';
        }
      },
      addPostTag: function () {
        if (highlightPostTag) {
          meiliSearchParams.highlightPostTag = highlightPostTag;
        } else {
          meiliSearchParams.highlightPostTag = '__/ais-highlight__';
        }
      },
      addPagination: function () {
        if (pagination.finite) {
          var _a = setFinitePagination(pagination.hitsPerPage, pagination.page, query, placeholderSearch),
              hitsPerPage = _a.hitsPerPage,
              page = _a.page;

          meiliSearchParams.hitsPerPage = hitsPerPage;
          meiliSearchParams.page = page;
        } else {
          var _b = setScrollPagination(pagination.hitsPerPage, pagination.page, query, placeholderSearch),
              limit = _b.limit,
              offset = _b.offset;

          meiliSearchParams.limit = limit;
          meiliSearchParams.offset = offset;
        }
      },
      addSort: function () {
        if (sort === null || sort === void 0 ? void 0 : sort.length) {
          meiliSearchParams.sort = [sort];
        }
      },
      addGeoSearchRules: function () {
        var geoSearchContext = createGeoSearchContext(searchContext);
        var geoRules = adaptGeoPointsRules(geoSearchContext);

        if (geoRules === null || geoRules === void 0 ? void 0 : geoRules.filter) {
          if (meiliSearchParams.filter) {
            meiliSearchParams.filter.unshift(geoRules.filter);
          } else {
            meiliSearchParams.filter = [geoRules.filter];
          }
        }
      },
      addMatchingStrategy: function () {
        if (matchingStrategy) {
          meiliSearchParams.matchingStrategy = matchingStrategy;
        }
      }
    };
  }
  /**
   * Adapt search request from instantsearch.js
   * to search request compliant with Meilisearch
   *
   * @param  {SearchContext} searchContext
   * @returns {MeiliSearchParams}
   */


  function adaptSearchParams(searchContext) {
    var meilisearchParams = MeiliParamsCreator(searchContext);
    meilisearchParams.addFacets();
    meilisearchParams.addAttributesToHighlight();
    meilisearchParams.addPreTag();
    meilisearchParams.addPostTag();
    meilisearchParams.addAttributesToRetrieve();
    meilisearchParams.addAttributesToCrop();
    meilisearchParams.addCropMarker();
    meilisearchParams.addPagination();
    meilisearchParams.addFilters();
    meilisearchParams.addSort();
    meilisearchParams.addGeoSearchRules();
    meilisearchParams.addMatchingStrategy();
    return meilisearchParams.getParams();
  }
  /**
   * Stringify values following instantsearch practices.
   *
   * @param  {any} value - value that needs to be stringified
   */


  function stringifyValue(value) {
    if (typeof value === 'string') {
      // String
      return value;
    } else if (value === undefined) {
      // undefined
      return JSON.stringify(null);
    } else {
      return JSON.stringify(value);
    }
  }
  /**
   * Recursif function wrap the deepest possible value
   * the following way: { value: "xx" }.
   *
   * For example:
   *
   * {
   * "rootField": { "value": "x" }
   * "nestedField": { child: { value: "y" } }
   * }
   *
   * recursivity continues until the value is not an array or an object.
   *
   * @param  {any} value - value of a field
   *
   * @returns Record<string, any>
   */


  function wrapValue(value) {
    if (Array.isArray(value)) {
      // Array
      return value.map(function (elem) {
        return wrapValue(elem);
      });
    } else if (isPureObject(value)) {
      // Object
      return Object.keys(value).reduce(function (nested, key) {
        nested[key] = wrapValue(value[key]);
        return nested;
      }, {});
    } else {
      return {
        value: stringifyValue(value)
      };
    }
  }
  /**
   * Adapt Meilisearch formatted fields to a format compliant to instantsearch.js.
   *
   * @param  {Record<string} formattedHit
   * @param  {SearchContext} searchContext
   * @returns {Record}
   */


  function adaptFormattedFields(hit) {
    if (!hit) return {};

    var _formattedResult = wrapValue(hit);

    var highlightedHit = {
      // We could not determine what the differences are between those two fields.
      _highlightResult: _formattedResult,
      _snippetResult: _formattedResult
    };
    return highlightedHit;
  }
  /**
   * @param  {any[]} hits
   * @returns {Array<Record<string, any>>}
   */


  function adaptGeoResponse(hits) {
    var _a;

    for (var i = 0; i < hits.length; i++) {
      var objectID = "".concat(i + Math.random() * 1000000);

      if (hits[i]._geo) {
        hits[i]._geoloc = hits[i]._geo;
        hits[i].objectID = objectID;
      }

      if ((_a = hits[i]._formatted) === null || _a === void 0 ? void 0 : _a._geo) {
        hits[i]._formatted._geoloc = hits[i]._formatted._geo;
        hits[i]._formatted.objectID = objectID;
      }
    }

    return hits;
  }
  /**
   * @param  {MeiliSearchResponse<Record<string, any>>} searchResponse
   * @param  {SearchContext} searchContext
   * @returns {Array<Record<string, any>>}
   */


  function adaptHits(searchResponse, searchContext) {
    var primaryKey = searchContext.primaryKey;
    var hits = searchResponse.hits;
    var _a = searchContext.pagination,
        finite = _a.finite,
        hitsPerPage = _a.hitsPerPage; // if the length of the hits is bigger than the hitsPerPage
    // It means that there is still pages to come as we append limit by hitsPerPage + 1
    // In which case we still need to remove the additional hit returned by Meilisearch

    if (!finite && hits.length > hitsPerPage) {
      hits.splice(hits.length - 1, 1);
    }

    var adaptedHits = hits.map(function (hit) {
      // Creates Hit object compliant with InstantSearch
      if (Object.keys(hit).length > 0) {
        var formattedHit = hit._formatted;
        hit._matchesPosition;

        var documentFields = __rest(hit, ["_formatted", "_matchesPosition"]);

        var adaptedHit = Object.assign(documentFields, adaptFormattedFields(formattedHit));

        if (primaryKey) {
          adaptedHit.objectID = hit[primaryKey];
        }

        return adaptedHit;
      }

      return hit;
    });
    adaptedHits = adaptGeoResponse(adaptedHits);
    return adaptedHits;
  }

  function adaptTotalHits(searchResponse) {
    var _a = searchResponse.hitsPerPage,
        hitsPerPage = _a === void 0 ? 0 : _a,
        _b = searchResponse.totalPages,
        totalPages = _b === void 0 ? 0 : _b,
        estimatedTotalHits = searchResponse.estimatedTotalHits,
        totalHits = searchResponse.totalHits;

    if (estimatedTotalHits != null) {
      return estimatedTotalHits;
    } else if (totalHits != null) {
      return totalHits;
    } // Should not happen but safeguarding just in case


    return hitsPerPage * totalPages;
  }

  function adaptNbPages(searchResponse, hitsPerPage) {
    if (searchResponse.totalPages != null) {
      return searchResponse.totalPages;
    } // Avoid dividing by 0


    if (hitsPerPage === 0) {
      return 0;
    }

    var _a = searchResponse.limit,
        limit = _a === void 0 ? 20 : _a,
        _b = searchResponse.offset,
        offset = _b === void 0 ? 0 : _b,
        hits = searchResponse.hits;
    var additionalPage = hits.length >= limit ? 1 : 0;
    return offset / hitsPerPage + 1 + additionalPage;
  }

  function adaptPaginationParameters(searchResponse, paginationState) {
    var hitsPerPage = paginationState.hitsPerPage,
        page = paginationState.page;
    var nbPages = adaptNbPages(searchResponse, hitsPerPage);
    return {
      page: page,
      nbPages: nbPages,
      hitsPerPage: hitsPerPage
    };
  }
  /**
   * Adapt search response from Meilisearch
   * to search response compliant with instantsearch.js
   *
   * @param  {MeiliSearchResponse<Record<string>>} searchResponse
   * @param  {SearchContext} searchContext
   * @returns {{ results: Array<AlgoliaSearchResponse<T>> }}
   */


  function adaptSearchResponse(searchResponse, searchContext) {
    var searchResponseOptionals = {};
    var processingTimeMs = searchResponse.processingTimeMs,
        query = searchResponse.query,
        facets = searchResponse.facetDistribution;

    var _a = adaptPaginationParameters(searchResponse, searchContext.pagination),
        hitsPerPage = _a.hitsPerPage,
        page = _a.page,
        nbPages = _a.nbPages;

    var hits = adaptHits(searchResponse, searchContext);
    var nbHits = adaptTotalHits(searchResponse); // Create response object compliant with InstantSearch

    var adaptedSearchResponse = __assign({
      index: searchContext.indexUid,
      hitsPerPage: hitsPerPage,
      page: page,
      facets: facets,
      nbPages: nbPages,
      nbHits: nbHits,
      processingTimeMS: processingTimeMs,
      query: query,
      hits: hits,
      params: '',
      exhaustiveNbHits: false
    }, searchResponseOptionals);

    return {
      results: [adaptedSearchResponse]
    };
  }
  /**
   * Create the current state of the pagination
   *
   * @param  {boolean} [finite]
   * @param  {number} [hitsPerPage]
   * @param  {number} [page]
   * @returns {SearchContext}
   */


  function createPaginationState(finite, hitsPerPage, page) {
    return {
      hitsPerPage: hitsPerPage === undefined ? 20 : hitsPerPage,
      page: page || 0,
      finite: !!finite
    };
  }
  /**
   * @param  {AlgoliaMultipleQueriesQuery} searchRequest
   * @param  {Context} options
   * @returns {SearchContext}
   */


  function createSearchContext(searchRequest, options, defaultFacetDistribution) {
    // Split index name and possible sorting rules
    var _a = searchRequest.indexName.split(':'),
        indexUid = _a[0],
        sortByArray = _a.slice(1);

    var instantSearchParams = searchRequest.params;
    var paginationState = createPaginationState(options.finitePagination, instantSearchParams === null || instantSearchParams === void 0 ? void 0 : instantSearchParams.hitsPerPage, instantSearchParams === null || instantSearchParams === void 0 ? void 0 : instantSearchParams.page);

    var searchContext = __assign(__assign(__assign({}, options), instantSearchParams), {
      sort: sortByArray.join(':') || '',
      indexUid: indexUid,
      pagination: paginationState,
      defaultFacetDistribution: defaultFacetDistribution || {},
      placeholderSearch: options.placeholderSearch !== false,
      keepZeroFacets: !!options.keepZeroFacets
    });

    return searchContext;
  }
  /**
   * @param  {Record<string} cache
   * @returns {SearchCache}
   */


  function SearchCache(cache) {
    if (cache === void 0) {
      cache = {};
    }

    var searchCache = cache;
    return {
      getEntry: function (key) {
        if (searchCache[key]) {
          try {
            return JSON.parse(searchCache[key]);
          } catch (_) {
            return searchCache[key];
          }
        }

        return undefined;
      },
      formatKey: function (components) {
        return stringifyArray(components);
      },
      setEntry: function (key, searchResponse) {
        searchCache[key] = JSON.stringify(searchResponse);
      },
      clearCache: function () {
        searchCache = {};
      }
    };
  }

  function cacheFirstFacetDistribution(searchResolver, searchContext) {
    return __awaiter(this, void 0, void 0, function () {
      var defaultSearchContext, meilisearchParams, searchResponse;
      return __generator(this, function (_a) {
        switch (_a.label) {
          case 0:
            defaultSearchContext = __assign(__assign({}, searchContext), {
              // placeholdersearch true to ensure a request is made
              placeholderSearch: true,
              // query set to empty to ensure retrieving the default facetdistribution
              query: ''
            });
            meilisearchParams = MeiliParamsCreator(defaultSearchContext);
            meilisearchParams.addFacets();
            meilisearchParams.addPagination();
            return [4
            /*yield*/
            , searchResolver.searchResponse(defaultSearchContext, meilisearchParams.getParams())];

          case 1:
            searchResponse = _a.sent();
            return [2
            /*return*/
            , searchResponse.facetDistribution || {}];
        }
      });
    });
  }

  var PACKAGE_VERSION = '0.10.1';

  var constructClientAgents = function (clientAgents) {
    if (clientAgents === void 0) {
      clientAgents = [];
    }

    var instantMeilisearchAgent = "Meilisearch instant-meilisearch (v".concat(PACKAGE_VERSION, ")");
    return clientAgents.concat(instantMeilisearchAgent);
  };
  /**
   * apiKey callback definition
   * @callback apiKeyCallback
   * @returns {string} - The apiKey to use
   */

  /**
   * Instantiate SearchClient required by instantsearch.js.
   * @param  {string} hostUrl
   * @param  {string | apiKeyCallback} apiKey
   * @param  {InstantMeiliSearchOptions={}} meiliSearchOptions
   * @returns {InstantMeiliSearchInstance}
   */


  function instantMeiliSearch(hostUrl, apiKey, instantMeiliSearchOptions) {
    if (apiKey === void 0) {
      apiKey = '';
    }

    if (instantMeiliSearchOptions === void 0) {
      instantMeiliSearchOptions = {};
    } // Validate parameters


    validateInstantMeiliSearchParams(hostUrl, apiKey); // Resolve possible function to get apiKey

    apiKey = getApiKey(apiKey);
    var clientAgents = constructClientAgents(instantMeiliSearchOptions.clientAgents);
    var meilisearchClient = new meilisearch_umd.MeiliSearch({
      host: hostUrl,
      apiKey: apiKey,
      clientAgents: clientAgents
    });
    var searchCache = SearchCache(); // create search resolver with included cache

    var searchResolver = SearchResolver(meilisearchClient, searchCache);
    var defaultFacetDistribution;
    return {
      clearCache: function () {
        return searchCache.clearCache();
      },

      /**
       * @param  {readonlyAlgoliaMultipleQueriesQuery[]} instantSearchRequests
       * @returns {Array}
       */
      search: function (instantSearchRequests) {
        return __awaiter(this, void 0, void 0, function () {
          var searchRequest, searchContext, adaptedSearchRequest, searchResponse, adaptedSearchResponse, e_1;
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                _a.trys.push([0, 4,, 5]);

                searchRequest = instantSearchRequests[0];
                searchContext = createSearchContext(searchRequest, instantMeiliSearchOptions, defaultFacetDistribution);
                adaptedSearchRequest = adaptSearchParams(searchContext);
                if (!(defaultFacetDistribution === undefined)) return [3
                /*break*/
                , 2];
                return [4
                /*yield*/
                , cacheFirstFacetDistribution(searchResolver, searchContext)];

              case 1:
                defaultFacetDistribution = _a.sent();
                searchContext.defaultFacetDistribution = defaultFacetDistribution;
                _a.label = 2;

              case 2:
                return [4
                /*yield*/
                , searchResolver.searchResponse(searchContext, adaptedSearchRequest) // Adapt the Meilisearch responsne to a compliant instantsearch.js response
                ];

              case 3:
                searchResponse = _a.sent();
                adaptedSearchResponse = adaptSearchResponse(searchResponse, searchContext);
                return [2
                /*return*/
                , adaptedSearchResponse];

              case 4:
                e_1 = _a.sent();
                console.error(e_1);
                throw new Error(e_1);

              case 5:
                return [2
                /*return*/
                ];
            }
          });
        });
      },
      searchForFacetValues: function (_) {
        return __awaiter(this, void 0, void 0, function () {
          return __generator(this, function (_a) {
            switch (_a.label) {
              case 0:
                return [4
                /*yield*/
                , new Promise(function (resolve, reject) {
                  reject(new Error('SearchForFacetValues is not compatible with Meilisearch'));
                  resolve([]); // added here to avoid compilation error
                })];

              case 1:
                return [2
                /*return*/
                , _a.sent()];
            }
          });
        });
      }
    };
  }
  /**
   * Resolves apiKey if it is a function
   * @param  {string | apiKeyCallback} apiKey
   * @returns {string} api key value
   */


  function getApiKey(apiKey) {
    // If apiKey is function, call it to get the apiKey
    if (typeof apiKey === 'function') {
      var apiKeyFnValue = apiKey();

      if (typeof apiKeyFnValue !== 'string') {
        throw new TypeError('Provided apiKey function (2nd parameter) did not return a string, expected string');
      }

      return apiKeyFnValue;
    }

    return apiKey;
  }

  exports.MatchingStrategies = void 0;

  (function (MatchingStrategies) {
    MatchingStrategies["ALL"] = "all";
    MatchingStrategies["LAST"] = "last";
  })(exports.MatchingStrategies || (exports.MatchingStrategies = {}));

  exports.instantMeiliSearch = instantMeiliSearch;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),

/***/ 58987:
/*!*******************************************!*\
  !*** ./node_modules/device-uuid/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/**
 *
 * @revision    $Id: index.js 2012-03-24 16:21:10 Aleksey $
 * @created     2016-09-24 16:21:10
 * @category    Express Helpers
 * @package     device-uuid
 * @version     1.0.2
 * @copyright   Copyright (c) 2016-2017 - All rights reserved.
 * @license     MIT License
 * @author      Alexey Gordeyev IK <aleksej@gordejev.lv>
 * @link        http://www.gordejev.lv
 *
 */
module.exports = __webpack_require__(/*! ./lib/device-uuid */ 14518);

/***/ }),

/***/ 14518:
/*!*****************************************************!*\
  !*** ./node_modules/device-uuid/lib/device-uuid.js ***!
  \*****************************************************/
/***/ (function() {

/*!
 * device-uuid.js v1.0.4 (https://github.com/biggora/device-uuid/)
 * Copyright 2016-2017 Alexey Gordeyev
 * Licensed under MIT (https://github.com/biggora/device-uuid/blob/master/LICENSE)
 */

/*global
 screen, window, navigator
 */
(function (exports) {
  'use strict';

  var BOTS = ['\\+https:\\/\\/developers.google.com\\/\\+\\/web\\/snippet\\/', 'googlebot', 'baiduspider', 'gurujibot', 'yandexbot', 'slurp', 'msnbot', 'bingbot', 'facebookexternalhit', 'linkedinbot', 'twitterbot', 'slackbot', 'telegrambot', 'applebot', 'pingdom', 'tumblr ', 'Embedly', 'spbot'];
  var IS_BOT_REGEXP = new RegExp('^.*(' + BOTS.join('|') + ').*$');

  var DeviceUUID = function (options) {
    options = options ? options : {};
    var defOptions = {
      version: false,
      language: false,
      platform: true,
      os: true,
      pixelDepth: true,
      colorDepth: true,
      resolution: false,
      isAuthoritative: true,
      silkAccelerated: true,
      isKindleFire: true,
      isDesktop: true,
      isMobile: true,
      isTablet: true,
      isWindows: true,
      isLinux: true,
      isLinux64: true,
      isChromeOS: true,
      isMac: true,
      isiPad: true,
      isiPhone: true,
      isiPod: true,
      isAndroid: true,
      isSamsung: true,
      isSmartTV: true,
      isRaspberry: true,
      isBlackberry: true,
      isTouchScreen: true,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: false,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      source: false,
      cpuCores: false
    };

    for (var key in options) {
      if (options.hasOwnProperty(key) && typeof defOptions[key] !== 'undefined') {
        defOptions[key] = options[key];
      }
    }

    this.options = defOptions;
    this.version = '1.0.0';
    this._Versions = {
      Edge: /Edge\/([\d\w\.\-]+)/i,
      Firefox: /firefox\/([\d\w\.\-]+)/i,
      IE: /msie\s([\d\.]+[\d])|trident\/\d+\.\d+;.*[rv:]+(\d+\.\d)/i,
      Chrome: /chrome\/([\d\w\.\-]+)/i,
      Chromium: /(?:chromium|crios)\/([\d\w\.\-]+)/i,
      Safari: /version\/([\d\w\.\-]+)/i,
      Opera: /version\/([\d\w\.\-]+)|OPR\/([\d\w\.\-]+)/i,
      Ps3: /([\d\w\.\-]+)\)\s*$/i,
      Psp: /([\d\w\.\-]+)\)?\s*$/i,
      Amaya: /amaya\/([\d\w\.\-]+)/i,
      SeaMonkey: /seamonkey\/([\d\w\.\-]+)/i,
      OmniWeb: /omniweb\/v([\d\w\.\-]+)/i,
      Flock: /flock\/([\d\w\.\-]+)/i,
      Epiphany: /epiphany\/([\d\w\.\-]+)/i,
      WinJs: /msapphost\/([\d\w\.\-]+)/i,
      PhantomJS: /phantomjs\/([\d\w\.\-]+)/i,
      UC: /UCBrowser\/([\d\w\.]+)/i
    };
    this._Browsers = {
      Edge: /edge/i,
      Amaya: /amaya/i,
      Konqueror: /konqueror/i,
      Epiphany: /epiphany/i,
      SeaMonkey: /seamonkey/i,
      Flock: /flock/i,
      OmniWeb: /omniweb/i,
      Chromium: /chromium|crios/i,
      Chrome: /chrome/i,
      Safari: /safari/i,
      IE: /msie|trident/i,
      Opera: /opera|OPR/i,
      PS3: /playstation 3/i,
      PSP: /playstation portable/i,
      Firefox: /firefox/i,
      WinJs: /msapphost/i,
      PhantomJS: /phantomjs/i,
      UC: /UCBrowser/i
    };
    this._OS = {
      Windows10: /windows nt 10\.0/i,
      Windows81: /windows nt 6\.3/i,
      Windows8: /windows nt 6\.2/i,
      Windows7: /windows nt 6\.1/i,
      UnknownWindows: /windows nt 6\.\d+/i,
      WindowsVista: /windows nt 6\.0/i,
      Windows2003: /windows nt 5\.2/i,
      WindowsXP: /windows nt 5\.1/i,
      Windows2000: /windows nt 5\.0/i,
      WindowsPhone8: /windows phone 8\./,
      OSXCheetah: /os x 10[._]0/i,
      OSXPuma: /os x 10[._]1(\D|$)/i,
      OSXJaguar: /os x 10[._]2/i,
      OSXPanther: /os x 10[._]3/i,
      OSXTiger: /os x 10[._]4/i,
      OSXLeopard: /os x 10[._]5/i,
      OSXSnowLeopard: /os x 10[._]6/i,
      OSXLion: /os x 10[._]7/i,
      OSXMountainLion: /os x 10[._]8/i,
      OSXMavericks: /os x 10[._]9/i,
      OSXYosemite: /os x 10[._]10/i,
      OSXElCapitan: /os x 10[._]11/i,
      OSXSierra: /os x 10[._]12/i,
      Mac: /os x/i,
      Linux: /linux/i,
      Linux64: /linux x86_64/i,
      ChromeOS: /cros/i,
      Wii: /wii/i,
      PS3: /playstation 3/i,
      PSP: /playstation portable/i,
      iPad: /\(iPad.*os (\d+)[._](\d+)/i,
      iPhone: /\(iPhone.*os (\d+)[._](\d+)/i,
      Bada: /Bada\/(\d+)\.(\d+)/i,
      Curl: /curl\/(\d+)\.(\d+)\.(\d+)/i
    };
    this._Platform = {
      Windows: /windows nt/i,
      WindowsPhone: /windows phone/i,
      Mac: /macintosh/i,
      Linux: /linux/i,
      Wii: /wii/i,
      Playstation: /playstation/i,
      iPad: /ipad/i,
      iPod: /ipod/i,
      iPhone: /iphone/i,
      Android: /android/i,
      Blackberry: /blackberry/i,
      Samsung: /samsung/i,
      Curl: /curl/i
    };
    this.DefaultAgent = {
      isAuthoritative: true,
      isMobile: false,
      isTablet: false,
      isiPad: false,
      isiPod: false,
      isiPhone: false,
      isAndroid: false,
      isBlackberry: false,
      isOpera: false,
      isIE: false,
      isEdge: false,
      isIECompatibilityMode: false,
      isSafari: false,
      isFirefox: false,
      isWebkit: false,
      isChrome: false,
      isKonqueror: false,
      isOmniWeb: false,
      isSeaMonkey: false,
      isFlock: false,
      isAmaya: false,
      isPhantomJS: false,
      isEpiphany: false,
      isDesktop: false,
      isWindows: false,
      isLinux: false,
      isLinux64: false,
      isMac: false,
      isChromeOS: false,
      isBada: false,
      isSamsung: false,
      isRaspberry: false,
      isBot: false,
      isCurl: false,
      isAndroidTablet: false,
      isWinJs: false,
      isKindleFire: false,
      isSilk: false,
      isCaptive: false,
      isSmartTV: false,
      isUC: false,
      isTouchScreen: false,
      silkAccelerated: false,
      colorDepth: -1,
      pixelDepth: -1,
      resolution: [],
      cpuCores: -1,
      language: 'unknown',
      browser: 'unknown',
      version: 'unknown',
      os: 'unknown',
      platform: 'unknown',
      geoIp: {},
      source: '',
      hashInt: function (string) {
        var hash = 0,
            i,
            chr,
            len;

        if (string.length === 0) {
          return hash;
        }

        for (i = 0, len = string.length; i < len; i++) {
          chr = string.charCodeAt(i);
          hash = (hash << 5) - hash + chr;
          hash |= 0;
        }

        return hash;
      },
      hashMD5: function (string) {
        function rotateLeft(lValue, iShiftBits) {
          return lValue << iShiftBits | lValue >>> 32 - iShiftBits;
        }

        function addUnsigned(lX, lY) {
          var lX4, lY4, lX8, lY8, lResult;
          lX8 = lX & 0x80000000;
          lY8 = lY & 0x80000000;
          lX4 = lX & 0x40000000;
          lY4 = lY & 0x40000000;
          lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);

          if (lX4 & lY4) {
            return lResult ^ 0x80000000 ^ lX8 ^ lY8;
          }

          if (lX4 | lY4) {
            if (lResult & 0x40000000) {
              return lResult ^ 0xC0000000 ^ lX8 ^ lY8;
            } else {
              return lResult ^ 0x40000000 ^ lX8 ^ lY8;
            }
          } else {
            return lResult ^ lX8 ^ lY8;
          }
        }

        function gF(x, y, z) {
          return x & y | ~x & z;
        }

        function gG(x, y, z) {
          return x & z | y & ~z;
        }

        function gH(x, y, z) {
          return x ^ y ^ z;
        }

        function gI(x, y, z) {
          return y ^ (x | ~z);
        }

        function gFF(a, b, c, d, x, s, ac) {
          a = addUnsigned(a, addUnsigned(addUnsigned(gF(b, c, d), x), ac));
          return addUnsigned(rotateLeft(a, s), b);
        }

        function gGG(a, b, c, d, x, s, ac) {
          a = addUnsigned(a, addUnsigned(addUnsigned(gG(b, c, d), x), ac));
          return addUnsigned(rotateLeft(a, s), b);
        }

        function gHH(a, b, c, d, x, s, ac) {
          a = addUnsigned(a, addUnsigned(addUnsigned(gH(b, c, d), x), ac));
          return addUnsigned(rotateLeft(a, s), b);
        }

        function gII(a, b, c, d, x, s, ac) {
          a = addUnsigned(a, addUnsigned(addUnsigned(gI(b, c, d), x), ac));
          return addUnsigned(rotateLeft(a, s), b);
        }

        function convertToWordArray(string) {
          var lWordCount;
          var lMessageLength = string.length;
          var lNumberOfWordsTemp1 = lMessageLength + 8;
          var lNumberOfWordsTemp2 = (lNumberOfWordsTemp1 - lNumberOfWordsTemp1 % 64) / 64;
          var lNumberOfWords = (lNumberOfWordsTemp2 + 1) * 16;
          var lWordArray = new Array(lNumberOfWords - 1);
          var lBytePosition = 0;
          var lByteCount = 0;

          while (lByteCount < lMessageLength) {
            lWordCount = (lByteCount - lByteCount % 4) / 4;
            lBytePosition = lByteCount % 4 * 8;
            lWordArray[lWordCount] = lWordArray[lWordCount] | string.charCodeAt(lByteCount) << lBytePosition;
            lByteCount++;
          }

          lWordCount = (lByteCount - lByteCount % 4) / 4;
          lBytePosition = lByteCount % 4 * 8;
          lWordArray[lWordCount] = lWordArray[lWordCount] | 0x80 << lBytePosition;
          lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
          lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
          return lWordArray;
        }

        function wordToHex(lValue) {
          var wordToHexValue = '',
              wordToHexValueTemp = '',
              lByte,
              lCount;

          for (lCount = 0; lCount <= 3; lCount++) {
            lByte = lValue >>> lCount * 8 & 255;
            wordToHexValueTemp = '0' + lByte.toString(16);
            wordToHexValue = wordToHexValue + wordToHexValueTemp.substr(wordToHexValueTemp.length - 2, 2);
          }

          return wordToHexValue;
        }

        function utf8Encode(string) {
          string = string.replace(/\r\n/g, '\n');
          var utftext = '';

          for (var n = 0; n < string.length; n++) {
            var c = string.charCodeAt(n);

            if (c < 128) {
              utftext += String.fromCharCode(c);
            } else if (c > 127 && c < 2048) {
              utftext += String.fromCharCode(c >> 6 | 192);
              utftext += String.fromCharCode(c & 63 | 128);
            } else {
              utftext += String.fromCharCode(c >> 12 | 224);
              utftext += String.fromCharCode(c >> 6 & 63 | 128);
              utftext += String.fromCharCode(c & 63 | 128);
            }
          }

          return utftext;
        }

        var x = [];
        var k, AA, BB, CC, DD, a, b, c, d;
        var S11 = 7,
            S12 = 12,
            S13 = 17,
            S14 = 22;
        var S21 = 5,
            S22 = 9,
            S23 = 14,
            S24 = 20;
        var S31 = 4,
            S32 = 11,
            S33 = 16,
            S34 = 23;
        var S41 = 6,
            S42 = 10,
            S43 = 15,
            S44 = 21;
        string = utf8Encode(string);
        x = convertToWordArray(string);
        a = 0x67452301;
        b = 0xEFCDAB89;
        c = 0x98BADCFE;
        d = 0x10325476;

        for (k = 0; k < x.length; k += 16) {
          AA = a;
          BB = b;
          CC = c;
          DD = d;
          a = gFF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
          d = gFF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
          c = gFF(c, d, a, b, x[k + 2], S13, 0x242070DB);
          b = gFF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
          a = gFF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
          d = gFF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
          c = gFF(c, d, a, b, x[k + 6], S13, 0xA8304613);
          b = gFF(b, c, d, a, x[k + 7], S14, 0xFD469501);
          a = gFF(a, b, c, d, x[k + 8], S11, 0x698098D8);
          d = gFF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
          c = gFF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
          b = gFF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
          a = gFF(a, b, c, d, x[k + 12], S11, 0x6B901122);
          d = gFF(d, a, b, c, x[k + 13], S12, 0xFD987193);
          c = gFF(c, d, a, b, x[k + 14], S13, 0xA679438E);
          b = gFF(b, c, d, a, x[k + 15], S14, 0x49B40821);
          a = gGG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
          d = gGG(d, a, b, c, x[k + 6], S22, 0xC040B340);
          c = gGG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
          b = gGG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
          a = gGG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
          d = gGG(d, a, b, c, x[k + 10], S22, 0x2441453);
          c = gGG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
          b = gGG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
          a = gGG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
          d = gGG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
          c = gGG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
          b = gGG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
          a = gGG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
          d = gGG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
          c = gGG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
          b = gGG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
          a = gHH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
          d = gHH(d, a, b, c, x[k + 8], S32, 0x8771F681);
          c = gHH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
          b = gHH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
          a = gHH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
          d = gHH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
          c = gHH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
          b = gHH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
          a = gHH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
          d = gHH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
          c = gHH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
          b = gHH(b, c, d, a, x[k + 6], S34, 0x4881D05);
          a = gHH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
          d = gHH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
          c = gHH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
          b = gHH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
          a = gII(a, b, c, d, x[k + 0], S41, 0xF4292244);
          d = gII(d, a, b, c, x[k + 7], S42, 0x432AFF97);
          c = gII(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
          b = gII(b, c, d, a, x[k + 5], S44, 0xFC93A039);
          a = gII(a, b, c, d, x[k + 12], S41, 0x655B59C3);
          d = gII(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
          c = gII(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
          b = gII(b, c, d, a, x[k + 1], S44, 0x85845DD1);
          a = gII(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
          d = gII(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
          c = gII(c, d, a, b, x[k + 6], S43, 0xA3014314);
          b = gII(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
          a = gII(a, b, c, d, x[k + 4], S41, 0xF7537E82);
          d = gII(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
          c = gII(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
          b = gII(b, c, d, a, x[k + 9], S44, 0xEB86D391);
          a = addUnsigned(a, AA);
          b = addUnsigned(b, BB);
          c = addUnsigned(c, CC);
          d = addUnsigned(d, DD);
        }

        var temp = wordToHex(a) + wordToHex(b) + wordToHex(c) + wordToHex(d);
        return temp.toLowerCase();
      }
    };
    this.Agent = {};

    this.getBrowser = function (string) {
      switch (true) {
        case this._Browsers.Edge.test(string):
          this.Agent.isEdge = true;
          return 'Edge';

        case this._Browsers.PhantomJS.test(string):
          this.Agent.isPhantomJS = true;
          return 'PhantomJS';

        case this._Browsers.Konqueror.test(string):
          this.Agent.isKonqueror = true;
          return 'Konqueror';

        case this._Browsers.Amaya.test(string):
          this.Agent.isAmaya = true;
          return 'Amaya';

        case this._Browsers.Epiphany.test(string):
          this.Agent.isEpiphany = true;
          return 'Epiphany';

        case this._Browsers.SeaMonkey.test(string):
          this.Agent.isSeaMonkey = true;
          return 'SeaMonkey';

        case this._Browsers.Flock.test(string):
          this.Agent.isFlock = true;
          return 'Flock';

        case this._Browsers.OmniWeb.test(string):
          this.Agent.isOmniWeb = true;
          return 'OmniWeb';

        case this._Browsers.Opera.test(string):
          this.Agent.isOpera = true;
          return 'Opera';

        case this._Browsers.Chromium.test(string):
          this.Agent.isChrome = true;
          return 'Chromium';

        case this._Browsers.Chrome.test(string):
          this.Agent.isChrome = true;
          return 'Chrome';

        case this._Browsers.Safari.test(string):
          this.Agent.isSafari = true;
          return 'Safari';

        case this._Browsers.WinJs.test(string):
          this.Agent.isWinJs = true;
          return 'WinJs';

        case this._Browsers.IE.test(string):
          this.Agent.isIE = true;
          return 'IE';

        case this._Browsers.PS3.test(string):
          return 'ps3';

        case this._Browsers.PSP.test(string):
          return 'psp';

        case this._Browsers.Firefox.test(string):
          this.Agent.isFirefox = true;
          return 'Firefox';

        case this._Browsers.UC.test(string):
          this.Agent.isUC = true;
          return 'UCBrowser';

        default:
          // If the UA does not start with Mozilla guess the user agent.
          if (string.indexOf('Mozilla') !== 0 && /^([\d\w\-\.]+)\/[\d\w\.\-]+/i.test(string)) {
            this.Agent.isAuthoritative = false;
            return RegExp.$1;
          }

          return 'unknown';
      }
    };

    this.getBrowserVersion = function (string) {
      var regex;

      switch (this.Agent.browser) {
        case 'Edge':
          if (this._Versions.Edge.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'PhantomJS':
          if (this._Versions.PhantomJS.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Chrome':
          if (this._Versions.Chrome.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Chromium':
          if (this._Versions.Chromium.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Safari':
          if (this._Versions.Safari.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Opera':
          if (this._Versions.Opera.test(string)) {
            return RegExp.$1 ? RegExp.$1 : RegExp.$2;
          }

          break;

        case 'Firefox':
          if (this._Versions.Firefox.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'WinJs':
          if (this._Versions.WinJs.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'IE':
          if (this._Versions.IE.test(string)) {
            return RegExp.$2 ? RegExp.$2 : RegExp.$1;
          }

          break;

        case 'ps3':
          if (this._Versions.Ps3.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'psp':
          if (this._Versions.Psp.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Amaya':
          if (this._Versions.Amaya.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Epiphany':
          if (this._Versions.Epiphany.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'SeaMonkey':
          if (this._Versions.SeaMonkey.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'Flock':
          if (this._Versions.Flock.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'OmniWeb':
          if (this._Versions.OmniWeb.test(string)) {
            return RegExp.$1;
          }

          break;

        case 'UCBrowser':
          if (this._Versions.UC.test(string)) {
            return RegExp.$1;
          }

          break;

        default:
          if (this.Agent.browser !== 'unknown') {
            regex = new RegExp(this.Agent.browser + '[\\/ ]([\\d\\w\\.\\-]+)', 'i');

            if (regex.test(string)) {
              return RegExp.$1;
            }
          }

      }
    };

    this.getOS = function (string) {
      switch (true) {
        case this._OS.WindowsVista.test(string):
          this.Agent.isWindows = true;
          return 'Windows Vista';

        case this._OS.Windows7.test(string):
          this.Agent.isWindows = true;
          return 'Windows 7';

        case this._OS.Windows8.test(string):
          this.Agent.isWindows = true;
          return 'Windows 8';

        case this._OS.Windows81.test(string):
          this.Agent.isWindows = true;
          return 'Windows 8.1';

        case this._OS.Windows10.test(string):
          this.Agent.isWindows = true;
          return 'Windows 10.0';

        case this._OS.Windows2003.test(string):
          this.Agent.isWindows = true;
          return 'Windows 2003';

        case this._OS.WindowsXP.test(string):
          this.Agent.isWindows = true;
          return 'Windows XP';

        case this._OS.Windows2000.test(string):
          this.Agent.isWindows = true;
          return 'Windows 2000';

        case this._OS.WindowsPhone8.test(string):
          return 'Windows Phone 8';

        case this._OS.Linux64.test(string):
          this.Agent.isLinux = true;
          this.Agent.isLinux64 = true;
          return 'Linux 64';

        case this._OS.Linux.test(string):
          this.Agent.isLinux = true;
          return 'Linux';

        case this._OS.ChromeOS.test(string):
          this.Agent.isChromeOS = true;
          return 'Chrome OS';

        case this._OS.Wii.test(string):
          return 'Wii';

        case this._OS.PS3.test(string):
          return 'Playstation';

        case this._OS.PSP.test(string):
          return 'Playstation';

        case this._OS.OSXCheetah.test(string):
          this.Agent.isMac = true;
          return 'OS X Cheetah';

        case this._OS.OSXPuma.test(string):
          this.Agent.isMac = true;
          return 'OS X Puma';

        case this._OS.OSXJaguar.test(string):
          this.Agent.isMac = true;
          return 'OS X Jaguar';

        case this._OS.OSXPanther.test(string):
          this.Agent.isMac = true;
          return 'OS X Panther';

        case this._OS.OSXTiger.test(string):
          this.Agent.isMac = true;
          return 'OS X Tiger';

        case this._OS.OSXLeopard.test(string):
          this.Agent.isMac = true;
          return 'OS X Leopard';

        case this._OS.OSXSnowLeopard.test(string):
          this.Agent.isMac = true;
          return 'OS X Snow Leopard';

        case this._OS.OSXLion.test(string):
          this.Agent.isMac = true;
          return 'OS X Lion';

        case this._OS.OSXMountainLion.test(string):
          this.Agent.isMac = true;
          return 'OS X Mountain Lion';

        case this._OS.OSXMavericks.test(string):
          this.Agent.isMac = true;
          return 'OS X Mavericks';

        case this._OS.OSXYosemite.test(string):
          this.Agent.isMac = true;
          return 'OS X Yosemite';

        case this._OS.OSXElCapitan.test(string):
          this.Agent.isMac = true;
          return 'OS X El Capitan';

        case this._OS.OSXSierra.test(string):
          this.Agent.isMac = true;
          return 'macOS Sierra';

        case this._OS.Mac.test(string):
          this.Agent.isMac = true;
          return 'OS X';

        case this._OS.iPad.test(string):
          this.Agent.isiPad = true;
          return string.match(this._OS.iPad)[0].replace('_', '.');

        case this._OS.iPhone.test(string):
          this.Agent.isiPhone = true;
          return string.match(this._OS.iPhone)[0].replace('_', '.');

        case this._OS.Bada.test(string):
          this.Agent.isBada = true;
          return 'Bada';

        case this._OS.Curl.test(string):
          this.Agent.isCurl = true;
          return 'Curl';

        default:
          return 'unknown';
      }
    };

    this.getPlatform = function (string) {
      switch (true) {
        case this._Platform.Windows.test(string):
          return 'Microsoft Windows';

        case this._Platform.WindowsPhone.test(string):
          this.Agent.isWindowsPhone = true;
          return 'Microsoft Windows Phone';

        case this._Platform.Mac.test(string):
          return 'Apple Mac';

        case this._Platform.Curl.test(string):
          return 'Curl';

        case this._Platform.Android.test(string):
          this.Agent.isAndroid = true;
          return 'Android';

        case this._Platform.Blackberry.test(string):
          this.Agent.isBlackberry = true;
          return 'Blackberry';

        case this._Platform.Linux.test(string):
          return 'Linux';

        case this._Platform.Wii.test(string):
          return 'Wii';

        case this._Platform.Playstation.test(string):
          return 'Playstation';

        case this._Platform.iPad.test(string):
          this.Agent.isiPad = true;
          return 'iPad';

        case this._Platform.iPod.test(string):
          this.Agent.isiPod = true;
          return 'iPod';

        case this._Platform.iPhone.test(string):
          this.Agent.isiPhone = true;
          return 'iPhone';

        case this._Platform.Samsung.test(string):
          this.Agent.isiSamsung = true;
          return 'Samsung';

        default:
          return 'unknown';
      }
    };

    this.testCompatibilityMode = function () {
      var ua = this;

      if (this.Agent.isIE) {
        if (/Trident\/(\d)\.0/i.test(ua.Agent.source)) {
          var tridentVersion = parseInt(RegExp.$1, 10);
          var version = parseInt(ua.Agent.version, 10);

          if (version === 7 && tridentVersion === 7) {
            ua.Agent.isIECompatibilityMode = true;
            ua.Agent.version = 11.0;
          }

          if (version === 7 && tridentVersion === 6) {
            ua.Agent.isIECompatibilityMode = true;
            ua.Agent.version = 10.0;
          }

          if (version === 7 && tridentVersion === 5) {
            ua.Agent.isIECompatibilityMode = true;
            ua.Agent.version = 9.0;
          }

          if (version === 7 && tridentVersion === 4) {
            ua.Agent.isIECompatibilityMode = true;
            ua.Agent.version = 8.0;
          }
        }
      }
    };

    this.testSilk = function () {
      var ua = this;

      switch (true) {
        case new RegExp('silk', 'gi').test(ua.Agent.source):
          this.Agent.isSilk = true;
          break;

        default:
      }

      if (/Silk-Accelerated=true/gi.test(ua.Agent.source)) {
        this.Agent.SilkAccelerated = true;
      }

      return this.Agent.isSilk ? 'Silk' : false;
    };

    this.testKindleFire = function () {
      var ua = this;

      switch (true) {
        case /KFOT/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire';

        case /KFTT/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HD';

        case /KFJWI/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HD 8.9';

        case /KFJWA/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HD 8.9 4G';

        case /KFSOWI/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HD 7';

        case /KFTHWI/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HDX 7';

        case /KFTHWA/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HDX 7 4G';

        case /KFAPWI/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HDX 8.9';

        case /KFAPWA/gi.test(ua.Agent.source):
          this.Agent.isKindleFire = true;
          return 'Kindle Fire HDX 8.9 4G';

        default:
          return false;
      }
    };

    this.testCaptiveNetwork = function () {
      var ua = this;

      switch (true) {
        case /CaptiveNetwork/gi.test(ua.Agent.source):
          ua.Agent.isCaptive = true;
          ua.Agent.isMac = true;
          ua.Agent.platform = 'Apple Mac';
          return 'CaptiveNetwork';

        default:
          return false;
      }
    };

    this.testMobile = function testMobile() {
      var ua = this;

      switch (true) {
        case ua.Agent.isWindows:
        case ua.Agent.isLinux:
        case ua.Agent.isMac:
        case ua.Agent.isChromeOS:
          ua.Agent.isDesktop = true;
          break;

        case ua.Agent.isAndroid:
        case ua.Agent.isSamsung:
          ua.Agent.isMobile = true;
          ua.Agent.isDesktop = false;
          break;

        default:
      }

      switch (true) {
        case ua.Agent.isiPad:
        case ua.Agent.isiPod:
        case ua.Agent.isiPhone:
        case ua.Agent.isBada:
        case ua.Agent.isBlackberry:
        case ua.Agent.isAndroid:
        case ua.Agent.isWindowsPhone:
          ua.Agent.isMobile = true;
          ua.Agent.isDesktop = false;
          break;

        default:
      }

      if (/mobile/i.test(ua.Agent.source)) {
        ua.Agent.isMobile = true;
        ua.Agent.isDesktop = false;
      }
    };

    this.testTablet = function testTablet() {
      var ua = this;

      switch (true) {
        case ua.Agent.isiPad:
        case ua.Agent.isAndroidTablet:
        case ua.Agent.isKindleFire:
          ua.Agent.isTablet = true;
          break;
      }

      if (/tablet/i.test(ua.Agent.source)) {
        ua.Agent.isTablet = true;
      }
    };

    this.testNginxGeoIP = function testNginxGeoIP(headers) {
      var ua = this;
      Object.keys(headers).forEach(function (key) {
        if (/^GEOIP/i.test(key)) {
          ua.Agent.geoIp[key] = headers[key];
        }
      });
    };

    this.testBot = function testBot() {
      var ua = this;
      var isBot = IS_BOT_REGEXP.exec(ua.Agent.source.toLowerCase());

      if (isBot) {
        ua.Agent.isBot = isBot[1];
      } else if (!ua.Agent.isAuthoritative) {
        // Test unauthoritative parse for `bot` in UA to flag for bot
        ua.Agent.isBot = /bot/i.test(ua.Agent.source);
      }
    };

    this.testSmartTV = function testBot() {
      var ua = this;
      var isSmartTV = new RegExp('smart-tv|smarttv|googletv|appletv|hbbtv|pov_tv|netcast.tv', 'gi').exec(ua.Agent.source.toLowerCase());

      if (isSmartTV) {
        ua.Agent.isSmartTV = isSmartTV[1];
      }
    };

    this.testAndroidTablet = function testAndroidTablet() {
      var ua = this;

      if (ua.Agent.isAndroid && !/mobile/i.test(ua.Agent.source)) {
        ua.Agent.isAndroidTablet = true;
      }
    };

    this.testTouchSupport = function () {
      var ua = this;
      ua.Agent.isTouchScreen = 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0;
    };

    this.getLaguage = function () {
      var ua = this;
      ua.Agent.language = (navigator.language || navigator.userLanguage || navigator.browserLanguage || navigator.systemLanguage || '').toLowerCase();
    };

    this.getColorDepth = function () {
      var ua = this;
      ua.Agent.colorDepth = screen.colorDepth || -1;
    };

    this.getScreenResolution = function () {
      var ua = this;
      ua.Agent.resolution = [screen.availWidth, screen.availHeight];
    };

    this.getPixelDepth = function () {
      var ua = this;
      ua.Agent.pixelDepth = screen.pixelDepth || -1;
    };

    this.getCPU = function () {
      var ua = this;
      ua.Agent.cpuCores = navigator.hardwareConcurrency || -1;
    };

    this.reset = function reset() {
      var ua = this;

      for (var key in ua.DefaultAgent) {
        if (ua.DefaultAgent.hasOwnProperty(key)) {
          ua.Agent[key] = ua.DefaultAgent[key];
        }
      }

      return ua;
    };

    this.parse = function get(source) {
      source = source || navigator.userAgent;
      var ua = new DeviceUUID();
      ua.Agent.source = source.replace(/^\s*/, '').replace(/\s*$/, '');
      ua.Agent.os = ua.getOS(ua.Agent.source);
      ua.Agent.platform = ua.getPlatform(ua.Agent.source);
      ua.Agent.browser = ua.getBrowser(ua.Agent.source);
      ua.Agent.version = ua.getBrowserVersion(ua.Agent.source);
      ua.testBot();
      ua.testSmartTV();
      ua.testMobile();
      ua.testAndroidTablet();
      ua.testTablet();
      ua.testCompatibilityMode();
      ua.testSilk();
      ua.testKindleFire();
      ua.testCaptiveNetwork();
      ua.testTouchSupport();
      ua.getLaguage();
      ua.getColorDepth();
      ua.getPixelDepth();
      ua.getScreenResolution();
      ua.getCPU();
      return ua.Agent;
    };

    this.get = function (customData) {
      var pref = 'a',
          du = this.parse();
      var dua = [];

      for (var key in this.options) {
        if (this.options.hasOwnProperty(key) && this.options[key] === true) {
          dua.push(du[key]);
        }
      }

      if (customData) {
        dua.push(customData);
      }

      if (!this.options.resolution && du.isMobile) {
        dua.push(du.resolution);
      } // 8, 9, a, b


      pref = 'b';
      var tmpUuid = du.hashMD5(dua.join(':'));
      var uuid = [tmpUuid.slice(0, 8), tmpUuid.slice(8, 12), '4' + tmpUuid.slice(12, 15), pref + tmpUuid.slice(15, 18), tmpUuid.slice(20)];
      return uuid.join('-');
    };

    this.Agent = this.DefaultAgent;
    return this;
  };

  exports.DeviceUUID = DeviceUUID;
  return new DeviceUUID(navigator.userAgent);
})(this);

/***/ }),

/***/ 26348:
/*!*********************************************!*\
  !*** ./node_modules/dijkstrajs/dijkstra.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";

/******************************************************************************
 * Created 2008-08-19.
 *
 * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.
 *
 * Copyright (C) 2008
 *   Wyatt Baldwin <self@wyattbaldwin.com>
 *   All rights reserved
 *
 * Licensed under the MIT license.
 *
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *****************************************************************************/

var dijkstra = {
  single_source_shortest_paths: function (graph, s, d) {
    // Predecessor map for each node that has been encountered.
    // node ID => predecessor node ID
    var predecessors = {}; // Costs of shortest paths from s to all nodes encountered.
    // node ID => cost

    var costs = {};
    costs[s] = 0; // Costs of shortest paths from s to all nodes encountered; differs from
    // `costs` in that it provides easy access to the node that currently has
    // the known shortest path from s.
    // XXX: Do we actually need both `costs` and `open`?

    var open = dijkstra.PriorityQueue.make();
    open.push(s, 0);
    var closest, u, v, cost_of_s_to_u, adjacent_nodes, cost_of_e, cost_of_s_to_u_plus_cost_of_e, cost_of_s_to_v, first_visit;

    while (!open.empty()) {
      // In the nodes remaining in graph that have a known cost from s,
      // find the node, u, that currently has the shortest path from s.
      closest = open.pop();
      u = closest.value;
      cost_of_s_to_u = closest.cost; // Get nodes adjacent to u...

      adjacent_nodes = graph[u] || {}; // ...and explore the edges that connect u to those nodes, updating
      // the cost of the shortest paths to any or all of those nodes as
      // necessary. v is the node across the current edge from u.

      for (v in adjacent_nodes) {
        if (adjacent_nodes.hasOwnProperty(v)) {
          // Get the cost of the edge running from u to v.
          cost_of_e = adjacent_nodes[v]; // Cost of s to u plus the cost of u to v across e--this is *a*
          // cost from s to v that may or may not be less than the current
          // known cost to v.

          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e; // If we haven't visited v yet OR if the current known cost from s to
          // v is greater than the new cost we just found (cost of s to u plus
          // cost of u to v across e), update v's cost in the cost list and
          // update v's predecessor in the predecessor list (it's now u).

          cost_of_s_to_v = costs[v];
          first_visit = typeof costs[v] === 'undefined';

          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {
            costs[v] = cost_of_s_to_u_plus_cost_of_e;
            open.push(v, cost_of_s_to_u_plus_cost_of_e);
            predecessors[v] = u;
          }
        }
      }
    }

    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {
      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');
      throw new Error(msg);
    }

    return predecessors;
  },
  extract_shortest_path_from_predecessor_list: function (predecessors, d) {
    var nodes = [];
    var u = d;
    var predecessor;

    while (u) {
      nodes.push(u);
      predecessor = predecessors[u];
      u = predecessors[u];
    }

    nodes.reverse();
    return nodes;
  },
  find_path: function (graph, s, d) {
    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);
    return dijkstra.extract_shortest_path_from_predecessor_list(predecessors, d);
  },

  /**
   * A very naive priority queue implementation.
   */
  PriorityQueue: {
    make: function (opts) {
      var T = dijkstra.PriorityQueue,
          t = {},
          key;
      opts = opts || {};

      for (key in T) {
        if (T.hasOwnProperty(key)) {
          t[key] = T[key];
        }
      }

      t.queue = [];
      t.sorter = opts.sorter || T.default_sorter;
      return t;
    },
    default_sorter: function (a, b) {
      return a.cost - b.cost;
    },

    /**
     * Add a new item to the queue and ensure the highest priority element
     * is at the front of the queue.
     */
    push: function (value, cost) {
      var item = {
        value: value,
        cost: cost
      };
      this.queue.push(item);
      this.queue.sort(this.sorter);
    },

    /**
     * Return the highest priority element in the queue.
     */
    pop: function () {
      return this.queue.shift();
    },
    empty: function () {
      return this.queue.length === 0;
    }
  }
}; // node.js module exports

if (true) {
  module.exports = dijkstra;
}

/***/ }),

/***/ 76236:
/*!*******************************************!*\
  !*** ./node_modules/encode-utf8/index.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";


module.exports = function encodeUtf8(input) {
  var result = [];
  var size = input.length;

  for (var index = 0; index < size; index++) {
    var point = input.charCodeAt(index);

    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {
      var second = input.charCodeAt(index + 1);

      if (second >= 0xDC00 && second <= 0xDFFF) {
        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;
        index += 1;
      }
    } // US-ASCII


    if (point < 0x80) {
      result.push(point);
      continue;
    } // 2-byte UTF-8


    if (point < 0x800) {
      result.push(point >> 6 | 192);
      result.push(point & 63 | 128);
      continue;
    } // 3-byte UTF-8


    if (point < 0xD800 || point >= 0xE000 && point < 0x10000) {
      result.push(point >> 12 | 224);
      result.push(point >> 6 & 63 | 128);
      result.push(point & 63 | 128);
      continue;
    } // 4-byte UTF-8


    if (point >= 0x10000 && point <= 0x10FFFF) {
      result.push(point >> 18 | 240);
      result.push(point >> 12 & 63 | 128);
      result.push(point >> 6 & 63 | 128);
      result.push(point & 63 | 128);
      continue;
    } // Invalid character


    result.push(0xEF, 0xBF, 0xBD);
  }

  return new Uint8Array(result).buffer;
};

/***/ }),

/***/ 23875:
/*!*********************************************************************!*\
  !*** ./node_modules/ngx-lottie/__ivy_ngcc__/fesm2015/ngx-lottie.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AnimationLoader": () => (/* binding */ AnimationLoader),
/* harmony export */   "BaseDirective": () => (/* binding */ BaseDirective),
/* harmony export */   "LottieCacheModule": () => (/* binding */ LottieCacheModule),
/* harmony export */   "LottieComponent": () => (/* binding */ LottieComponent),
/* harmony export */   "LottieDirective": () => (/* binding */ LottieDirective),
/* harmony export */   "LottieModule": () => (/* binding */ LottieModule),
/* harmony export */   "LottieTransferState": () => (/* binding */ LottieTransferState),
/* harmony export */   "transformAnimationFilenameToKey": () => (/* binding */ transformAnimationFilenameToKey),
/* harmony export */   "ɵb": () => (/* binding */ LOTTIE_OPTIONS),
/* harmony export */   "ɵc": () => (/* binding */ CacheableAnimationLoader)
/* harmony export */ });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 36362);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ 59346);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ 10745);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 58184);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 80228);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ 76317);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ 21954);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ 90833);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ 50635);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ 68917);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ 56074);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ 8728);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ 60116);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs/operators */ 32673);
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ 68951);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/platform-browser */ 50318);










const _c0 = ["container"];
const LOTTIE_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('LottieOptions');

function convertPlayerOrLoaderToObservable(player) {
  const playerOrLoader = player();

  if (playerOrLoader instanceof Promise) {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_1__.from)(playerOrLoader).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(module => module.default || module), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.publishReplay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.refCount)());
  } else {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_5__.of)(playerOrLoader);
  }
}

class AnimationLoader {
  constructor(ngZone, options) {
    this.ngZone = ngZone;
    this.options = options;
    this.player$ = convertPlayerOrLoaderToObservable(this.options.player).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.observeOn)(rxjs__WEBPACK_IMPORTED_MODULE_7__.animationFrameScheduler));
  }

  loadAnimation(options) {
    return this.player$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(player => this.createAnimationItem(player, options)));
  }

  resolveOptions(options, container) {
    return Object.assign({
      container,
      renderer: 'svg',
      loop: true,
      autoplay: true
    }, options);
  }

  createAnimationItem(player, options) {
    return this.ngZone.runOutsideAngular(() => player.loadAnimation(options));
  }

}

AnimationLoader.ɵfac = function AnimationLoader_Factory(t) {
  return new (t || AnimationLoader)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](LOTTIE_OPTIONS));
};

AnimationLoader.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: AnimationLoader,
  factory: AnimationLoader.ɵfac
});
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */

AnimationLoader.ctorParameters = () => [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
}, {
  type: undefined,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
    args: [LOTTIE_OPTIONS]
  }]
}];

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](AnimationLoader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [LOTTIE_OPTIONS]
      }]
    }];
  }, null);
})();

class BaseDirective {
  constructor(ngZone, platformId, animationLoader) {
    this.ngZone = ngZone;
    this.platformId = platformId;
    this.animationLoader = animationLoader;
    this.options = null;
    this.containerClass = null;
    this.styles = null;
    /**
     * `animationCreated` is dispatched after calling `loadAnimation`.
     */

    this.animationCreated = this.getAnimationItem();
    /**
     * `complete` is dispatched after completing the last frame.
     */

    this.complete = this.awaitAnimationItemAndStartListening('complete');
    /**
     * `loopComplete` is dispatched after completing the frame loop.
     */

    this.loopComplete = this.awaitAnimationItemAndStartListening('loopComplete');
    /**
     * `enterFrame` is dispatched after entering the new frame.
     */

    this.enterFrame = this.awaitAnimationItemAndStartListening('enterFrame');
    /**
     * `segmentStart` is dispatched when the new segment is adjusted.
     */

    this.segmentStart = this.awaitAnimationItemAndStartListening('segmentStart');
    /**
     * Original event name is `config_ready`. `config_ready` is dispatched
     * after the needed renderer is configured.
     */

    this.configReady = this.awaitAnimationItemAndStartListening('config_ready');
    /**
     * Original event name is `data_ready`. `data_ready` is dispatched
     * when all parts of the animation have been loaded.
     */

    this.dataReady = this.awaitAnimationItemAndStartListening('data_ready');
    /**
     * Original event name is `DOMLoaded`. `DOMLoaded` is dispatched
     * when elements have been added to the DOM.
     */

    this.domLoaded = this.awaitAnimationItemAndStartListening('DOMLoaded');
    /**
     * `destroy` will be dispatched when the component gets destroyed,
     * it's handy for releasing resources.
     */

    this.destroy = this.awaitAnimationItemAndStartListening('destroy');
    /**
     * `error` will be dispatched if the Lottie player could not render
     * some frame or parse config.
     */

    this.error = this.awaitAnimationItemAndStartListening('error');
    this.destroy$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
    this.loadAnimation$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
    this.animationItem$ = new rxjs__WEBPACK_IMPORTED_MODULE_9__.BehaviorSubject(null);
    this.setupLoadAnimationListener();
  }

  ngOnDestroy() {
    this.destroy$.next();
    this.destroyAnimation();
  }

  loadAnimation(changes, container) {
    this.loadAnimation$.next([changes, container]);
  }

  getAnimationItem() {
    return (0,rxjs__WEBPACK_IMPORTED_MODULE_10__.defer)(() => this.animationItem$).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.filter)(animationItem => animationItem !== null));
  }

  awaitAnimationItemAndStartListening(name) {
    return this.getAnimationItem().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)(animationItem => // `fromEvent` will try to call `removeEventListener` when `unsubscribe()` is invoked.
    // The problem is that `ngOnDestroy()` is called before Angular unsubscribes from
    // `@Output()` properties, thus `animationItem` will be `null` already, also `lottie-web`
    // removes event listeners when calling `destroy()`.
    new rxjs__WEBPACK_IMPORTED_MODULE_13__.Observable(observer => {
      animationItem.addEventListener(name, event => {
        this.ngZone.runOutsideAngular(() => {
          observer.next(event);
        });
      });
    })));
  }

  setupLoadAnimationListener() {
    this.loadAnimation$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_11__.filter)(([changes]) => (0,_angular_common__WEBPACK_IMPORTED_MODULE_14__.isPlatformBrowser)(this.platformId) && changes.options !== undefined), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_12__.switchMap)(([changes, container]) => {
      this.destroyAnimation();
      return this.animationLoader.loadAnimation(this.animationLoader.resolveOptions(changes.options.currentValue, container));
    }), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_15__.takeUntil)(this.destroy$)).subscribe(animationItem => {
      this.animationItem$.next(animationItem);
    });
  }

  destroyAnimation() {
    const animationItem = this.animationItem$.getValue(); // The `ng-lottie` component or the `lottie` directive can be destroyed
    // before the `animationItem` is set, thus it will fail with
    // `Cannot read property 'destroy' of null`.
    // Potentially it can happen if the directive gets destroyed before change
    // detection is run.

    if (animationItem === null) {
      return;
    } // `destroy()` will remove all events listeners.


    animationItem.destroy();
    this.animationItem$.next(null);
  }

}

BaseDirective.ɵfac = function BaseDirective_Factory(t) {
  return new (t || BaseDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};

BaseDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: BaseDirective,
  selectors: [["", "lottie", ""]],
  inputs: {
    options: "options",
    containerClass: "containerClass",
    styles: "styles"
  },
  outputs: {
    animationCreated: "animationCreated",
    complete: "complete",
    loopComplete: "loopComplete",
    enterFrame: "enterFrame",
    segmentStart: "segmentStart",
    configReady: "configReady",
    dataReady: "dataReady",
    domLoaded: "domLoaded",
    destroy: "destroy",
    error: "error"
  }
});
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */

BaseDirective.ctorParameters = () => [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
}, {
  type: String,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
    args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
  }]
}, {
  type: AnimationLoader
}];
/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */


BaseDirective.propDecorators = {
  options: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
  }],
  containerClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
  }],
  styles: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
  }],
  animationCreated: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  complete: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  loopComplete: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  enterFrame: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  segmentStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  configReady: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  dataReady: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  domLoaded: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  destroy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }],
  error: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](BaseDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lottie]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: AnimationLoader
    }];
  }, {
    options: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    containerClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    styles: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    animationCreated: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    complete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    loopComplete: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    enterFrame: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    segmentStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    configReady: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    dataReady: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    domLoaded: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    destroy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    error: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();

class LottieDirective extends BaseDirective {
  constructor(ngZone, platformId, host, animationLoader) {
    super(ngZone, platformId, animationLoader);
    this.host = host;
  }

  ngOnChanges(changes) {
    super.loadAnimation(changes, this.host.nativeElement);
  }

}

LottieDirective.ɵfac = function LottieDirective_Factory(t) {
  return new (t || LottieDirective)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef, 2), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};

LottieDirective.ɵdir = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: LottieDirective,
  selectors: [["", "lottie", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]]
});
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */

LottieDirective.ctorParameters = () => [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
}, {
  type: String,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
    args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
  }]
}, {
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Self
  }]
}, {
  type: AnimationLoader
}];

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieDirective, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: '[lottie]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Self
      }]
    }, {
      type: AnimationLoader
    }];
  }, null);
})();

class LottieComponent extends BaseDirective {
  constructor(ngZone, platformId, animationLoader) {
    super(ngZone, platformId, animationLoader);
    this.width = null;
    this.height = null;
    this.container = null;
  }

  ngOnChanges(changes) {
    super.loadAnimation(changes, this.container.nativeElement);
  }

}

LottieComponent.ɵfac = function LottieComponent_Factory(t) {
  return new (t || LottieComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](AnimationLoader));
};

LottieComponent.ɵcmp = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: LottieComponent,
  selectors: [["ng-lottie"]],
  viewQuery: function LottieComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx.container = _t.first);
    }
  },
  inputs: {
    width: "width",
    height: "height"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 6,
  consts: [[3, "ngStyle", "ngClass"], ["container", ""]],
  template: function LottieComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](0, "div", 0, 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵstyleProp"]("width", ctx.width || "100%")("height", ctx.height || "100%");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("ngStyle", ctx.styles)("ngClass", ctx.containerClass);
    }
  },
  dependencies: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgStyle],
  encapsulation: 2,
  changeDetection: 0
});
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */

LottieComponent.ctorParameters = () => [{
  type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
}, {
  type: String,
  decorators: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
    args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
  }]
}, {
  type: AnimationLoader
}];
/** @type {!Object<string, !Array<{type: !Function, args: (undefined|!Array<?>)}>>} */


LottieComponent.propDecorators = {
  width: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
  }],
  height: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
  }],
  container: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
    args: ['container', {
      static: true
    }]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'ng-lottie',
      template: `
    <div
      #container
      [style.width]="width || '100%'"
      [style.height]="height || '100%'"
      [ngStyle]="styles"
      [ngClass]="containerClass"
    ></div>
  `,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgZone
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.PLATFORM_ID]
      }]
    }, {
      type: AnimationLoader
    }];
  }, {
    width: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    height: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    container: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['container', {
        static: true
      }]
    }]
  });
})();

class LottieModule {
  static forRoot(options) {
    return {
      ngModule: LottieModule,
      providers: [AnimationLoader, {
        provide: LOTTIE_OPTIONS,
        useValue: options
      }]
    };
  }

}

LottieModule.ɵfac = function LottieModule_Factory(t) {
  return new (t || LottieModule)();
};

LottieModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: LottieModule
});
LottieModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule],
      declarations: [BaseDirective, LottieDirective, LottieComponent],
      exports: [BaseDirective, LottieDirective, LottieComponent]
    }]
  }], null, null);
})();

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](LottieModule, {
    declarations: function () {
      return [BaseDirective, LottieDirective, LottieComponent];
    },
    imports: function () {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_14__.CommonModule];
    },
    exports: function () {
      return [BaseDirective, LottieDirective, LottieComponent];
    }
  });
})();

class CacheableAnimationLoader extends AnimationLoader {
  constructor() {
    super(...arguments);
    this.cache = new Map();
  }

  ngOnDestroy() {
    this.cache.clear();
  }

  loadAnimation(options) {
    return this.player$.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.map)(player => {
      const animationItem = this.createAnimationItem(player, this.transformOptions(options));
      this.awaitConfigAndCache(options, animationItem);
      return animationItem;
    }));
  }

  awaitConfigAndCache(options, animationItem) {
    if (this.isAnimationConfigWithPath(options)) {
      // Don't wait for the `config_ready` event if it has been cached previously.
      if (this.cache.has(options.path)) {
        return;
      }

      animationItem.addEventListener('config_ready', () => {
        // See the comments below on why we're storing the animation data as a string.
        this.cache.set(options.path, JSON.stringify(animationItem['animationData']));
      });
    }
  }

  transformOptions(options) {
    if (this.isAnimationConfigWithPath(options) && this.cache.has(options.path)) {
      return Object.assign(Object.assign({}, options), {
        path: undefined,
        // Caretaker note: `lottie-web` cannot re-use the `animationData` object between animations, and we
        // have to retrieve a new object each time an animation is created.
        // https://github.com/airbnb/lottie-web#html
        // See comments for the `animationData` property.
        animationData: JSON.parse(this.cache.get(options.path))
      });
    } else {
      return options;
    }
  }

  isAnimationConfigWithPath(options) {
    return typeof options.path === 'string';
  }

}

CacheableAnimationLoader.ɵfac = /*@__PURE__*/function () {
  let ɵCacheableAnimationLoader_BaseFactory;
  return function CacheableAnimationLoader_Factory(t) {
    return (ɵCacheableAnimationLoader_BaseFactory || (ɵCacheableAnimationLoader_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](CacheableAnimationLoader)))(t || CacheableAnimationLoader);
  };
}();

CacheableAnimationLoader.ɵprov = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  token: CacheableAnimationLoader,
  factory: CacheableAnimationLoader.ɵfac
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](CacheableAnimationLoader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable
  }], null, null);
})();

class LottieCacheModule {
  static forRoot() {
    return {
      ngModule: LottieCacheModule,
      providers: [{
        provide: AnimationLoader,
        useClass: CacheableAnimationLoader
      }]
    };
  }

}

LottieCacheModule.ɵfac = function LottieCacheModule_Factory(t) {
  return new (t || LottieCacheModule)();
};

LottieCacheModule.ɵmod = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: LottieCacheModule
});
LottieCacheModule.ɵinj = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieCacheModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule
  }], null, null);
})();

function transformAnimationFilenameToKey(animation) {
  const [animationName] = animation.split('.json');
  return `animation-${animationName}`;
}

class LottieTransferState {
  constructor(transferState) {
    this.transferState = transferState;
  }

  get(animation) {
    const animationKey = transformAnimationFilenameToKey(animation);
    const stateKey = (0,_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.makeStateKey)(animationKey);
    return this.transferState.get(stateKey, null);
  }

}

LottieTransferState.ɵfac = function LottieTransferState_Factory(t) {
  return new (t || LottieTransferState)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState));
};
/** @nocollapse */


LottieTransferState.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjectable"]({
  factory: function LottieTransferState_Factory() {
    return new LottieTransferState(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState));
  },
  token: LottieTransferState,
  providedIn: "root"
});
/**
 * @type {function(): !Array<(null|{
 *   type: ?,
 *   decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>),
 * })>}
 * @nocollapse
 */

LottieTransferState.ctorParameters = () => [{
  type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState
}];

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](LottieTransferState, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Injectable,
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_16__.TransferState
    }];
  }, null);
})();
/**
 * The public api for consumers of ngx-lottie
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 56757:
/*!****************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/observable/fromSubscribable.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "fromSubscribable": () => (/* binding */ fromSubscribable)
/* harmony export */ });
/* harmony import */ var _Observable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Observable */ 90833);

function fromSubscribable(subscribable) {
  return new _Observable__WEBPACK_IMPORTED_MODULE_0__.Observable(subscriber => subscribable.subscribe(subscriber));
}

/***/ }),

/***/ 62101:
/*!******************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/connect.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "connect": () => (/* binding */ connect)
/* harmony export */ });
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Subject */ 80228);
/* harmony import */ var _observable_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/from */ 59346);
/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/lift */ 41944);
/* harmony import */ var _observable_fromSubscribable__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../observable/fromSubscribable */ 56757);




const DEFAULT_CONFIG = {
  connector: () => new _Subject__WEBPACK_IMPORTED_MODULE_0__.Subject()
};
function connect(selector, config = DEFAULT_CONFIG) {
  const {
    connector
  } = config;
  return (0,_util_lift__WEBPACK_IMPORTED_MODULE_1__.operate)((source, subscriber) => {
    const subject = connector();
    (0,_observable_from__WEBPACK_IMPORTED_MODULE_2__.from)(selector((0,_observable_fromSubscribable__WEBPACK_IMPORTED_MODULE_3__.fromSubscribable)(subject))).subscribe(subscriber);
    subscriber.add(source.subscribe(subject));
  });
}

/***/ }),

/***/ 98532:
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/multicast.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "multicast": () => (/* binding */ multicast)
/* harmony export */ });
/* harmony import */ var _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../observable/ConnectableObservable */ 23932);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isFunction */ 92971);
/* harmony import */ var _connect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./connect */ 62101);



function multicast(subjectOrSubjectFactory, selector) {
  const subjectFactory = (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(subjectOrSubjectFactory) ? subjectOrSubjectFactory : () => subjectOrSubjectFactory;

  if ((0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selector)) {
    return (0,_connect__WEBPACK_IMPORTED_MODULE_1__.connect)(selector, {
      connector: subjectFactory
    });
  }

  return source => new _observable_ConnectableObservable__WEBPACK_IMPORTED_MODULE_2__.ConnectableObservable(source, subjectFactory);
}

/***/ }),

/***/ 68917:
/*!************************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm/internal/operators/publishReplay.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "publishReplay": () => (/* binding */ publishReplay)
/* harmony export */ });
/* harmony import */ var _ReplaySubject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ReplaySubject */ 26067);
/* harmony import */ var _multicast__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multicast */ 98532);
/* harmony import */ var _util_isFunction__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/isFunction */ 92971);



function publishReplay(bufferSize, windowTime, selectorOrScheduler, timestampProvider) {
  if (selectorOrScheduler && !(0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selectorOrScheduler)) {
    timestampProvider = selectorOrScheduler;
  }

  const selector = (0,_util_isFunction__WEBPACK_IMPORTED_MODULE_0__.isFunction)(selectorOrScheduler) ? selectorOrScheduler : undefined;
  return source => (0,_multicast__WEBPACK_IMPORTED_MODULE_1__.multicast)(new _ReplaySubject__WEBPACK_IMPORTED_MODULE_2__.ReplaySubject(bufferSize, windowTime, timestampProvider), selector)(source);
}

/***/ }),

/***/ 6623:
/*!******************************************************************!*\
  !*** ./node_modules/@angular/material/fesm2015/slide-toggle.mjs ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS": () => (/* binding */ MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS),
/* harmony export */   "MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR": () => (/* binding */ MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR),
/* harmony export */   "MAT_SLIDE_TOGGLE_VALUE_ACCESSOR": () => (/* binding */ MAT_SLIDE_TOGGLE_VALUE_ACCESSOR),
/* harmony export */   "MatSlideToggle": () => (/* binding */ MatSlideToggle),
/* harmony export */   "MatSlideToggleChange": () => (/* binding */ MatSlideToggleChange),
/* harmony export */   "MatSlideToggleModule": () => (/* binding */ MatSlideToggleModule),
/* harmony export */   "MatSlideToggleRequiredValidator": () => (/* binding */ MatSlideToggleRequiredValidator),
/* harmony export */   "_MatSlideToggleBase": () => (/* binding */ _MatSlideToggleBase),
/* harmony export */   "_MatSlideToggleRequiredValidatorModule": () => (/* binding */ _MatSlideToggleRequiredValidatorModule)
/* harmony export */ });
/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/observers */ 35837);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser/animations */ 3184);
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/material/core */ 88133);
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/coercion */ 76484);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ 90587);
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/a11y */ 84128);










/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token to be used to override the default options for `mat-slide-toggle`. */

const _c0 = ["input"];

const _c1 = function (a0) {
  return {
    enterDuration: a0
  };
};

const _c2 = ["*"];
const MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.InjectionToken('mat-slide-toggle-default-options', {
  providedIn: 'root',
  factory: () => ({
    disableToggleValue: false
  })
}); // Increasing integer for generating unique ids for slide-toggle components.

let nextUniqueId = 0;
/** @docs-private */

const MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NG_VALUE_ACCESSOR,
  useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => MatSlideToggle),
  multi: true
};
/** Change event object emitted by a MatSlideToggle. */

class MatSlideToggleChange {
  constructor(
  /** The source MatSlideToggle of the event. */
  source,
  /** The new `checked` value of the MatSlideToggle. */
  checked) {
    this.source = source;
    this.checked = checked;
  }

} // Boilerplate for applying mixins to MatSlideToggle.

/** @docs-private */


const _MatSlideToggleMixinBase = (0,_angular_material_core__WEBPACK_IMPORTED_MODULE_2__.mixinTabIndex)((0,_angular_material_core__WEBPACK_IMPORTED_MODULE_2__.mixinColor)((0,_angular_material_core__WEBPACK_IMPORTED_MODULE_2__.mixinDisableRipple)((0,_angular_material_core__WEBPACK_IMPORTED_MODULE_2__.mixinDisabled)(class {
  constructor(_elementRef) {
    this._elementRef = _elementRef;
  }

}))));

class _MatSlideToggleBase extends _MatSlideToggleMixinBase {
  constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode, idPrefix) {
    super(elementRef);
    this._focusMonitor = _focusMonitor;
    this._changeDetectorRef = _changeDetectorRef;
    this.defaults = defaults;

    this._onChange = _ => {};

    this._onTouched = () => {};

    this._required = false;
    this._checked = false;
    /** Name value will be applied to the input element if present. */

    this.name = null;
    /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */

    this.labelPosition = 'after';
    /** Used to set the aria-label attribute on the underlying input element. */

    this.ariaLabel = null;
    /** Used to set the aria-labelledby attribute on the underlying input element. */

    this.ariaLabelledby = null;
    /** An event will be dispatched each time the slide-toggle changes its value. */

    this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    /**
     * An event will be dispatched each time the slide-toggle input is toggled.
     * This event is always emitted when the user toggles the slide toggle, but this does not mean
     * the slide toggle's value has changed.
     */

    this.toggleChange = new _angular_core__WEBPACK_IMPORTED_MODULE_0__.EventEmitter();
    this.tabIndex = parseInt(tabIndex) || 0;
    this.color = this.defaultColor = defaults.color || 'accent';
    this._noopAnimations = animationMode === 'NoopAnimations';
    this.id = this._uniqueId = `${idPrefix}${++nextUniqueId}`;
  }
  /** Whether the slide-toggle is required. */


  get required() {
    return this._required;
  }

  set required(value) {
    this._required = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(value);
  }
  /** Whether the slide-toggle element is checked or not. */


  get checked() {
    return this._checked;
  }

  set checked(value) {
    this._checked = (0,_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__.coerceBooleanProperty)(value);

    this._changeDetectorRef.markForCheck();
  }
  /** Returns the unique id for the visual hidden input. */


  get inputId() {
    return `${this.id || this._uniqueId}-input`;
  }

  ngAfterContentInit() {
    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {
      if (focusOrigin === 'keyboard' || focusOrigin === 'program') {
        this._focused = true;
      } else if (!focusOrigin) {
        // When a focused element becomes disabled, the browser *immediately* fires a blur event.
        // Angular does not expect events to be raised during change detection, so any state
        // change (such as a form control's ng-touched) will cause a changed-after-checked error.
        // See https://github.com/angular/angular/issues/17793. To work around this, we defer
        // telling the form control it has been touched until the next tick.
        Promise.resolve().then(() => {
          this._focused = false;

          this._onTouched();

          this._changeDetectorRef.markForCheck();
        });
      }
    });
  }

  ngOnDestroy() {
    this._focusMonitor.stopMonitoring(this._elementRef);
  }
  /** Implemented as part of ControlValueAccessor. */


  writeValue(value) {
    this.checked = !!value;
  }
  /** Implemented as part of ControlValueAccessor. */


  registerOnChange(fn) {
    this._onChange = fn;
  }
  /** Implemented as part of ControlValueAccessor. */


  registerOnTouched(fn) {
    this._onTouched = fn;
  }
  /** Implemented as a part of ControlValueAccessor. */


  setDisabledState(isDisabled) {
    this.disabled = isDisabled;

    this._changeDetectorRef.markForCheck();
  }
  /** Toggles the checked state of the slide-toggle. */


  toggle() {
    this.checked = !this.checked;

    this._onChange(this.checked);
  }
  /**
   * Emits a change event on the `change` output. Also notifies the FormControl about the change.
   */


  _emitChangeEvent() {
    this._onChange(this.checked);

    this.change.emit(this._createChangeEvent(this.checked));
  }

}

_MatSlideToggleBase.ɵfac = function _MatSlideToggleBase_Factory(t) {
  _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinvalidFactory"]();
};

_MatSlideToggleBase.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: _MatSlideToggleBase,
  inputs: {
    name: "name",
    id: "id",
    labelPosition: "labelPosition",
    ariaLabel: ["aria-label", "ariaLabel"],
    ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
    ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
    required: "required",
    checked: "checked"
  },
  outputs: {
    change: "change",
    toggleChange: "toggleChange"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_MatSlideToggleBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.FocusMonitor
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: undefined
    }, {
      type: undefined
    }, {
      type: undefined
    }, {
      type: undefined
    }];
  }, {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    labelPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['aria-label']
    }],
    ariaLabelledby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['aria-labelledby']
    }],
    ariaDescribedby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input,
      args: ['aria-describedby']
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    checked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Input
    }],
    change: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }],
    toggleChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Output
    }]
  });
})();
/** Represents a slidable "switch" toggle that can be moved between on and off. */


class MatSlideToggle extends _MatSlideToggleBase {
  constructor(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode) {
    super(elementRef, focusMonitor, changeDetectorRef, tabIndex, defaults, animationMode, 'mat-slide-toggle-');
  }

  _createChangeEvent(isChecked) {
    return new MatSlideToggleChange(this, isChecked);
  }
  /** Method being called whenever the underlying input emits a change event. */


  _onChangeEvent(event) {
    // We always have to stop propagation on the change event.
    // Otherwise the change event, from the input element, will bubble up and
    // emit its event object to the component's `change` output.
    event.stopPropagation();
    this.toggleChange.emit(); // When the slide toggle's config disables toggle change event by setting
    // `disableToggleValue: true`, the slide toggle's value does not change, and the
    // checked state of the underlying input needs to be changed back.

    if (this.defaults.disableToggleValue) {
      this._inputElement.nativeElement.checked = this.checked;
      return;
    } // Sync the value from the underlying input element with the component instance.


    this.checked = this._inputElement.nativeElement.checked; // Emit our custom change event only if the underlying input emitted one. This ensures that
    // there is no change event, when the checked state changes programmatically.

    this._emitChangeEvent();
  }
  /** Method being called whenever the slide-toggle has been clicked. */


  _onInputClick(event) {
    // We have to stop propagation for click events on the visual hidden input element.
    // By default, when a user clicks on a label element, a generated click event will be
    // dispatched on the associated input element. Since we are using a label element as our
    // root container, the click event on the `slide-toggle` will be executed twice.
    // The real click event will bubble up, and the generated click event also tries to bubble up.
    // This will lead to multiple click events.
    // Preventing bubbling for the second event will solve that issue.
    event.stopPropagation();
  }
  /** Focuses the slide-toggle. */


  focus(options, origin) {
    if (origin) {
      this._focusMonitor.focusVia(this._inputElement, origin, options);
    } else {
      this._inputElement.nativeElement.focus(options);
    }
  }
  /** Method being called whenever the label text changes. */


  _onLabelTextChange() {
    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the
    // slide-toggle component will be only marked for check, but no actual change detection runs
    // automatically. Instead of going back into the zone in order to trigger a change detection
    // which causes *all* components to be checked (if explicitly marked or not using OnPush),
    // we only trigger an explicit change detection for the slide-toggle view and its children.
    this._changeDetectorRef.detectChanges();
  }

}

MatSlideToggle.ɵfac = function MatSlideToggle_Factory(t) {
  return new (t || MatSlideToggle)(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.FocusMonitor), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_0__.ANIMATION_MODULE_TYPE, 8));
};

MatSlideToggle.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineComponent"]({
  type: MatSlideToggle,
  selectors: [["mat-slide-toggle"]],
  viewQuery: function MatSlideToggle_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵviewQuery"](_c0, 5);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵloadQuery"]()) && (ctx._inputElement = _t.first);
    }
  },
  hostAttrs: [1, "mat-slide-toggle"],
  hostVars: 13,
  hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵhostProperty"]("id", ctx.id);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("tabindex", null)("aria-label", null)("aria-labelledby", null)("name", null);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("mat-checked", ctx.checked)("mat-disabled", ctx.disabled)("mat-slide-toggle-label-before", ctx.labelPosition == "before")("_mat-animation-noopable", ctx._noopAnimations);
    }
  },
  inputs: {
    disabled: "disabled",
    disableRipple: "disableRipple",
    color: "color",
    tabIndex: "tabIndex"
  },
  exportAs: ["matSlideToggle"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c2,
  decls: 14,
  vars: 20,
  consts: [[1, "mat-slide-toggle-label"], ["label", ""], [1, "mat-slide-toggle-bar"], ["type", "checkbox", "role", "switch", 1, "mat-slide-toggle-input", "cdk-visually-hidden", 3, "id", "required", "tabIndex", "checked", "disabled", "change", "click"], ["input", ""], [1, "mat-slide-toggle-thumb-container"], [1, "mat-slide-toggle-thumb"], ["mat-ripple", "", 1, "mat-slide-toggle-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleCentered", "matRippleRadius", "matRippleAnimation"], [1, "mat-ripple-element", "mat-slide-toggle-persistent-ripple"], [1, "mat-slide-toggle-content", 3, "cdkObserveContent"], ["labelContent", ""], [2, "display", "none"]],
  template: function MatSlideToggle_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](0, "label", 0, 1)(2, "span", 2)(3, "input", 3, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("change", function MatSlideToggle_Template_input_change_3_listener($event) {
        return ctx._onChangeEvent($event);
      })("click", function MatSlideToggle_Template_input_click_3_listener($event) {
        return ctx._onInputClick($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](5, "span", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](6, "span", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](7, "span", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelement"](8, "span", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()()();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](9, "span", 9, 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵlistener"]("cdkObserveContent", function MatSlideToggle_Template_span_cdkObserveContent_9_listener() {
        return ctx._onLabelTextChange();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementStart"](11, "span", 11);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵtext"](12, "\xA0");
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵprojection"](13);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵelementEnd"]()();
    }

    if (rf & 2) {
      const _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](1);

      const _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵreference"](10);

      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("for", ctx.inputId);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵclassProp"]("mat-slide-toggle-bar-no-side-margin", !_r2.textContent || !_r2.textContent.trim());
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("id", ctx.inputId)("required", ctx.required)("tabIndex", ctx.tabIndex)("checked", ctx.checked)("disabled", ctx.disabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵattribute"]("name", ctx.name)("aria-checked", ctx.checked)("aria-label", ctx.ariaLabel)("aria-labelledby", ctx.ariaLabelledby)("aria-describedby", ctx.ariaDescribedby);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵproperty"]("matRippleTrigger", _r0)("matRippleDisabled", ctx.disableRipple || ctx.disabled)("matRippleCentered", true)("matRippleRadius", 20)("matRippleAnimation", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵpureFunction1"](18, _c1, ctx._noopAnimations ? 0 : 150));
    }
  },
  dependencies: [_angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatRipple, _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__.CdkObserveContent],
  styles: [".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.mat-slide-toggle-input:focus~.mat-slide-toggle-thumb-container .mat-focus-indicator::before{content:\"\"}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}"],
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSlideToggle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Component,
    args: [{
      selector: 'mat-slide-toggle',
      exportAs: 'matSlideToggle',
      host: {
        'class': 'mat-slide-toggle',
        '[id]': 'id',
        // Needs to be removed since it causes some a11y issues (see #21266).
        '[attr.tabindex]': 'null',
        '[attr.aria-label]': 'null',
        '[attr.aria-labelledby]': 'null',
        '[attr.name]': 'null',
        '[class.mat-checked]': 'checked',
        '[class.mat-disabled]': 'disabled',
        '[class.mat-slide-toggle-label-before]': 'labelPosition == "before"',
        '[class._mat-animation-noopable]': '_noopAnimations'
      },
      providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR],
      inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewEncapsulation.None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectionStrategy.OnPush,
      template: "<label [attr.for]=\"inputId\" class=\"mat-slide-toggle-label\" #label>\n  <span class=\"mat-slide-toggle-bar\"\n       [class.mat-slide-toggle-bar-no-side-margin]=\"!labelContent.textContent || !labelContent.textContent.trim()\">\n\n    <input #input class=\"mat-slide-toggle-input cdk-visually-hidden\" type=\"checkbox\"\n           role=\"switch\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [tabIndex]=\"tabIndex\"\n           [checked]=\"checked\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [attr.aria-checked]=\"checked\"\n           [attr.aria-label]=\"ariaLabel\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-describedby]=\"ariaDescribedby\"\n           (change)=\"_onChangeEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n\n    <span class=\"mat-slide-toggle-thumb-container\">\n      <span class=\"mat-slide-toggle-thumb\"></span>\n      <span class=\"mat-slide-toggle-ripple mat-focus-indicator\" mat-ripple\n           [matRippleTrigger]=\"label\"\n           [matRippleDisabled]=\"disableRipple || disabled\"\n           [matRippleCentered]=\"true\"\n           [matRippleRadius]=\"20\"\n           [matRippleAnimation]=\"{enterDuration: _noopAnimations ? 0 : 150}\">\n\n        <span class=\"mat-ripple-element mat-slide-toggle-persistent-ripple\"></span>\n      </span>\n    </span>\n\n  </span>\n\n  <span class=\"mat-slide-toggle-content\" #labelContent (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n",
      styles: [".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.mat-slide-toggle-input:focus~.mat-slide-toggle-thumb-container .mat-focus-indicator::before{content:\"\"}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ElementRef
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__.FocusMonitor
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ChangeDetectorRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Attribute,
        args: ['tabindex']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Optional
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Inject,
        args: [_angular_core__WEBPACK_IMPORTED_MODULE_0__.ANIMATION_MODULE_TYPE]
      }]
    }];
  }, {
    _inputElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.ViewChild,
      args: ['input']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


const MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_1__.NG_VALIDATORS,
  useExisting: (0,_angular_core__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(() => MatSlideToggleRequiredValidator),
  multi: true
};
/**
 * Validator for Material slide-toggle components with the required attribute in a
 * template-driven form. The default validator for required form controls asserts
 * that the control value is not undefined but that is not appropriate for a slide-toggle
 * where the value is always defined.
 *
 * Required slide-toggle form controls are valid when checked.
 */

class MatSlideToggleRequiredValidator extends _angular_forms__WEBPACK_IMPORTED_MODULE_1__.CheckboxRequiredValidator {}

MatSlideToggleRequiredValidator.ɵfac = /* @__PURE__ */function () {
  let ɵMatSlideToggleRequiredValidator_BaseFactory;
  return function MatSlideToggleRequiredValidator_Factory(t) {
    return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵgetInheritedFactory"](MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator);
  };
}();

MatSlideToggleRequiredValidator.ɵdir = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineDirective"]({
  type: MatSlideToggleRequiredValidator,
  selectors: [["mat-slide-toggle", "required", "", "formControlName", ""], ["mat-slide-toggle", "required", "", "formControl", ""], ["mat-slide-toggle", "required", "", "ngModel", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵProvidersFeature"]([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵInheritDefinitionFeature"]]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSlideToggleRequiredValidator, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.Directive,
    args: [{
      selector: `mat-slide-toggle[required][formControlName],
             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,
      providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** This module is used by both original and MDC-based slide-toggle implementations. */


class _MatSlideToggleRequiredValidatorModule {}

_MatSlideToggleRequiredValidatorModule.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) {
  return new (t || _MatSlideToggleRequiredValidatorModule)();
};

_MatSlideToggleRequiredValidatorModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: _MatSlideToggleRequiredValidatorModule
});
_MatSlideToggleRequiredValidatorModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](_MatSlideToggleRequiredValidatorModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      exports: [MatSlideToggleRequiredValidator],
      declarations: [MatSlideToggleRequiredValidator]
    }]
  }], null, null);
})();

class MatSlideToggleModule {}

MatSlideToggleModule.ɵfac = function MatSlideToggleModule_Factory(t) {
  return new (t || MatSlideToggleModule)();
};

MatSlideToggleModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({
  type: MatSlideToggleModule
});
MatSlideToggleModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({
  imports: [_MatSlideToggleRequiredValidatorModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatRippleModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatCommonModule, _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__.ObserversModule, _MatSlideToggleRequiredValidatorModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatCommonModule]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵsetClassMetadata"](MatSlideToggleModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_0__.NgModule,
    args: [{
      imports: [_MatSlideToggleRequiredValidatorModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatRippleModule, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatCommonModule, _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_5__.ObserversModule],
      exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, _angular_material_core__WEBPACK_IMPORTED_MODULE_2__.MatCommonModule],
      declarations: [MatSlideToggle]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ 49876:
/*!*******************************************************************!*\
  !*** ./node_modules/angularx-qrcode/fesm2015/angularx-qrcode.mjs ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "QRCodeComponent": () => (/* binding */ QRCodeComponent),
/* harmony export */   "QRCodeModule": () => (/* binding */ QRCodeModule)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ 34929);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _cordobo_qrcode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @cordobo/qrcode */ 28426);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 50318);





const _c0 = ["qrcElement"];

class QRCodeComponent {
  constructor(renderer, sanitizer) {
    this.renderer = renderer;
    this.sanitizer = sanitizer;
    this.allowEmptyString = false;
    this.colorDark = "#000000ff";
    this.colorLight = "#ffffffff";
    this.cssClass = "qrcode";
    this.elementType = "canvas";
    this.errorCorrectionLevel = "M";
    this.margin = 4;
    this.qrdata = "";
    this.scale = 4;
    this.width = 10;
    this.qrCodeURL = new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter();
    this.context = null;
  }

  ngOnChanges() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
      yield this.createQRCode();
    });
  }

  isValidQrCodeText(data) {
    if (this.allowEmptyString === false) {
      return !(typeof data === "undefined" || data === "" || data === "null" || data === null);
    }

    return !(typeof data === "undefined");
  }

  toDataURL(qrCodeConfig) {
    return new Promise((resolve, reject) => {
      _cordobo_qrcode__WEBPACK_IMPORTED_MODULE_0__.toDataURL(this.qrdata, qrCodeConfig, (err, url) => {
        if (err) {
          reject(err);
        } else {
          resolve(url);
        }
      });
    });
  }

  toCanvas(canvas, qrCodeConfig) {
    return new Promise((resolve, reject) => {
      _cordobo_qrcode__WEBPACK_IMPORTED_MODULE_0__.toCanvas(canvas, this.qrdata, qrCodeConfig, error => {
        if (error) {
          reject(error);
        } else {
          resolve("success");
        }
      });
    });
  }

  toSVG(qrCodeConfig) {
    return new Promise((resolve, reject) => {
      _cordobo_qrcode__WEBPACK_IMPORTED_MODULE_0__.toString(this.qrdata, qrCodeConfig, (err, url) => {
        if (err) {
          reject(err);
        } else {
          resolve(url);
        }
      });
    });
  }

  renderElement(element) {
    for (const node of this.qrcElement.nativeElement.childNodes) {
      this.renderer.removeChild(this.qrcElement.nativeElement, node);
    }

    this.renderer.appendChild(this.qrcElement.nativeElement, element);
  }

  createQRCode() {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__awaiter)(this, void 0, void 0, function* () {
      if (this.version && this.version > 40) {
        console.warn("[angularx-qrcode] max value for `version` is 40");
        this.version = 40;
      } else if (this.version && this.version < 1) {
        console.warn("[angularx-qrcode]`min value for `version` is 1");
        this.version = 1;
      } else if (this.version !== undefined && isNaN(this.version)) {
        console.warn("[angularx-qrcode] version should be a number, defaulting to auto.");
        this.version = undefined;
      }

      try {
        if (!this.isValidQrCodeText(this.qrdata)) {
          throw new Error("[angularx-qrcode] Field `qrdata` is empty, set 'allowEmptyString=\"true\"' to overwrite this behaviour.");
        }

        if (this.isValidQrCodeText(this.qrdata) && this.qrdata === "") {
          this.qrdata = " ";
        }

        const config = {
          color: {
            dark: this.colorDark,
            light: this.colorLight
          },
          errorCorrectionLevel: this.errorCorrectionLevel,
          margin: this.margin,
          scale: this.scale,
          type: this.elementType,
          version: this.version,
          width: this.width
        };
        const centerImageSrc = this.imageSrc;
        const centerImageHeight = this.imageHeight || 40;
        const centerImageWidth = this.imageWidth || 40;

        switch (this.elementType) {
          case "canvas":
            const canvasElement = this.renderer.createElement("canvas");
            this.context = canvasElement.getContext("2d");
            this.toCanvas(canvasElement, config).then(() => {
              if (this.ariaLabel) {
                this.renderer.setAttribute(canvasElement, "aria-label", `${this.ariaLabel}`);
              }

              if (this.title) {
                this.renderer.setAttribute(canvasElement, "title", `${this.title}`);
              }

              if (centerImageSrc && this.context) {
                this.centerImage = new Image(centerImageWidth, centerImageHeight);

                if (centerImageSrc !== this.centerImage.src) {
                  this.centerImage.src = centerImageSrc;
                }

                if (centerImageHeight !== this.centerImage.height) {
                  this.centerImage.height = centerImageHeight;
                }

                if (centerImageWidth !== this.centerImage.width) {
                  this.centerImage.width = centerImageWidth;
                }

                const centerImage = this.centerImage;

                if (centerImage) {
                  centerImage.onload = () => {
                    var _a;

                    (_a = this.context) === null || _a === void 0 ? void 0 : _a.drawImage(centerImage, canvasElement.width / 2 - centerImageWidth / 2, canvasElement.height / 2 - centerImageHeight / 2, centerImageWidth, centerImageHeight);
                  };
                }
              }

              this.renderElement(canvasElement);
              this.emitQRCodeURL(canvasElement);
            }).catch(e => {
              console.error("[angularx-qrcode] canvas error:", e);
            });
            break;

          case "svg":
            const svgParentElement = this.renderer.createElement("div");
            this.toSVG(config).then(svgString => {
              this.renderer.setProperty(svgParentElement, "innerHTML", svgString);
              const svgElement = svgParentElement.firstChild;
              this.renderer.setAttribute(svgElement, "height", `${this.width}`);
              this.renderer.setAttribute(svgElement, "width", `${this.width}`);
              this.renderElement(svgElement);
              this.emitQRCodeURL(svgElement);
            }).catch(e => {
              console.error("[angularx-qrcode] svg error:", e);
            });
            break;

          case "url":
          case "img":
          default:
            const imgElement = this.renderer.createElement("img");
            this.toDataURL(config).then(dataUrl => {
              if (this.alt) {
                imgElement.setAttribute("alt", this.alt);
              }

              if (this.ariaLabel) {
                imgElement.setAttribute("aria-label", this.ariaLabel);
              }

              imgElement.setAttribute("src", dataUrl);

              if (this.title) {
                imgElement.setAttribute("title", this.title);
              }

              this.renderElement(imgElement);
              this.emitQRCodeURL(imgElement);
            }).catch(e => {
              console.error("[angularx-qrcode] img/url error:", e);
            });
        }
      } catch (e) {
        console.error("[angularx-qrcode] Error generating QR Code:", e.message);
      }
    });
  }

  emitQRCodeURL(element) {
    const className = element.constructor.name;

    if (className === SVGSVGElement.name) {
      const svgHTML = element.outerHTML;
      const blob = new Blob([svgHTML], {
        type: "image/svg+xml"
      });
      const urlSvg = URL.createObjectURL(blob);
      const urlSanitized = this.sanitizer.bypassSecurityTrustUrl(urlSvg);
      this.qrCodeURL.emit(urlSanitized);
      return;
    }

    let urlImage = "";

    if (className === HTMLCanvasElement.name) {
      urlImage = element.toDataURL("image/png");
    }

    if (className === HTMLImageElement.name) {
      urlImage = element.src;
    }

    fetch(urlImage).then(urlResponse => urlResponse.blob()).then(blob => URL.createObjectURL(blob)).then(url => this.sanitizer.bypassSecurityTrustUrl(url)).then(urlSanitized => {
      this.qrCodeURL.emit(urlSanitized);
    }).catch(error => {
      console.error("[angularx-qrcode] Error when fetching image/png URL: " + error);
    });
  }

}

QRCodeComponent.ɵfac = function QRCodeComponent_Factory(t) {
  return new (t || QRCodeComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.DomSanitizer));
};

QRCodeComponent.ɵcmp = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: QRCodeComponent,
  selectors: [["qrcode"]],
  viewQuery: function QRCodeComponent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵviewQuery"](_c0, 7);
    }

    if (rf & 2) {
      let _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵloadQuery"]()) && (ctx.qrcElement = _t.first);
    }
  },
  inputs: {
    allowEmptyString: "allowEmptyString",
    colorDark: "colorDark",
    colorLight: "colorLight",
    cssClass: "cssClass",
    elementType: "elementType",
    errorCorrectionLevel: "errorCorrectionLevel",
    imageSrc: "imageSrc",
    imageHeight: "imageHeight",
    imageWidth: "imageWidth",
    margin: "margin",
    qrdata: "qrdata",
    scale: "scale",
    version: "version",
    width: "width",
    alt: "alt",
    ariaLabel: "ariaLabel",
    title: "title"
  },
  outputs: {
    qrCodeURL: "qrCodeURL"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵNgOnChangesFeature"]],
  decls: 2,
  vars: 2,
  consts: [["qrcElement", ""]],
  template: function QRCodeComponent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelement"](0, "div", null, 0);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassMap"](ctx.cssClass);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](QRCodeComponent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Component,
    args: [{
      selector: "qrcode",
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush,
      template: `<div #qrcElement [class]="cssClass"></div>`
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.DomSanitizer
    }];
  }, {
    allowEmptyString: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    colorDark: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    colorLight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    cssClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    elementType: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    errorCorrectionLevel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    imageSrc: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    imageHeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    imageWidth: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    margin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    qrdata: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    scale: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    version: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    width: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    alt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    title: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Input
    }],
    qrCodeURL: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.Output
    }],
    qrcElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild,
      args: ["qrcElement", {
        static: true
      }]
    }]
  });
})();

class QRCodeModule {}

QRCodeModule.ɵfac = function QRCodeModule_Factory(t) {
  return new (t || QRCodeModule)();
};

QRCodeModule.ɵmod = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
  type: QRCodeModule
});
QRCodeModule.ɵinj = /* @__PURE__ */_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
  providers: []
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](QRCodeModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule,
    args: [{
      providers: [],
      declarations: [QRCodeComponent],
      exports: [QRCodeComponent]
    }]
  }], null, null);
})();



/***/ })

}]);
//# sourceMappingURL=projects_test_src_app_test_test_module_ts.js.map